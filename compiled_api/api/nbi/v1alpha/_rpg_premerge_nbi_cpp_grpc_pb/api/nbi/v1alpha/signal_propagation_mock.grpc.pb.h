// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/nbi/v1alpha/signal_propagation.proto

#ifndef GRPC_MOCK_api_2fnbi_2fv1alpha_2fsignal_5fpropagation_2eproto__INCLUDED
#define GRPC_MOCK_api_2fnbi_2fv1alpha_2fsignal_5fpropagation_2eproto__INCLUDED

#include "api/nbi/v1alpha/signal_propagation.pb.h"
#include "api/nbi/v1alpha/signal_propagation.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/sync_stream.h>
#include <gmock/gmock.h>
namespace aalyria {
namespace spacetime {
namespace api {
namespace nbi {
namespace v1alpha {

class MockSignalPropagationStub : public SignalPropagation::StubInterface {
 public:
  MOCK_METHOD3(Evaluate, ::grpc::Status(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationResponse* response));
  MOCK_METHOD3(AsyncEvaluateRaw, ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationResponse>*(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncEvaluateRaw, ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationResponse>*(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::SignalPropagationRequest& request, ::grpc::CompletionQueue* cq));
};

}  // namespace v1alpha
}  // namespace nbi
}  // namespace api
}  // namespace spacetime
}  // namespace aalyria


#endif  // GRPC_MOCK_api_2fnbi_2fv1alpha_2fsignal_5fpropagation_2eproto__INCLUDED
