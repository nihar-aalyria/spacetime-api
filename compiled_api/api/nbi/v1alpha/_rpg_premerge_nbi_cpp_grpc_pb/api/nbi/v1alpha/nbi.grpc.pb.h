// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/nbi/v1alpha/nbi.proto
#ifndef GRPC_api_2fnbi_2fv1alpha_2fnbi_2eproto__INCLUDED
#define GRPC_api_2fnbi_2fv1alpha_2fnbi_2eproto__INCLUDED

#include "api/nbi/v1alpha/nbi.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace aalyria {
namespace spacetime {
namespace api {
namespace nbi {
namespace v1alpha {

class NetOps final {
 public:
  static constexpr char const* service_full_name() {
    return "aalyria.spacetime.api.nbi.v1alpha.NetOps";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncGetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncGetEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncGetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncGetEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncCreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncCreateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncCreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncCreateEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncUpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncUpdateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncUpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncUpdateEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>> AsyncListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>>(AsyncListEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>> PrepareAsyncListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>>(PrepareAsyncListEntitiesRaw(context, request, cq));
    }
    virtual ::grpc::Status ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>> AsyncListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>>(AsyncListEntitiesOverTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>> PrepareAsyncListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>>(PrepareAsyncListEntitiesOverTimeRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>> AsyncDeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>>(AsyncDeleteEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>> PrepareAsyncDeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>>(PrepareAsyncDeleteEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>> AsyncLoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>>(AsyncLoadScenarioRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>> PrepareAsyncLoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>>(PrepareAsyncLoadScenarioRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* AsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* PrepareAsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* AsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* PrepareAsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* AsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* PrepareAsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* AsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* PrepareAsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncGetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncGetEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncGetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncGetEntityRaw(context, request, cq));
    }
    ::grpc::Status CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncCreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncCreateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncCreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncCreateEntityRaw(context, request, cq));
    }
    ::grpc::Status UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> AsyncUpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(AsyncUpdateEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>> PrepareAsyncUpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>>(PrepareAsyncUpdateEntityRaw(context, request, cq));
    }
    ::grpc::Status ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>> AsyncListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>>(AsyncListEntitiesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>> PrepareAsyncListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>>(PrepareAsyncListEntitiesRaw(context, request, cq));
    }
    ::grpc::Status ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>> AsyncListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>>(AsyncListEntitiesOverTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>> PrepareAsyncListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>>(PrepareAsyncListEntitiesOverTimeRaw(context, request, cq));
    }
    ::grpc::Status DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>> AsyncDeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>>(AsyncDeleteEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>> PrepareAsyncDeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>>(PrepareAsyncDeleteEntityRaw(context, request, cq));
    }
    ::grpc::Status LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>> AsyncLoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>>(AsyncLoadScenarioRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>> PrepareAsyncLoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>>(PrepareAsyncLoadScenarioRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) override;
      void GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) override;
      void CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)>) override;
      void UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, std::function<void(::grpc::Status)>) override;
      void ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, std::function<void(::grpc::Status)>) override;
      void LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* AsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* PrepareAsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* AsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* PrepareAsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* AsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* PrepareAsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* AsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* PrepareAsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* AsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* PrepareAsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_ListEntities_;
    const ::grpc::internal::RpcMethod rpcmethod_ListEntitiesOverTime_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_LoadScenario_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response);
    virtual ::grpc::Status CreateEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response);
    virtual ::grpc::Status UpdateEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response);
    virtual ::grpc::Status ListEntities(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response);
    virtual ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response);
    virtual ::grpc::Status DeleteEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response);
    virtual ::grpc::Status LoadScenario(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntity() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntity(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateEntity() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntity(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateEntity(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListEntities() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntities(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntitiesOverTime(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntity(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoadScenario() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadScenario(::grpc::ServerContext* context, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::grpc::ServerAsyncResponseWriter< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetEntity<WithAsyncMethod_CreateEntity<WithAsyncMethod_UpdateEntity<WithAsyncMethod_ListEntities<WithAsyncMethod_ListEntitiesOverTime<WithAsyncMethod_DeleteEntity<WithAsyncMethod_LoadScenario<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntity() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) { return this->GetEntity(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntity(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateEntity() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) { return this->CreateEntity(context, request, response); }));}
    void SetMessageAllocatorFor_CreateEntity(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) { return this->UpdateEntity(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateEntity(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListEntities() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response) { return this->ListEntities(context, request, response); }));}
    void SetMessageAllocatorFor_ListEntities(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response) { return this->ListEntitiesOverTime(context, request, response); }));}
    void SetMessageAllocatorFor_ListEntitiesOverTime(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEntitiesOverTime(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response) { return this->DeleteEntity(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteEntity(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LoadScenario() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response) { return this->LoadScenario(context, request, response); }));}
    void SetMessageAllocatorFor_LoadScenario(
        ::grpc::MessageAllocator< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoadScenario(
      ::grpc::CallbackServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetEntity<WithCallbackMethod_CreateEntity<WithCallbackMethod_UpdateEntity<WithCallbackMethod_ListEntities<WithCallbackMethod_ListEntitiesOverTime<WithCallbackMethod_DeleteEntity<WithCallbackMethod_LoadScenario<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntity() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateEntity() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListEntities() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoadScenario() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntity() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateEntity() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListEntities() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntities(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEntitiesOverTime(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoadScenario() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoadScenario(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntity() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateEntity() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListEntities() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListEntities(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEntities(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListEntitiesOverTime(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEntitiesOverTime(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LoadScenario() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LoadScenario(context, request, response); }));
    }
    ~WithRawCallbackMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoadScenario(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntity() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* streamer) {
                       return this->StreamedGetEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest,::aalyria::spacetime::api::nbi::v1alpha::Entity>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateEntity() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* streamer) {
                       return this->StreamedCreateEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest,::aalyria::spacetime::api::nbi::v1alpha::Entity>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateEntity() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity>* streamer) {
                       return this->StreamedUpdateEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::Entity* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest,::aalyria::spacetime::api::nbi::v1alpha::Entity>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListEntities : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListEntities() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* streamer) {
                       return this->StreamedListEntities(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListEntities() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListEntities(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListEntities(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest,::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListEntitiesOverTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListEntitiesOverTime() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* streamer) {
                       return this->StreamedListEntitiesOverTime(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListEntitiesOverTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListEntitiesOverTime(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListEntitiesOverTime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest,::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteEntity() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* streamer) {
                       return this->StreamedDeleteEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteEntity(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest,::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoadScenario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoadScenario() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* streamer) {
                       return this->StreamedLoadScenario(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LoadScenario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoadScenario(::grpc::ServerContext* /*context*/, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* /*request*/, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoadScenario(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest,::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetEntity<WithStreamedUnaryMethod_CreateEntity<WithStreamedUnaryMethod_UpdateEntity<WithStreamedUnaryMethod_ListEntities<WithStreamedUnaryMethod_ListEntitiesOverTime<WithStreamedUnaryMethod_DeleteEntity<WithStreamedUnaryMethod_LoadScenario<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetEntity<WithStreamedUnaryMethod_CreateEntity<WithStreamedUnaryMethod_UpdateEntity<WithStreamedUnaryMethod_ListEntities<WithStreamedUnaryMethod_ListEntitiesOverTime<WithStreamedUnaryMethod_DeleteEntity<WithStreamedUnaryMethod_LoadScenario<Service > > > > > > > StreamedService;
};

}  // namespace v1alpha
}  // namespace nbi
}  // namespace api
}  // namespace spacetime
}  // namespace aalyria


#endif  // GRPC_api_2fnbi_2fv1alpha_2fnbi_2eproto__INCLUDED
