// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/nbi/v1alpha/nbi.proto

#include "api/nbi/v1alpha/nbi.pb.h"
#include "api/nbi/v1alpha/nbi.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace aalyria {
namespace spacetime {
namespace api {
namespace nbi {
namespace v1alpha {

static const char* NetOps_method_names[] = {
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/GetEntity",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/CreateEntity",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/UpdateEntity",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntities",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntitiesOverTime",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/DeleteEntity",
  "/aalyria.spacetime.api.nbi.v1alpha.NetOps/LoadScenario",
};

std::unique_ptr< NetOps::Stub> NetOps::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< NetOps::Stub> stub(new NetOps::Stub(channel, options));
  return stub;
}

NetOps::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_GetEntity_(NetOps_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateEntity_(NetOps_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateEntity_(NetOps_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListEntities_(NetOps_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListEntitiesOverTime_(NetOps_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteEntity_(NetOps_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_LoadScenario_(NetOps_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status NetOps::Stub::GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetEntity_, context, request, response);
}

void NetOps::Stub::async::GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEntity_, context, request, response, std::move(f));
}

void NetOps::Stub::async::GetEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetEntity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::PrepareAsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetEntity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::AsyncGetEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetEntityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateEntity_, context, request, response);
}

void NetOps::Stub::async::CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateEntity_, context, request, response, std::move(f));
}

void NetOps::Stub::async::CreateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateEntity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::PrepareAsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateEntity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::AsyncCreateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateEntityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateEntity_, context, request, response);
}

void NetOps::Stub::async::UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEntity_, context, request, response, std::move(f));
}

void NetOps::Stub::async::UpdateEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateEntity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::PrepareAsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateEntity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::Entity>* NetOps::Stub::AsyncUpdateEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateEntityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListEntities_, context, request, response);
}

void NetOps::Stub::async::ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEntities_, context, request, response, std::move(f));
}

void NetOps::Stub::async::ListEntities(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEntities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* NetOps::Stub::PrepareAsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListEntities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse>* NetOps::Stub::AsyncListEntitiesRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListEntitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListEntitiesOverTime_, context, request, response);
}

void NetOps::Stub::async::ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEntitiesOverTime_, context, request, response, std::move(f));
}

void NetOps::Stub::async::ListEntitiesOverTime(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListEntitiesOverTime_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* NetOps::Stub::PrepareAsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListEntitiesOverTime_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse>* NetOps::Stub::AsyncListEntitiesOverTimeRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListEntitiesOverTimeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteEntity_, context, request, response);
}

void NetOps::Stub::async::DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteEntity_, context, request, response, std::move(f));
}

void NetOps::Stub::async::DeleteEntity(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteEntity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* NetOps::Stub::PrepareAsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteEntity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse>* NetOps::Stub::AsyncDeleteEntityRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteEntityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status NetOps::Stub::LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_LoadScenario_, context, request, response);
}

void NetOps::Stub::async::LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_LoadScenario_, context, request, response, std::move(f));
}

void NetOps::Stub::async::LoadScenario(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_LoadScenario_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* NetOps::Stub::PrepareAsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_LoadScenario_, context, request);
}

::grpc::ClientAsyncResponseReader< ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse>* NetOps::Stub::AsyncLoadScenarioRaw(::grpc::ClientContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLoadScenarioRaw(context, request, cq);
  result->StartCall();
  return result;
}

NetOps::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::Entity* resp) {
               return service->GetEntity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::Entity* resp) {
               return service->CreateEntity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::Entity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::Entity* resp) {
               return service->UpdateEntity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* resp) {
               return service->ListEntities(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* resp) {
               return service->ListEntitiesOverTime(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* resp) {
               return service->DeleteEntity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      NetOps_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< NetOps::Service, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](NetOps::Service* service,
             ::grpc::ServerContext* ctx,
             const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* req,
             ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* resp) {
               return service->LoadScenario(ctx, req, resp);
             }, this)));
}

NetOps::Service::~Service() {
}

::grpc::Status NetOps::Service::GetEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::GetEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::CreateEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::CreateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::UpdateEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::UpdateEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::Entity* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::ListEntities(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::ListEntitiesOverTime(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::ListEntitiesOverTimeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::DeleteEntity(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::DeleteEntityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status NetOps::Service::LoadScenario(::grpc::ServerContext* context, const ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioRequest* request, ::aalyria::spacetime::api::nbi::v1alpha::LoadScenarioResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace aalyria
}  // namespace spacetime
}  // namespace api
}  // namespace nbi
}  // namespace v1alpha

