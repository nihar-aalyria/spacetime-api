// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/nbi.proto

package v1alpha

import (
	common "aalyria.com/spacetime/api/common"
	resources "aalyria.com/spacetime/api/nbi/v1alpha/resources"
	context "context"
	interval "google.golang.org/genproto/googleapis/type/interval"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityType int32

const (
	EntityType_ENTITY_TYPE_UNSPECIFIED EntityType = 0
	EntityType_ANTENNA_PATTERN         EntityType = 12
	EntityType_BAND_PROFILE            EntityType = 16
	EntityType_CDPI_STREAM_INFO        EntityType = 17
	EntityType_DEVICES_IN_REGION       EntityType = 24
	EntityType_STATION_SET             EntityType = 21
	EntityType_SURFACE_REGION          EntityType = 22
	EntityType_DRAIN_PROVISION         EntityType = 20
	EntityType_INTENT                  EntityType = 6
	EntityType_INTERFACE_LINK_REPORT   EntityType = 5
	EntityType_INTERFERENCE_CONSTRAINT EntityType = 23
	EntityType_MOTION_DEFINITION       EntityType = 4
	EntityType_NETWORK_NODE            EntityType = 3
	EntityType_NETWORK_STATS_REPORT    EntityType = 8
	EntityType_PLATFORM_DEFINITION     EntityType = 1
	EntityType_PROPAGATION_WEATHER     EntityType = 15
	EntityType_SERVICE_REQUEST         EntityType = 2
	EntityType_TRANSCEIVER_LINK_REPORT EntityType = 19
	EntityType_COMPUTED_MOTION         EntityType = 7
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0:  "ENTITY_TYPE_UNSPECIFIED",
		12: "ANTENNA_PATTERN",
		16: "BAND_PROFILE",
		17: "CDPI_STREAM_INFO",
		24: "DEVICES_IN_REGION",
		21: "STATION_SET",
		22: "SURFACE_REGION",
		20: "DRAIN_PROVISION",
		6:  "INTENT",
		5:  "INTERFACE_LINK_REPORT",
		23: "INTERFERENCE_CONSTRAINT",
		4:  "MOTION_DEFINITION",
		3:  "NETWORK_NODE",
		8:  "NETWORK_STATS_REPORT",
		1:  "PLATFORM_DEFINITION",
		15: "PROPAGATION_WEATHER",
		2:  "SERVICE_REQUEST",
		19: "TRANSCEIVER_LINK_REPORT",
		7:  "COMPUTED_MOTION",
	}
	EntityType_value = map[string]int32{
		"ENTITY_TYPE_UNSPECIFIED": 0,
		"ANTENNA_PATTERN":         12,
		"BAND_PROFILE":            16,
		"CDPI_STREAM_INFO":        17,
		"DEVICES_IN_REGION":       24,
		"STATION_SET":             21,
		"SURFACE_REGION":          22,
		"DRAIN_PROVISION":         20,
		"INTENT":                  6,
		"INTERFACE_LINK_REPORT":   5,
		"INTERFERENCE_CONSTRAINT": 23,
		"MOTION_DEFINITION":       4,
		"NETWORK_NODE":            3,
		"NETWORK_STATS_REPORT":    8,
		"PLATFORM_DEFINITION":     1,
		"PROPAGATION_WEATHER":     15,
		"SERVICE_REQUEST":         2,
		"TRANSCEIVER_LINK_REPORT": 19,
		"COMPUTED_MOTION":         7,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_nbi_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_nbi_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EntityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EntityType(num)
	return nil
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{0}
}

type EntityGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *EntityType `protobuf:"varint,1,opt,name=type,enum=aalyria.spacetime.api.nbi.v1alpha.EntityType" json:"type,omitempty"`
	AppId *string     `protobuf:"bytes,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *EntityGroup) Reset() {
	*x = EntityGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityGroup) ProtoMessage() {}

func (x *EntityGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityGroup.ProtoReflect.Descriptor instead.
func (*EntityGroup) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{0}
}

func (x *EntityGroup) GetType() EntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *EntityGroup) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

type ResourceOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderEndpoint *string `protobuf:"bytes,1,opt,name=provider_endpoint,json=providerEndpoint" json:"provider_endpoint,omitempty"`
}

func (x *ResourceOrigin) Reset() {
	*x = ResourceOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceOrigin) ProtoMessage() {}

func (x *ResourceOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceOrigin.ProtoReflect.Descriptor instead.
func (*ResourceOrigin) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceOrigin) GetProviderEndpoint() string {
	if x != nil && x.ProviderEndpoint != nil {
		return *x.ProviderEndpoint
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group               *EntityGroup    `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Id                  *string         `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	ResourceOrigin      *ResourceOrigin `protobuf:"bytes,34,opt,name=resource_origin,json=resourceOrigin" json:"resource_origin,omitempty"`
	CommitTimestamp     *int64          `protobuf:"varint,3,opt,name=commit_timestamp,json=commitTimestamp" json:"commit_timestamp,omitempty"`
	NextCommitTimestamp *int64          `protobuf:"varint,33,opt,name=next_commit_timestamp,json=nextCommitTimestamp" json:"next_commit_timestamp,omitempty"`
	LastModifiedBy      *string         `protobuf:"bytes,22,opt,name=last_modified_by,json=lastModifiedBy" json:"last_modified_by,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Entity_AntennaPattern
	//	*Entity_BandProfile
	//	*Entity_CdpiStreamInfo
	//	*Entity_ComputedMotion
	//	*Entity_DevicesInRegion
	//	*Entity_StationSet
	//	*Entity_SurfaceRegion
	//	*Entity_DrainProvision
	//	*Entity_Intent
	//	*Entity_InterfaceLinkReport
	//	*Entity_InterferenceConstraint
	//	*Entity_MotionDefinition
	//	*Entity_NetworkNode
	//	*Entity_NetworkStatsReport
	//	*Entity_Platform
	//	*Entity_ServiceRequest
	//	*Entity_TransceiverLinkReport
	Value isEntity_Value `protobuf_oneof:"value"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{2}
}

func (x *Entity) GetGroup() *EntityGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Entity) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Entity) GetResourceOrigin() *ResourceOrigin {
	if x != nil {
		return x.ResourceOrigin
	}
	return nil
}

func (x *Entity) GetCommitTimestamp() int64 {
	if x != nil && x.CommitTimestamp != nil {
		return *x.CommitTimestamp
	}
	return 0
}

func (x *Entity) GetNextCommitTimestamp() int64 {
	if x != nil && x.NextCommitTimestamp != nil {
		return *x.NextCommitTimestamp
	}
	return 0
}

func (x *Entity) GetLastModifiedBy() string {
	if x != nil && x.LastModifiedBy != nil {
		return *x.LastModifiedBy
	}
	return ""
}

func (m *Entity) GetValue() isEntity_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Entity) GetAntennaPattern() *resources.AntennaPattern {
	if x, ok := x.GetValue().(*Entity_AntennaPattern); ok {
		return x.AntennaPattern
	}
	return nil
}

func (x *Entity) GetBandProfile() *common.BandProfile {
	if x, ok := x.GetValue().(*Entity_BandProfile); ok {
		return x.BandProfile
	}
	return nil
}

func (x *Entity) GetCdpiStreamInfo() *common.CdpiStreamInfo {
	if x, ok := x.GetValue().(*Entity_CdpiStreamInfo); ok {
		return x.CdpiStreamInfo
	}
	return nil
}

func (x *Entity) GetComputedMotion() *resources.ComputedMotion {
	if x, ok := x.GetValue().(*Entity_ComputedMotion); ok {
		return x.ComputedMotion
	}
	return nil
}

func (x *Entity) GetDevicesInRegion() *resources.DevicesInRegion {
	if x, ok := x.GetValue().(*Entity_DevicesInRegion); ok {
		return x.DevicesInRegion
	}
	return nil
}

func (x *Entity) GetStationSet() *resources.StationSet {
	if x, ok := x.GetValue().(*Entity_StationSet); ok {
		return x.StationSet
	}
	return nil
}

func (x *Entity) GetSurfaceRegion() *resources.SurfaceRegion {
	if x, ok := x.GetValue().(*Entity_SurfaceRegion); ok {
		return x.SurfaceRegion
	}
	return nil
}

func (x *Entity) GetDrainProvision() *resources.DrainProvision {
	if x, ok := x.GetValue().(*Entity_DrainProvision); ok {
		return x.DrainProvision
	}
	return nil
}

func (x *Entity) GetIntent() *resources.Intent {
	if x, ok := x.GetValue().(*Entity_Intent); ok {
		return x.Intent
	}
	return nil
}

func (x *Entity) GetInterfaceLinkReport() *resources.InterfaceLinkReport {
	if x, ok := x.GetValue().(*Entity_InterfaceLinkReport); ok {
		return x.InterfaceLinkReport
	}
	return nil
}

func (x *Entity) GetInterferenceConstraint() *resources.InterferenceConstraint {
	if x, ok := x.GetValue().(*Entity_InterferenceConstraint); ok {
		return x.InterferenceConstraint
	}
	return nil
}

func (x *Entity) GetMotionDefinition() *common.MotionDefinition {
	if x, ok := x.GetValue().(*Entity_MotionDefinition); ok {
		return x.MotionDefinition
	}
	return nil
}

func (x *Entity) GetNetworkNode() *resources.NetworkNode {
	if x, ok := x.GetValue().(*Entity_NetworkNode); ok {
		return x.NetworkNode
	}
	return nil
}

func (x *Entity) GetNetworkStatsReport() *common.NetworkStatsReport {
	if x, ok := x.GetValue().(*Entity_NetworkStatsReport); ok {
		return x.NetworkStatsReport
	}
	return nil
}

func (x *Entity) GetPlatform() *common.PlatformDefinition {
	if x, ok := x.GetValue().(*Entity_Platform); ok {
		return x.Platform
	}
	return nil
}

func (x *Entity) GetServiceRequest() *resources.ServiceRequest {
	if x, ok := x.GetValue().(*Entity_ServiceRequest); ok {
		return x.ServiceRequest
	}
	return nil
}

func (x *Entity) GetTransceiverLinkReport() *resources.TransceiverLinkReport {
	if x, ok := x.GetValue().(*Entity_TransceiverLinkReport); ok {
		return x.TransceiverLinkReport
	}
	return nil
}

type isEntity_Value interface {
	isEntity_Value()
}

type Entity_AntennaPattern struct {
	AntennaPattern *resources.AntennaPattern `protobuf:"bytes,15,opt,name=antenna_pattern,json=antennaPattern,oneof"`
}

type Entity_BandProfile struct {
	BandProfile *common.BandProfile `protobuf:"bytes,20,opt,name=band_profile,json=bandProfile,oneof"`
}

type Entity_CdpiStreamInfo struct {
	CdpiStreamInfo *common.CdpiStreamInfo `protobuf:"bytes,23,opt,name=cdpi_stream_info,json=cdpiStreamInfo,oneof"`
}

type Entity_ComputedMotion struct {
	ComputedMotion *resources.ComputedMotion `protobuf:"bytes,10,opt,name=computed_motion,json=computedMotion,oneof"`
}

type Entity_DevicesInRegion struct {
	DevicesInRegion *resources.DevicesInRegion `protobuf:"bytes,30,opt,name=devices_in_region,json=devicesInRegion,oneof"`
}

type Entity_StationSet struct {
	StationSet *resources.StationSet `protobuf:"bytes,27,opt,name=station_set,json=stationSet,oneof"`
}

type Entity_SurfaceRegion struct {
	SurfaceRegion *resources.SurfaceRegion `protobuf:"bytes,28,opt,name=surface_region,json=surfaceRegion,oneof"`
}

type Entity_DrainProvision struct {
	DrainProvision *resources.DrainProvision `protobuf:"bytes,26,opt,name=drain_provision,json=drainProvision,oneof"`
}

type Entity_Intent struct {
	Intent *resources.Intent `protobuf:"bytes,9,opt,name=intent,oneof"`
}

type Entity_InterfaceLinkReport struct {
	InterfaceLinkReport *resources.InterfaceLinkReport `protobuf:"bytes,8,opt,name=interface_link_report,json=interfaceLinkReport,oneof"`
}

type Entity_InterferenceConstraint struct {
	InterferenceConstraint *resources.InterferenceConstraint `protobuf:"bytes,29,opt,name=interference_constraint,json=interferenceConstraint,oneof"`
}

type Entity_MotionDefinition struct {
	MotionDefinition *common.MotionDefinition `protobuf:"bytes,7,opt,name=motion_definition,json=motionDefinition,oneof"`
}

type Entity_NetworkNode struct {
	NetworkNode *resources.NetworkNode `protobuf:"bytes,6,opt,name=network_node,json=networkNode,oneof"`
}

type Entity_NetworkStatsReport struct {
	NetworkStatsReport *common.NetworkStatsReport `protobuf:"bytes,11,opt,name=network_stats_report,json=networkStatsReport,oneof"`
}

type Entity_Platform struct {
	Platform *common.PlatformDefinition `protobuf:"bytes,4,opt,name=platform,oneof"`
}

type Entity_ServiceRequest struct {
	ServiceRequest *resources.ServiceRequest `protobuf:"bytes,5,opt,name=service_request,json=serviceRequest,oneof"`
}

type Entity_TransceiverLinkReport struct {
	TransceiverLinkReport *resources.TransceiverLinkReport `protobuf:"bytes,25,opt,name=transceiver_link_report,json=transceiverLinkReport,oneof"`
}

func (*Entity_AntennaPattern) isEntity_Value() {}

func (*Entity_BandProfile) isEntity_Value() {}

func (*Entity_CdpiStreamInfo) isEntity_Value() {}

func (*Entity_ComputedMotion) isEntity_Value() {}

func (*Entity_DevicesInRegion) isEntity_Value() {}

func (*Entity_StationSet) isEntity_Value() {}

func (*Entity_SurfaceRegion) isEntity_Value() {}

func (*Entity_DrainProvision) isEntity_Value() {}

func (*Entity_Intent) isEntity_Value() {}

func (*Entity_InterfaceLinkReport) isEntity_Value() {}

func (*Entity_InterferenceConstraint) isEntity_Value() {}

func (*Entity_MotionDefinition) isEntity_Value() {}

func (*Entity_NetworkNode) isEntity_Value() {}

func (*Entity_NetworkStatsReport) isEntity_Value() {}

func (*Entity_Platform) isEntity_Value() {}

func (*Entity_ServiceRequest) isEntity_Value() {}

func (*Entity_TransceiverLinkReport) isEntity_Value() {}

type GetEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *EntityType `protobuf:"varint,1,opt,name=type,enum=aalyria.spacetime.api.nbi.v1alpha.EntityType" json:"type,omitempty"`
	Id   *string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (x *GetEntityRequest) Reset() {
	*x = GetEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityRequest) ProtoMessage() {}

func (x *GetEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityRequest.ProtoReflect.Descriptor instead.
func (*GetEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{3}
}

func (x *GetEntityRequest) GetType() EntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *GetEntityRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type CreateEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (x *CreateEntityRequest) Reset() {
	*x = CreateEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntityRequest) ProtoMessage() {}

func (x *CreateEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntityRequest.ProtoReflect.Descriptor instead.
func (*CreateEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{4}
}

func (x *CreateEntityRequest) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UpdateEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity                 *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	IgnoreConsistencyCheck *bool   `protobuf:"varint,2,opt,name=ignore_consistency_check,json=ignoreConsistencyCheck" json:"ignore_consistency_check,omitempty"`
}

func (x *UpdateEntityRequest) Reset() {
	*x = UpdateEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntityRequest) ProtoMessage() {}

func (x *UpdateEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntityRequest.ProtoReflect.Descriptor instead.
func (*UpdateEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEntityRequest) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UpdateEntityRequest) GetIgnoreConsistencyCheck() bool {
	if x != nil && x.IgnoreConsistencyCheck != nil {
		return *x.IgnoreConsistencyCheck
	}
	return false
}

type ListEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                        *EntityType        `protobuf:"varint,1,opt,name=type,enum=aalyria.spacetime.api.nbi.v1alpha.EntityType" json:"type,omitempty"`
	Interval                    *interval.Interval `protobuf:"bytes,3,opt,name=interval" json:"interval,omitempty"`
	Filter                      *EntityFilter      `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
	ComputeCartesianCoordinates *bool              `protobuf:"varint,6,opt,name=compute_cartesian_coordinates,json=computeCartesianCoordinates" json:"compute_cartesian_coordinates,omitempty"`
}

func (x *ListEntitiesRequest) Reset() {
	*x = ListEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntitiesRequest) ProtoMessage() {}

func (x *ListEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntitiesRequest.ProtoReflect.Descriptor instead.
func (*ListEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{6}
}

func (x *ListEntitiesRequest) GetType() EntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *ListEntitiesRequest) GetInterval() *interval.Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *ListEntitiesRequest) GetFilter() *EntityFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListEntitiesRequest) GetComputeCartesianCoordinates() bool {
	if x != nil && x.ComputeCartesianCoordinates != nil {
		return *x.ComputeCartesianCoordinates
	}
	return false
}

type ListEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities" json:"entities,omitempty"`
}

func (x *ListEntitiesResponse) Reset() {
	*x = ListEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntitiesResponse) ProtoMessage() {}

func (x *ListEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntitiesResponse.ProtoReflect.Descriptor instead.
func (*ListEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{7}
}

func (x *ListEntitiesResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type ListEntitiesOverTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                        *EntityType          `protobuf:"varint,1,opt,name=type,enum=aalyria.spacetime.api.nbi.v1alpha.EntityType" json:"type,omitempty"`
	Interval                    *common.TimeInterval `protobuf:"bytes,2,opt,name=interval" json:"interval,omitempty"`
	ComputeCartesianCoordinates *bool                `protobuf:"varint,3,opt,name=compute_cartesian_coordinates,json=computeCartesianCoordinates" json:"compute_cartesian_coordinates,omitempty"`
	Filter                      *EntityFilter        `protobuf:"bytes,4,opt,name=filter" json:"filter,omitempty"`
	Ids                         []string             `protobuf:"bytes,5,rep,name=ids" json:"ids,omitempty"`
	Diff                        *bool                `protobuf:"varint,6,opt,name=diff" json:"diff,omitempty"`
}

func (x *ListEntitiesOverTimeRequest) Reset() {
	*x = ListEntitiesOverTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntitiesOverTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntitiesOverTimeRequest) ProtoMessage() {}

func (x *ListEntitiesOverTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntitiesOverTimeRequest.ProtoReflect.Descriptor instead.
func (*ListEntitiesOverTimeRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{8}
}

func (x *ListEntitiesOverTimeRequest) GetType() EntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *ListEntitiesOverTimeRequest) GetInterval() *common.TimeInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *ListEntitiesOverTimeRequest) GetComputeCartesianCoordinates() bool {
	if x != nil && x.ComputeCartesianCoordinates != nil {
		return *x.ComputeCartesianCoordinates
	}
	return false
}

func (x *ListEntitiesOverTimeRequest) GetFilter() *EntityFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListEntitiesOverTimeRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListEntitiesOverTimeRequest) GetDiff() bool {
	if x != nil && x.Diff != nil {
		return *x.Diff
	}
	return false
}

type ListEntitiesOverTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*Entity `protobuf:"bytes,1,rep,name=entities" json:"entities,omitempty"`
}

func (x *ListEntitiesOverTimeResponse) Reset() {
	*x = ListEntitiesOverTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEntitiesOverTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntitiesOverTimeResponse) ProtoMessage() {}

func (x *ListEntitiesOverTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntitiesOverTimeResponse.ProtoReflect.Descriptor instead.
func (*ListEntitiesOverTimeResponse) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{9}
}

func (x *ListEntitiesOverTimeResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type EntityFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferencesNode           []string                `protobuf:"bytes,1,rep,name=references_node,json=referencesNode" json:"references_node,omitempty"`
	ReferencesServiceRequest []string                `protobuf:"bytes,2,rep,name=references_service_request,json=referencesServiceRequest" json:"references_service_request,omitempty"`
	IncludeIntentStates      []resources.IntentState `protobuf:"varint,3,rep,name=include_intent_states,json=includeIntentStates,enum=aalyria.spacetime.api.nbi.v1alpha.resources.IntentState" json:"include_intent_states,omitempty"`
}

func (x *EntityFilter) Reset() {
	*x = EntityFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityFilter) ProtoMessage() {}

func (x *EntityFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityFilter.ProtoReflect.Descriptor instead.
func (*EntityFilter) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{10}
}

func (x *EntityFilter) GetReferencesNode() []string {
	if x != nil {
		return x.ReferencesNode
	}
	return nil
}

func (x *EntityFilter) GetReferencesServiceRequest() []string {
	if x != nil {
		return x.ReferencesServiceRequest
	}
	return nil
}

func (x *EntityFilter) GetIncludeIntentStates() []resources.IntentState {
	if x != nil {
		return x.IncludeIntentStates
	}
	return nil
}

type DeleteEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                   *EntityType `protobuf:"varint,1,opt,name=type,enum=aalyria.spacetime.api.nbi.v1alpha.EntityType" json:"type,omitempty"`
	Id                     *string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	LastCommitTimestamp    *int64      `protobuf:"varint,3,opt,name=last_commit_timestamp,json=lastCommitTimestamp" json:"last_commit_timestamp,omitempty"`
	IgnoreConsistencyCheck *bool       `protobuf:"varint,4,opt,name=ignore_consistency_check,json=ignoreConsistencyCheck" json:"ignore_consistency_check,omitempty"`
}

func (x *DeleteEntityRequest) Reset() {
	*x = DeleteEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntityRequest) ProtoMessage() {}

func (x *DeleteEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntityRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteEntityRequest) GetType() EntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EntityType_ENTITY_TYPE_UNSPECIFIED
}

func (x *DeleteEntityRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DeleteEntityRequest) GetLastCommitTimestamp() int64 {
	if x != nil && x.LastCommitTimestamp != nil {
		return *x.LastCommitTimestamp
	}
	return 0
}

func (x *DeleteEntityRequest) GetIgnoreConsistencyCheck() bool {
	if x != nil && x.IgnoreConsistencyCheck != nil {
		return *x.IgnoreConsistencyCheck
	}
	return false
}

type DeleteEntityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEntityResponse) Reset() {
	*x = DeleteEntityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntityResponse) ProtoMessage() {}

func (x *DeleteEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntityResponse.ProtoReflect.Descriptor instead.
func (*DeleteEntityResponse) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{12}
}

type LoadScenarioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScenarioSettings *resources.ScenarioSettings `protobuf:"bytes,1,opt,name=scenario_settings,json=scenarioSettings" json:"scenario_settings,omitempty"`
}

func (x *LoadScenarioRequest) Reset() {
	*x = LoadScenarioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadScenarioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadScenarioRequest) ProtoMessage() {}

func (x *LoadScenarioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadScenarioRequest.ProtoReflect.Descriptor instead.
func (*LoadScenarioRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{13}
}

func (x *LoadScenarioRequest) GetScenarioSettings() *resources.ScenarioSettings {
	if x != nil {
		return x.ScenarioSettings
	}
	return nil
}

type LoadScenarioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoadScenarioResponse) Reset() {
	*x = LoadScenarioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadScenarioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadScenarioResponse) ProtoMessage() {}

func (x *LoadScenarioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_nbi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadScenarioResponse.ProtoReflect.Descriptor instead.
func (*LoadScenarioResponse) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_nbi_proto_rawDescGZIP(), []int{14}
}

var File_api_nbi_v1alpha_nbi_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_nbi_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x6e, 0x62, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x18,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62,
	0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2f, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a,
	0x0b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x41, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x8c, 0x10, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x44, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5a, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a,
	0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x79, 0x12, 0x66, 0x0a, 0x0f, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x12, 0x4e, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x63, 0x64, 0x70, 0x69, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x64, 0x70,
	0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x64, 0x70, 0x69, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x66, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x5a, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x63, 0x0a,
	0x0e, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x0f, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x72, 0x61, 0x69,
	0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x06, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x15, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x7e, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x5d, 0x0a, 0x11, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5d, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x64, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4e, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x66, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7c, 0x0a,
	0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x4a, 0x04, 0x08, 0x12, 0x10, 0x13, 0x4a, 0x08, 0x08, 0x23, 0x10, 0x80,
	0x80, 0x80, 0x80, 0x02, 0x22, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x18, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0xa8, 0x02, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x08, 0x08, 0x07, 0x10,
	0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x65,
	0x73, 0x69, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x69,
	0x66, 0x66, 0x22, 0x65, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x6c, 0x0a, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22,
	0xd6, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38,
	0x0a, 0x18, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x11, 0x73, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x10, 0x73, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xc7, 0x03, 0x0a,
	0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x45,
	0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4e, 0x54, 0x45,
	0x4e, 0x4e, 0x41, 0x5f, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x10, 0x0c, 0x12, 0x10, 0x0a,
	0x0c, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x10, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x44, 0x50, 0x49, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x53,
	0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x15, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x55, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x10,
	0x16, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x52, 0x41, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x14, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x54,
	0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x05, 0x12, 0x1b, 0x0a,
	0x17, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x10, 0x17, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x08, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x4f, 0x50, 0x41, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x45, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0f, 0x12,
	0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x43, 0x45, 0x49,
	0x56, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x13, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x44, 0x5f, 0x4d, 0x4f,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x22, 0x04, 0x08, 0x0e, 0x10, 0x0e, 0x22, 0x08, 0x08, 0x19,
	0x10, 0xff, 0xff, 0xff, 0xff, 0x07, 0x32, 0x8c, 0x07, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x4f, 0x70,
	0x73, 0x12, 0x6d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x33,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x36, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4f,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x36, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84,
	0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x12,
	0x36, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x03, 0x88, 0x02, 0x01, 0x42, 0x4e, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5a, 0x25,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61,
}

var (
	file_api_nbi_v1alpha_nbi_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_nbi_proto_rawDescData = file_api_nbi_v1alpha_nbi_proto_rawDesc
)

func file_api_nbi_v1alpha_nbi_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_nbi_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_nbi_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_nbi_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_nbi_proto_rawDescData
}

var file_api_nbi_v1alpha_nbi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_nbi_v1alpha_nbi_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_nbi_v1alpha_nbi_proto_goTypes = []interface{}{
	(EntityType)(0),                          // 0: aalyria.spacetime.api.nbi.v1alpha.EntityType
	(*EntityGroup)(nil),                      // 1: aalyria.spacetime.api.nbi.v1alpha.EntityGroup
	(*ResourceOrigin)(nil),                   // 2: aalyria.spacetime.api.nbi.v1alpha.ResourceOrigin
	(*Entity)(nil),                           // 3: aalyria.spacetime.api.nbi.v1alpha.Entity
	(*GetEntityRequest)(nil),                 // 4: aalyria.spacetime.api.nbi.v1alpha.GetEntityRequest
	(*CreateEntityRequest)(nil),              // 5: aalyria.spacetime.api.nbi.v1alpha.CreateEntityRequest
	(*UpdateEntityRequest)(nil),              // 6: aalyria.spacetime.api.nbi.v1alpha.UpdateEntityRequest
	(*ListEntitiesRequest)(nil),              // 7: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesRequest
	(*ListEntitiesResponse)(nil),             // 8: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesResponse
	(*ListEntitiesOverTimeRequest)(nil),      // 9: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeRequest
	(*ListEntitiesOverTimeResponse)(nil),     // 10: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeResponse
	(*EntityFilter)(nil),                     // 11: aalyria.spacetime.api.nbi.v1alpha.EntityFilter
	(*DeleteEntityRequest)(nil),              // 12: aalyria.spacetime.api.nbi.v1alpha.DeleteEntityRequest
	(*DeleteEntityResponse)(nil),             // 13: aalyria.spacetime.api.nbi.v1alpha.DeleteEntityResponse
	(*LoadScenarioRequest)(nil),              // 14: aalyria.spacetime.api.nbi.v1alpha.LoadScenarioRequest
	(*LoadScenarioResponse)(nil),             // 15: aalyria.spacetime.api.nbi.v1alpha.LoadScenarioResponse
	(*resources.AntennaPattern)(nil),         // 16: aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern
	(*common.BandProfile)(nil),               // 17: aalyria.spacetime.api.common.BandProfile
	(*common.CdpiStreamInfo)(nil),            // 18: aalyria.spacetime.api.common.CdpiStreamInfo
	(*resources.ComputedMotion)(nil),         // 19: aalyria.spacetime.api.nbi.v1alpha.resources.ComputedMotion
	(*resources.DevicesInRegion)(nil),        // 20: aalyria.spacetime.api.nbi.v1alpha.resources.DevicesInRegion
	(*resources.StationSet)(nil),             // 21: aalyria.spacetime.api.nbi.v1alpha.resources.StationSet
	(*resources.SurfaceRegion)(nil),          // 22: aalyria.spacetime.api.nbi.v1alpha.resources.SurfaceRegion
	(*resources.DrainProvision)(nil),         // 23: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision
	(*resources.Intent)(nil),                 // 24: aalyria.spacetime.api.nbi.v1alpha.resources.Intent
	(*resources.InterfaceLinkReport)(nil),    // 25: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport
	(*resources.InterferenceConstraint)(nil), // 26: aalyria.spacetime.api.nbi.v1alpha.resources.InterferenceConstraint
	(*common.MotionDefinition)(nil),          // 27: aalyria.spacetime.api.common.MotionDefinition
	(*resources.NetworkNode)(nil),            // 28: aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode
	(*common.NetworkStatsReport)(nil),        // 29: aalyria.spacetime.api.common.NetworkStatsReport
	(*common.PlatformDefinition)(nil),        // 30: aalyria.spacetime.api.common.PlatformDefinition
	(*resources.ServiceRequest)(nil),         // 31: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest
	(*resources.TransceiverLinkReport)(nil),  // 32: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverLinkReport
	(*interval.Interval)(nil),                // 33: google.type.Interval
	(*common.TimeInterval)(nil),              // 34: aalyria.spacetime.api.common.TimeInterval
	(resources.IntentState)(0),               // 35: aalyria.spacetime.api.nbi.v1alpha.resources.IntentState
	(*resources.ScenarioSettings)(nil),       // 36: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings
}
var file_api_nbi_v1alpha_nbi_proto_depIdxs = []int32{
	0,  // 0: aalyria.spacetime.api.nbi.v1alpha.EntityGroup.type:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityType
	1,  // 1: aalyria.spacetime.api.nbi.v1alpha.Entity.group:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityGroup
	2,  // 2: aalyria.spacetime.api.nbi.v1alpha.Entity.resource_origin:type_name -> aalyria.spacetime.api.nbi.v1alpha.ResourceOrigin
	16, // 3: aalyria.spacetime.api.nbi.v1alpha.Entity.antenna_pattern:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern
	17, // 4: aalyria.spacetime.api.nbi.v1alpha.Entity.band_profile:type_name -> aalyria.spacetime.api.common.BandProfile
	18, // 5: aalyria.spacetime.api.nbi.v1alpha.Entity.cdpi_stream_info:type_name -> aalyria.spacetime.api.common.CdpiStreamInfo
	19, // 6: aalyria.spacetime.api.nbi.v1alpha.Entity.computed_motion:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ComputedMotion
	20, // 7: aalyria.spacetime.api.nbi.v1alpha.Entity.devices_in_region:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.DevicesInRegion
	21, // 8: aalyria.spacetime.api.nbi.v1alpha.Entity.station_set:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.StationSet
	22, // 9: aalyria.spacetime.api.nbi.v1alpha.Entity.surface_region:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.SurfaceRegion
	23, // 10: aalyria.spacetime.api.nbi.v1alpha.Entity.drain_provision:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision
	24, // 11: aalyria.spacetime.api.nbi.v1alpha.Entity.intent:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Intent
	25, // 12: aalyria.spacetime.api.nbi.v1alpha.Entity.interface_link_report:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport
	26, // 13: aalyria.spacetime.api.nbi.v1alpha.Entity.interference_constraint:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.InterferenceConstraint
	27, // 14: aalyria.spacetime.api.nbi.v1alpha.Entity.motion_definition:type_name -> aalyria.spacetime.api.common.MotionDefinition
	28, // 15: aalyria.spacetime.api.nbi.v1alpha.Entity.network_node:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode
	29, // 16: aalyria.spacetime.api.nbi.v1alpha.Entity.network_stats_report:type_name -> aalyria.spacetime.api.common.NetworkStatsReport
	30, // 17: aalyria.spacetime.api.nbi.v1alpha.Entity.platform:type_name -> aalyria.spacetime.api.common.PlatformDefinition
	31, // 18: aalyria.spacetime.api.nbi.v1alpha.Entity.service_request:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest
	32, // 19: aalyria.spacetime.api.nbi.v1alpha.Entity.transceiver_link_report:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverLinkReport
	0,  // 20: aalyria.spacetime.api.nbi.v1alpha.GetEntityRequest.type:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityType
	3,  // 21: aalyria.spacetime.api.nbi.v1alpha.CreateEntityRequest.entity:type_name -> aalyria.spacetime.api.nbi.v1alpha.Entity
	3,  // 22: aalyria.spacetime.api.nbi.v1alpha.UpdateEntityRequest.entity:type_name -> aalyria.spacetime.api.nbi.v1alpha.Entity
	0,  // 23: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesRequest.type:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityType
	33, // 24: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesRequest.interval:type_name -> google.type.Interval
	11, // 25: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesRequest.filter:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityFilter
	3,  // 26: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesResponse.entities:type_name -> aalyria.spacetime.api.nbi.v1alpha.Entity
	0,  // 27: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeRequest.type:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityType
	34, // 28: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeRequest.interval:type_name -> aalyria.spacetime.api.common.TimeInterval
	11, // 29: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeRequest.filter:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityFilter
	3,  // 30: aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeResponse.entities:type_name -> aalyria.spacetime.api.nbi.v1alpha.Entity
	35, // 31: aalyria.spacetime.api.nbi.v1alpha.EntityFilter.include_intent_states:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.IntentState
	0,  // 32: aalyria.spacetime.api.nbi.v1alpha.DeleteEntityRequest.type:type_name -> aalyria.spacetime.api.nbi.v1alpha.EntityType
	36, // 33: aalyria.spacetime.api.nbi.v1alpha.LoadScenarioRequest.scenario_settings:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings
	4,  // 34: aalyria.spacetime.api.nbi.v1alpha.NetOps.GetEntity:input_type -> aalyria.spacetime.api.nbi.v1alpha.GetEntityRequest
	5,  // 35: aalyria.spacetime.api.nbi.v1alpha.NetOps.CreateEntity:input_type -> aalyria.spacetime.api.nbi.v1alpha.CreateEntityRequest
	6,  // 36: aalyria.spacetime.api.nbi.v1alpha.NetOps.UpdateEntity:input_type -> aalyria.spacetime.api.nbi.v1alpha.UpdateEntityRequest
	7,  // 37: aalyria.spacetime.api.nbi.v1alpha.NetOps.ListEntities:input_type -> aalyria.spacetime.api.nbi.v1alpha.ListEntitiesRequest
	9,  // 38: aalyria.spacetime.api.nbi.v1alpha.NetOps.ListEntitiesOverTime:input_type -> aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeRequest
	12, // 39: aalyria.spacetime.api.nbi.v1alpha.NetOps.DeleteEntity:input_type -> aalyria.spacetime.api.nbi.v1alpha.DeleteEntityRequest
	14, // 40: aalyria.spacetime.api.nbi.v1alpha.NetOps.LoadScenario:input_type -> aalyria.spacetime.api.nbi.v1alpha.LoadScenarioRequest
	3,  // 41: aalyria.spacetime.api.nbi.v1alpha.NetOps.GetEntity:output_type -> aalyria.spacetime.api.nbi.v1alpha.Entity
	3,  // 42: aalyria.spacetime.api.nbi.v1alpha.NetOps.CreateEntity:output_type -> aalyria.spacetime.api.nbi.v1alpha.Entity
	3,  // 43: aalyria.spacetime.api.nbi.v1alpha.NetOps.UpdateEntity:output_type -> aalyria.spacetime.api.nbi.v1alpha.Entity
	8,  // 44: aalyria.spacetime.api.nbi.v1alpha.NetOps.ListEntities:output_type -> aalyria.spacetime.api.nbi.v1alpha.ListEntitiesResponse
	10, // 45: aalyria.spacetime.api.nbi.v1alpha.NetOps.ListEntitiesOverTime:output_type -> aalyria.spacetime.api.nbi.v1alpha.ListEntitiesOverTimeResponse
	13, // 46: aalyria.spacetime.api.nbi.v1alpha.NetOps.DeleteEntity:output_type -> aalyria.spacetime.api.nbi.v1alpha.DeleteEntityResponse
	15, // 47: aalyria.spacetime.api.nbi.v1alpha.NetOps.LoadScenario:output_type -> aalyria.spacetime.api.nbi.v1alpha.LoadScenarioResponse
	41, // [41:48] is the sub-list for method output_type
	34, // [34:41] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_nbi_proto_init() }
func file_api_nbi_v1alpha_nbi_proto_init() {
	if File_api_nbi_v1alpha_nbi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_nbi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntitiesOverTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEntitiesOverTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadScenarioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_nbi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadScenarioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_nbi_v1alpha_nbi_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Entity_AntennaPattern)(nil),
		(*Entity_BandProfile)(nil),
		(*Entity_CdpiStreamInfo)(nil),
		(*Entity_ComputedMotion)(nil),
		(*Entity_DevicesInRegion)(nil),
		(*Entity_StationSet)(nil),
		(*Entity_SurfaceRegion)(nil),
		(*Entity_DrainProvision)(nil),
		(*Entity_Intent)(nil),
		(*Entity_InterfaceLinkReport)(nil),
		(*Entity_InterferenceConstraint)(nil),
		(*Entity_MotionDefinition)(nil),
		(*Entity_NetworkNode)(nil),
		(*Entity_NetworkStatsReport)(nil),
		(*Entity_Platform)(nil),
		(*Entity_ServiceRequest)(nil),
		(*Entity_TransceiverLinkReport)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_nbi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_nbi_v1alpha_nbi_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_nbi_proto_depIdxs,
		EnumInfos:         file_api_nbi_v1alpha_nbi_proto_enumTypes,
		MessageInfos:      file_api_nbi_v1alpha_nbi_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_nbi_proto = out.File
	file_api_nbi_v1alpha_nbi_proto_rawDesc = nil
	file_api_nbi_v1alpha_nbi_proto_goTypes = nil
	file_api_nbi_v1alpha_nbi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetOpsClient is the client API for NetOps service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetOpsClient interface {
	GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*Entity, error)
	CreateEntity(ctx context.Context, in *CreateEntityRequest, opts ...grpc.CallOption) (*Entity, error)
	UpdateEntity(ctx context.Context, in *UpdateEntityRequest, opts ...grpc.CallOption) (*Entity, error)
	ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*ListEntitiesResponse, error)
	ListEntitiesOverTime(ctx context.Context, in *ListEntitiesOverTimeRequest, opts ...grpc.CallOption) (*ListEntitiesOverTimeResponse, error)
	DeleteEntity(ctx context.Context, in *DeleteEntityRequest, opts ...grpc.CallOption) (*DeleteEntityResponse, error)
	// Deprecated: Do not use.
	LoadScenario(ctx context.Context, in *LoadScenarioRequest, opts ...grpc.CallOption) (*LoadScenarioResponse, error)
}

type netOpsClient struct {
	cc grpc.ClientConnInterface
}

func NewNetOpsClient(cc grpc.ClientConnInterface) NetOpsClient {
	return &netOpsClient{cc}
}

func (c *netOpsClient) GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*Entity, error) {
	out := new(Entity)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/GetEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netOpsClient) CreateEntity(ctx context.Context, in *CreateEntityRequest, opts ...grpc.CallOption) (*Entity, error) {
	out := new(Entity)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/CreateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netOpsClient) UpdateEntity(ctx context.Context, in *UpdateEntityRequest, opts ...grpc.CallOption) (*Entity, error) {
	out := new(Entity)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/UpdateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netOpsClient) ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (*ListEntitiesResponse, error) {
	out := new(ListEntitiesResponse)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netOpsClient) ListEntitiesOverTime(ctx context.Context, in *ListEntitiesOverTimeRequest, opts ...grpc.CallOption) (*ListEntitiesOverTimeResponse, error) {
	out := new(ListEntitiesOverTimeResponse)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntitiesOverTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netOpsClient) DeleteEntity(ctx context.Context, in *DeleteEntityRequest, opts ...grpc.CallOption) (*DeleteEntityResponse, error) {
	out := new(DeleteEntityResponse)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/DeleteEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *netOpsClient) LoadScenario(ctx context.Context, in *LoadScenarioRequest, opts ...grpc.CallOption) (*LoadScenarioResponse, error) {
	out := new(LoadScenarioResponse)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.NetOps/LoadScenario", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetOpsServer is the server API for NetOps service.
type NetOpsServer interface {
	GetEntity(context.Context, *GetEntityRequest) (*Entity, error)
	CreateEntity(context.Context, *CreateEntityRequest) (*Entity, error)
	UpdateEntity(context.Context, *UpdateEntityRequest) (*Entity, error)
	ListEntities(context.Context, *ListEntitiesRequest) (*ListEntitiesResponse, error)
	ListEntitiesOverTime(context.Context, *ListEntitiesOverTimeRequest) (*ListEntitiesOverTimeResponse, error)
	DeleteEntity(context.Context, *DeleteEntityRequest) (*DeleteEntityResponse, error)
	// Deprecated: Do not use.
	LoadScenario(context.Context, *LoadScenarioRequest) (*LoadScenarioResponse, error)
}

// UnimplementedNetOpsServer can be embedded to have forward compatible implementations.
type UnimplementedNetOpsServer struct {
}

func (*UnimplementedNetOpsServer) GetEntity(context.Context, *GetEntityRequest) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntity not implemented")
}
func (*UnimplementedNetOpsServer) CreateEntity(context.Context, *CreateEntityRequest) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntity not implemented")
}
func (*UnimplementedNetOpsServer) UpdateEntity(context.Context, *UpdateEntityRequest) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntity not implemented")
}
func (*UnimplementedNetOpsServer) ListEntities(context.Context, *ListEntitiesRequest) (*ListEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntities not implemented")
}
func (*UnimplementedNetOpsServer) ListEntitiesOverTime(context.Context, *ListEntitiesOverTimeRequest) (*ListEntitiesOverTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEntitiesOverTime not implemented")
}
func (*UnimplementedNetOpsServer) DeleteEntity(context.Context, *DeleteEntityRequest) (*DeleteEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntity not implemented")
}
func (*UnimplementedNetOpsServer) LoadScenario(context.Context, *LoadScenarioRequest) (*LoadScenarioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadScenario not implemented")
}

func RegisterNetOpsServer(s *grpc.Server, srv NetOpsServer) {
	s.RegisterService(&_NetOps_serviceDesc, srv)
}

func _NetOps_GetEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).GetEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/GetEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).GetEntity(ctx, req.(*GetEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/CreateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).CreateEntity(ctx, req.(*CreateEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_UpdateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).UpdateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/UpdateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).UpdateEntity(ctx, req.(*UpdateEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_ListEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).ListEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).ListEntities(ctx, req.(*ListEntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_ListEntitiesOverTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntitiesOverTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).ListEntitiesOverTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/ListEntitiesOverTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).ListEntitiesOverTime(ctx, req.(*ListEntitiesOverTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_DeleteEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).DeleteEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/DeleteEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).DeleteEntity(ctx, req.(*DeleteEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetOps_LoadScenario_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadScenarioRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetOpsServer).LoadScenario(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.NetOps/LoadScenario",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetOpsServer).LoadScenario(ctx, req.(*LoadScenarioRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetOps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aalyria.spacetime.api.nbi.v1alpha.NetOps",
	HandlerType: (*NetOpsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEntity",
			Handler:    _NetOps_GetEntity_Handler,
		},
		{
			MethodName: "CreateEntity",
			Handler:    _NetOps_CreateEntity_Handler,
		},
		{
			MethodName: "UpdateEntity",
			Handler:    _NetOps_UpdateEntity_Handler,
		},
		{
			MethodName: "ListEntities",
			Handler:    _NetOps_ListEntities_Handler,
		},
		{
			MethodName: "ListEntitiesOverTime",
			Handler:    _NetOps_ListEntitiesOverTime_Handler,
		},
		{
			MethodName: "DeleteEntity",
			Handler:    _NetOps_DeleteEntity_Handler,
		},
		{
			MethodName: "LoadScenario",
			Handler:    _NetOps_LoadScenario_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/nbi/v1alpha/nbi.proto",
}
