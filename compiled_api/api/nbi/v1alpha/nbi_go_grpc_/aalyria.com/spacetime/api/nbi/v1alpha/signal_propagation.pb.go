// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/signal_propagation.proto

package v1alpha

import (
	_ "aalyria.com/spacetime/api/common"
	resources "aalyria.com/spacetime/api/nbi/v1alpha/resources"
	context "context"
	interval "google.golang.org/genproto/googleapis/type/interval"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalPropagationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransmitterModel *resources.TransceiverProvider `protobuf:"bytes,1,opt,name=transmitter_model,json=transmitterModel" json:"transmitter_model,omitempty"`
	BandProfileId    *string                        `protobuf:"bytes,2,opt,name=band_profile_id,json=bandProfileId" json:"band_profile_id,omitempty"`
	Target           *resources.TransceiverProvider `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Coverage         *resources.CoordinateArray     `protobuf:"bytes,4,opt,name=coverage" json:"coverage,omitempty"`
	// Types that are assignable to AnalysisTime:
	//
	//	*SignalPropagationRequest_AnalysisInterval
	//	*SignalPropagationRequest_AnalysisInstant
	AnalysisTime               isSignalPropagationRequest_AnalysisTime `protobuf_oneof:"analysis_time"`
	StepSize                   *durationpb.Duration                    `protobuf:"bytes,7,opt,name=step_size,json=stepSize" json:"step_size,omitempty"`
	SpatialPropagationStepSize *durationpb.Duration                    `protobuf:"bytes,9,opt,name=spatial_propagation_step_size,json=spatialPropagationStepSize" json:"spatial_propagation_step_size,omitempty"`
	ExplainInaccessibility     *bool                                   `protobuf:"varint,8,opt,name=explain_inaccessibility,json=explainInaccessibility" json:"explain_inaccessibility,omitempty"`
	ReferenceDataTime          *timestamppb.Timestamp                  `protobuf:"bytes,11,opt,name=reference_data_time,json=referenceDataTime" json:"reference_data_time,omitempty"`
}

func (x *SignalPropagationRequest) Reset() {
	*x = SignalPropagationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalPropagationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalPropagationRequest) ProtoMessage() {}

func (x *SignalPropagationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalPropagationRequest.ProtoReflect.Descriptor instead.
func (*SignalPropagationRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_signal_propagation_proto_rawDescGZIP(), []int{0}
}

func (x *SignalPropagationRequest) GetTransmitterModel() *resources.TransceiverProvider {
	if x != nil {
		return x.TransmitterModel
	}
	return nil
}

func (x *SignalPropagationRequest) GetBandProfileId() string {
	if x != nil && x.BandProfileId != nil {
		return *x.BandProfileId
	}
	return ""
}

func (x *SignalPropagationRequest) GetTarget() *resources.TransceiverProvider {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SignalPropagationRequest) GetCoverage() *resources.CoordinateArray {
	if x != nil {
		return x.Coverage
	}
	return nil
}

func (m *SignalPropagationRequest) GetAnalysisTime() isSignalPropagationRequest_AnalysisTime {
	if m != nil {
		return m.AnalysisTime
	}
	return nil
}

func (x *SignalPropagationRequest) GetAnalysisInterval() *interval.Interval {
	if x, ok := x.GetAnalysisTime().(*SignalPropagationRequest_AnalysisInterval); ok {
		return x.AnalysisInterval
	}
	return nil
}

func (x *SignalPropagationRequest) GetAnalysisInstant() *timestamppb.Timestamp {
	if x, ok := x.GetAnalysisTime().(*SignalPropagationRequest_AnalysisInstant); ok {
		return x.AnalysisInstant
	}
	return nil
}

func (x *SignalPropagationRequest) GetStepSize() *durationpb.Duration {
	if x != nil {
		return x.StepSize
	}
	return nil
}

func (x *SignalPropagationRequest) GetSpatialPropagationStepSize() *durationpb.Duration {
	if x != nil {
		return x.SpatialPropagationStepSize
	}
	return nil
}

func (x *SignalPropagationRequest) GetExplainInaccessibility() bool {
	if x != nil && x.ExplainInaccessibility != nil {
		return *x.ExplainInaccessibility
	}
	return false
}

func (x *SignalPropagationRequest) GetReferenceDataTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReferenceDataTime
	}
	return nil
}

type isSignalPropagationRequest_AnalysisTime interface {
	isSignalPropagationRequest_AnalysisTime()
}

type SignalPropagationRequest_AnalysisInterval struct {
	AnalysisInterval *interval.Interval `protobuf:"bytes,6,opt,name=analysis_interval,json=analysisInterval,oneof"`
}

type SignalPropagationRequest_AnalysisInstant struct {
	AnalysisInstant *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=analysis_instant,json=analysisInstant,oneof"`
}

func (*SignalPropagationRequest_AnalysisInterval) isSignalPropagationRequest_AnalysisTime() {}

func (*SignalPropagationRequest_AnalysisInstant) isSignalPropagationRequest_AnalysisTime() {}

type SignalPropagationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessInterval []*resources.AccessInterval `protobuf:"bytes,1,rep,name=access_interval,json=accessInterval" json:"access_interval,omitempty"`
}

func (x *SignalPropagationResponse) Reset() {
	*x = SignalPropagationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalPropagationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalPropagationResponse) ProtoMessage() {}

func (x *SignalPropagationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalPropagationResponse.ProtoReflect.Descriptor instead.
func (*SignalPropagationResponse) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_signal_propagation_proto_rawDescGZIP(), []int{1}
}

func (x *SignalPropagationResponse) GetAccessInterval() []*resources.AccessInterval {
	if x != nil {
		return x.AccessInterval
	}
	return nil
}

var File_api_nbi_v1alpha_signal_propagation_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_signal_propagation_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x25, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa0, 0x06, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f,
	0x62, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x58,
	0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x47,
	0x0a, 0x10, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x5c, 0x0a, 0x1d, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x1a, 0x73, 0x70, 0x61, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x37, 0x0a,
	0x17, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x32, 0x9d, 0x01, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x87, 0x01,
	0x0a, 0x08, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4e, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x5a, 0x25, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
}

var (
	file_api_nbi_v1alpha_signal_propagation_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_signal_propagation_proto_rawDescData = file_api_nbi_v1alpha_signal_propagation_proto_rawDesc
)

func file_api_nbi_v1alpha_signal_propagation_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_signal_propagation_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_signal_propagation_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_signal_propagation_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_signal_propagation_proto_rawDescData
}

var file_api_nbi_v1alpha_signal_propagation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_nbi_v1alpha_signal_propagation_proto_goTypes = []interface{}{
	(*SignalPropagationRequest)(nil),      // 0: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest
	(*SignalPropagationResponse)(nil),     // 1: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationResponse
	(*resources.TransceiverProvider)(nil), // 2: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverProvider
	(*resources.CoordinateArray)(nil),     // 3: aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray
	(*interval.Interval)(nil),             // 4: google.type.Interval
	(*timestamppb.Timestamp)(nil),         // 5: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),           // 6: google.protobuf.Duration
	(*resources.AccessInterval)(nil),      // 7: aalyria.spacetime.api.nbi.v1alpha.resources.AccessInterval
}
var file_api_nbi_v1alpha_signal_propagation_proto_depIdxs = []int32{
	2,  // 0: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.transmitter_model:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverProvider
	2,  // 1: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.target:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverProvider
	3,  // 2: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.coverage:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray
	4,  // 3: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.analysis_interval:type_name -> google.type.Interval
	5,  // 4: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.analysis_instant:type_name -> google.protobuf.Timestamp
	6,  // 5: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.step_size:type_name -> google.protobuf.Duration
	6,  // 6: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.spatial_propagation_step_size:type_name -> google.protobuf.Duration
	5,  // 7: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest.reference_data_time:type_name -> google.protobuf.Timestamp
	7,  // 8: aalyria.spacetime.api.nbi.v1alpha.SignalPropagationResponse.access_interval:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.AccessInterval
	0,  // 9: aalyria.spacetime.api.nbi.v1alpha.SignalPropagation.Evaluate:input_type -> aalyria.spacetime.api.nbi.v1alpha.SignalPropagationRequest
	1,  // 10: aalyria.spacetime.api.nbi.v1alpha.SignalPropagation.Evaluate:output_type -> aalyria.spacetime.api.nbi.v1alpha.SignalPropagationResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_signal_propagation_proto_init() }
func file_api_nbi_v1alpha_signal_propagation_proto_init() {
	if File_api_nbi_v1alpha_signal_propagation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalPropagationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalPropagationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_nbi_v1alpha_signal_propagation_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SignalPropagationRequest_AnalysisInterval)(nil),
		(*SignalPropagationRequest_AnalysisInstant)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_signal_propagation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_nbi_v1alpha_signal_propagation_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_signal_propagation_proto_depIdxs,
		MessageInfos:      file_api_nbi_v1alpha_signal_propagation_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_signal_propagation_proto = out.File
	file_api_nbi_v1alpha_signal_propagation_proto_rawDesc = nil
	file_api_nbi_v1alpha_signal_propagation_proto_goTypes = nil
	file_api_nbi_v1alpha_signal_propagation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SignalPropagationClient is the client API for SignalPropagation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignalPropagationClient interface {
	Evaluate(ctx context.Context, in *SignalPropagationRequest, opts ...grpc.CallOption) (*SignalPropagationResponse, error)
}

type signalPropagationClient struct {
	cc grpc.ClientConnInterface
}

func NewSignalPropagationClient(cc grpc.ClientConnInterface) SignalPropagationClient {
	return &signalPropagationClient{cc}
}

func (c *signalPropagationClient) Evaluate(ctx context.Context, in *SignalPropagationRequest, opts ...grpc.CallOption) (*SignalPropagationResponse, error) {
	out := new(SignalPropagationResponse)
	err := c.cc.Invoke(ctx, "/aalyria.spacetime.api.nbi.v1alpha.SignalPropagation/Evaluate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignalPropagationServer is the server API for SignalPropagation service.
type SignalPropagationServer interface {
	Evaluate(context.Context, *SignalPropagationRequest) (*SignalPropagationResponse, error)
}

// UnimplementedSignalPropagationServer can be embedded to have forward compatible implementations.
type UnimplementedSignalPropagationServer struct {
}

func (*UnimplementedSignalPropagationServer) Evaluate(context.Context, *SignalPropagationRequest) (*SignalPropagationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Evaluate not implemented")
}

func RegisterSignalPropagationServer(s *grpc.Server, srv SignalPropagationServer) {
	s.RegisterService(&_SignalPropagation_serviceDesc, srv)
}

func _SignalPropagation_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalPropagationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalPropagationServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aalyria.spacetime.api.nbi.v1alpha.SignalPropagation/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalPropagationServer).Evaluate(ctx, req.(*SignalPropagationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SignalPropagation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aalyria.spacetime.api.nbi.v1alpha.SignalPropagation",
	HandlerType: (*SignalPropagationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Evaluate",
			Handler:    _SignalPropagation_Evaluate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/nbi/v1alpha/signal_propagation.proto",
}
