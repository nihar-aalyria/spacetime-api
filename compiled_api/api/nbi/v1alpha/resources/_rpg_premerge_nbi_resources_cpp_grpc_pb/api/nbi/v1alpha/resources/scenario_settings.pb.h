// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/nbi/v1alpha/resources/scenario_settings.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/common/channel.pb.h"
#include "api/common/coordinates.pb.h"
#include "api/common/platform_antenna.pb.h"
#include "api/common/wireless_receiver.pb.h"
#include "api/common/wireless_transceiver.pb.h"
#include "api/common/wireless_transmitter.pb.h"
#include "api/nbi/v1alpha/resources/antenna_pattern.pb.h"
#include "api/nbi/v1alpha/resources/network_element.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
namespace aalyria {
namespace spacetime {
namespace api {
namespace nbi {
namespace v1alpha {
namespace resources {
class ScenarioSettings;
struct ScenarioSettingsDefaultTypeInternal;
extern ScenarioSettingsDefaultTypeInternal _ScenarioSettings_default_instance_;
class ScenarioSettings_AirFleet;
struct ScenarioSettings_AirFleetDefaultTypeInternal;
extern ScenarioSettings_AirFleetDefaultTypeInternal _ScenarioSettings_AirFleet_default_instance_;
class ScenarioSettings_AirFleet_Aircraft;
struct ScenarioSettings_AirFleet_AircraftDefaultTypeInternal;
extern ScenarioSettings_AirFleet_AircraftDefaultTypeInternal _ScenarioSettings_AirFleet_Aircraft_default_instance_;
class ScenarioSettings_AntennaPatternSettings;
struct ScenarioSettings_AntennaPatternSettingsDefaultTypeInternal;
extern ScenarioSettings_AntennaPatternSettingsDefaultTypeInternal _ScenarioSettings_AntennaPatternSettings_default_instance_;
class ScenarioSettings_Constellation;
struct ScenarioSettings_ConstellationDefaultTypeInternal;
extern ScenarioSettings_ConstellationDefaultTypeInternal _ScenarioSettings_Constellation_default_instance_;
class ScenarioSettings_Constellation_OrbitalParameters;
struct ScenarioSettings_Constellation_OrbitalParametersDefaultTypeInternal;
extern ScenarioSettings_Constellation_OrbitalParametersDefaultTypeInternal _ScenarioSettings_Constellation_OrbitalParameters_default_instance_;
class ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters;
struct ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParametersDefaultTypeInternal;
extern ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParametersDefaultTypeInternal _ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters_default_instance_;
class ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters;
struct ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParametersDefaultTypeInternal;
extern ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParametersDefaultTypeInternal _ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_default_instance_;
class ScenarioSettings_Constellation_ServiceRequest;
struct ScenarioSettings_Constellation_ServiceRequestDefaultTypeInternal;
extern ScenarioSettings_Constellation_ServiceRequestDefaultTypeInternal _ScenarioSettings_Constellation_ServiceRequest_default_instance_;
class ScenarioSettings_Gateway;
struct ScenarioSettings_GatewayDefaultTypeInternal;
extern ScenarioSettings_GatewayDefaultTypeInternal _ScenarioSettings_Gateway_default_instance_;
class ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse;
struct ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUseDefaultTypeInternal;
extern ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUseDefaultTypeInternal _ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse_default_instance_;
class ScenarioSettings_Pop;
struct ScenarioSettings_PopDefaultTypeInternal;
extern ScenarioSettings_PopDefaultTypeInternal _ScenarioSettings_Pop_default_instance_;
class ScenarioSettings_ReceiverDefinition;
struct ScenarioSettings_ReceiverDefinitionDefaultTypeInternal;
extern ScenarioSettings_ReceiverDefinitionDefaultTypeInternal _ScenarioSettings_ReceiverDefinition_default_instance_;
class ScenarioSettings_ScenarioChannelDefinition;
struct ScenarioSettings_ScenarioChannelDefinitionDefaultTypeInternal;
extern ScenarioSettings_ScenarioChannelDefinitionDefaultTypeInternal _ScenarioSettings_ScenarioChannelDefinition_default_instance_;
class ScenarioSettings_SequentialChannelDefinition;
struct ScenarioSettings_SequentialChannelDefinitionDefaultTypeInternal;
extern ScenarioSettings_SequentialChannelDefinitionDefaultTypeInternal _ScenarioSettings_SequentialChannelDefinition_default_instance_;
class ScenarioSettings_ShipFleet;
struct ScenarioSettings_ShipFleetDefaultTypeInternal;
extern ScenarioSettings_ShipFleetDefaultTypeInternal _ScenarioSettings_ShipFleet_default_instance_;
class ScenarioSettings_ShipFleet_Ship;
struct ScenarioSettings_ShipFleet_ShipDefaultTypeInternal;
extern ScenarioSettings_ShipFleet_ShipDefaultTypeInternal _ScenarioSettings_ShipFleet_Ship_default_instance_;
class ScenarioSettings_TransceiverModel;
struct ScenarioSettings_TransceiverModelDefaultTypeInternal;
extern ScenarioSettings_TransceiverModelDefaultTypeInternal _ScenarioSettings_TransceiverModel_default_instance_;
class ScenarioSettings_TransmitterDefinition;
struct ScenarioSettings_TransmitterDefinitionDefaultTypeInternal;
extern ScenarioSettings_TransmitterDefinitionDefaultTypeInternal _ScenarioSettings_TransmitterDefinition_default_instance_;
class ScenarioSettings_UserTerminal;
struct ScenarioSettings_UserTerminalDefaultTypeInternal;
extern ScenarioSettings_UserTerminalDefaultTypeInternal _ScenarioSettings_UserTerminal_default_instance_;
class ScenarioSettings_UserTerminalCommonSettings;
struct ScenarioSettings_UserTerminalCommonSettingsDefaultTypeInternal;
extern ScenarioSettings_UserTerminalCommonSettingsDefaultTypeInternal _ScenarioSettings_UserTerminalCommonSettings_default_instance_;
class ScenarioSettings_UserTerminal_UserTerminalGridDefinition;
struct ScenarioSettings_UserTerminal_UserTerminalGridDefinitionDefaultTypeInternal;
extern ScenarioSettings_UserTerminal_UserTerminalGridDefinitionDefaultTypeInternal _ScenarioSettings_UserTerminal_UserTerminalGridDefinition_default_instance_;
class ScenarioSettings_WirelessInterface;
struct ScenarioSettings_WirelessInterfaceDefaultTypeInternal;
extern ScenarioSettings_WirelessInterfaceDefaultTypeInternal _ScenarioSettings_WirelessInterface_default_instance_;
}  // namespace resources
}  // namespace v1alpha
}  // namespace nbi
}  // namespace api
}  // namespace spacetime
}  // namespace aalyria
PROTOBUF_NAMESPACE_OPEN
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition>(Arena*);
template <>
::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* Arena::CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace aalyria {
namespace spacetime {
namespace api {
namespace nbi {
namespace v1alpha {
namespace resources {
enum ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern : int {
  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NONE = 0,
  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NSEW = 1,
  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NS = 2,
};

bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IsValid(int value);
constexpr ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_MIN = static_cast<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>(0);
constexpr ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_MAX = static_cast<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>(2);
constexpr int ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_ARRAYSIZE = 2 + 1;
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_descriptor();
template <typename T>
const std::string& ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Name(T value) {
  static_assert(std::is_same<T, ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IslPattern_Name().");
  return ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Name(static_cast<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>(value));
}
template <>
inline const std::string& ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Name(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfDenseEnum<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Parse(absl::string_view name, ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>(
      ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters) */ {
 public:
  inline ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters() : ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters(nullptr) {}
  ~ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters(const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& from);
  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters&& from) noexcept
    : ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& operator=(const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& operator=(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters*>(
               &_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& a, ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& from) {
    ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters";
  }
  protected:
  explicit ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using IslPattern = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern;
  static constexpr IslPattern ISL_PATTERN_NONE = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NONE;
  static constexpr IslPattern ISL_PATTERN_NSEW = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NSEW;
  static constexpr IslPattern ISL_PATTERN_NS = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_ISL_PATTERN_NS;
  static inline bool IslPattern_IsValid(int value) {
    return ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IsValid(value);
  }
  static constexpr IslPattern IslPattern_MIN = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_MIN;
  static constexpr IslPattern IslPattern_MAX = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_MAX;
  static constexpr int IslPattern_ARRAYSIZE = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IslPattern_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IslPattern_descriptor() {
    return ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_descriptor();
  }
  template <typename T>
  static inline const std::string& IslPattern_Name(T value) {
    return ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Name(value);
  }
  static inline bool IslPattern_Parse(absl::string_view name, IslPattern* value) {
    return ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kSemimajorAxisKmFieldNumber = 1,
    kInclinationDegFieldNumber = 2,
    kNumberOfPlanesFieldNumber = 3,
    kSatellitesPerPlaneFieldNumber = 4,
    kInterPlaneSpacingFieldNumber = 5,
    kIslPatternFieldNumber = 6,
    kEccentricityFieldNumber = 7,
    kRaanOffsetDegFieldNumber = 8,
  };
  // optional double semimajor_axis_km = 1 [json_name = "semimajorAxisKm"];
  bool has_semimajor_axis_km() const;
  void clear_semimajor_axis_km() ;
  double semimajor_axis_km() const;
  void set_semimajor_axis_km(double value);

  private:
  double _internal_semimajor_axis_km() const;
  void _internal_set_semimajor_axis_km(double value);

  public:
  // optional double inclination_deg = 2 [json_name = "inclinationDeg"];
  bool has_inclination_deg() const;
  void clear_inclination_deg() ;
  double inclination_deg() const;
  void set_inclination_deg(double value);

  private:
  double _internal_inclination_deg() const;
  void _internal_set_inclination_deg(double value);

  public:
  // optional uint32 number_of_planes = 3 [json_name = "numberOfPlanes"];
  bool has_number_of_planes() const;
  void clear_number_of_planes() ;
  ::uint32_t number_of_planes() const;
  void set_number_of_planes(::uint32_t value);

  private:
  ::uint32_t _internal_number_of_planes() const;
  void _internal_set_number_of_planes(::uint32_t value);

  public:
  // optional uint32 satellites_per_plane = 4 [json_name = "satellitesPerPlane"];
  bool has_satellites_per_plane() const;
  void clear_satellites_per_plane() ;
  ::uint32_t satellites_per_plane() const;
  void set_satellites_per_plane(::uint32_t value);

  private:
  ::uint32_t _internal_satellites_per_plane() const;
  void _internal_set_satellites_per_plane(::uint32_t value);

  public:
  // optional uint32 inter_plane_spacing = 5 [json_name = "interPlaneSpacing"];
  bool has_inter_plane_spacing() const;
  void clear_inter_plane_spacing() ;
  ::uint32_t inter_plane_spacing() const;
  void set_inter_plane_spacing(::uint32_t value);

  private:
  ::uint32_t _internal_inter_plane_spacing() const;
  void _internal_set_inter_plane_spacing(::uint32_t value);

  public:
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.IslPattern isl_pattern = 6 [default = ISL_PATTERN_NONE, json_name = "islPattern"];
  bool has_isl_pattern() const;
  void clear_isl_pattern() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern isl_pattern() const;
  void set_isl_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern value);

  private:
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern _internal_isl_pattern() const;
  void _internal_set_isl_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern value);

  public:
  // optional double eccentricity = 7 [default = 0, json_name = "eccentricity"];
  bool has_eccentricity() const;
  void clear_eccentricity() ;
  double eccentricity() const;
  void set_eccentricity(double value);

  private:
  double _internal_eccentricity() const;
  void _internal_set_eccentricity(double value);

  public:
  // optional double raan_offset_deg = 8 [json_name = "raanOffsetDeg"];
  bool has_raan_offset_deg() const;
  void clear_raan_offset_deg() ;
  double raan_offset_deg() const;
  void set_raan_offset_deg(double value);

  private:
  double _internal_raan_offset_deg() const;
  void _internal_set_raan_offset_deg(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    double semimajor_axis_km_;
    double inclination_deg_;
    ::uint32_t number_of_planes_;
    ::uint32_t satellites_per_plane_;
    ::uint32_t inter_plane_spacing_;
    int isl_pattern_;
    double eccentricity_;
    double raan_offset_deg_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters) */ {
 public:
  inline ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters() : ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters(nullptr) {}
  ~ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters(const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& from);
  ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters&& from) noexcept
    : ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& operator=(const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& operator=(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters*>(
               &_ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& a, ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& from) {
    ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters";
  }
  protected:
  explicit ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMotionFieldNumber = 2,
  };
  // required string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // required .aalyria.spacetime.api.common.Motion motion = 2 [json_name = "motion"];
  bool has_motion() const;
  void clear_motion() ;
  const ::aalyria::spacetime::api::common::Motion& motion() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::Motion* release_motion();
  ::aalyria::spacetime::api::common::Motion* mutable_motion();
  void set_allocated_motion(::aalyria::spacetime::api::common::Motion* motion);
  private:
  const ::aalyria::spacetime::api::common::Motion& _internal_motion() const;
  ::aalyria::spacetime::api::common::Motion* _internal_mutable_motion();
  public:
  void unsafe_arena_set_allocated_motion(
      ::aalyria::spacetime::api::common::Motion* motion);
  ::aalyria::spacetime::api::common::Motion* unsafe_arena_release_motion();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  ::size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::aalyria::spacetime::api::common::Motion* motion_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Constellation_OrbitalParameters final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters) */ {
 public:
  inline ScenarioSettings_Constellation_OrbitalParameters() : ScenarioSettings_Constellation_OrbitalParameters(nullptr) {}
  ~ScenarioSettings_Constellation_OrbitalParameters() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Constellation_OrbitalParameters(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Constellation_OrbitalParameters(const ScenarioSettings_Constellation_OrbitalParameters& from);
  ScenarioSettings_Constellation_OrbitalParameters(ScenarioSettings_Constellation_OrbitalParameters&& from) noexcept
    : ScenarioSettings_Constellation_OrbitalParameters() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Constellation_OrbitalParameters& operator=(const ScenarioSettings_Constellation_OrbitalParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Constellation_OrbitalParameters& operator=(ScenarioSettings_Constellation_OrbitalParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Constellation_OrbitalParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Constellation_OrbitalParameters* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Constellation_OrbitalParameters*>(
               &_ScenarioSettings_Constellation_OrbitalParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ScenarioSettings_Constellation_OrbitalParameters& a, ScenarioSettings_Constellation_OrbitalParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Constellation_OrbitalParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Constellation_OrbitalParameters* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Constellation_OrbitalParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Constellation_OrbitalParameters>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Constellation_OrbitalParameters& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Constellation_OrbitalParameters& from) {
    ScenarioSettings_Constellation_OrbitalParameters::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Constellation_OrbitalParameters* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters";
  }
  protected:
  explicit ScenarioSettings_Constellation_OrbitalParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters WalkerDeltaParameters;
  typedef ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters ArbitraryMotionParameters;

  // accessors -------------------------------------------------------

  enum : int {
    kArbitraryMotionParametersFieldNumber = 3,
    kWalkerDeltaParametersFieldNumber = 2,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters arbitrary_motion_parameters = 3 [json_name = "arbitraryMotionParameters"];
  int arbitrary_motion_parameters_size() const;
  private:
  int _internal_arbitrary_motion_parameters_size() const;

  public:
  void clear_arbitrary_motion_parameters() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* mutable_arbitrary_motion_parameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters >*
      mutable_arbitrary_motion_parameters();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& _internal_arbitrary_motion_parameters(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* _internal_add_arbitrary_motion_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>& _internal_arbitrary_motion_parameters() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>* _internal_mutable_arbitrary_motion_parameters();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& arbitrary_motion_parameters(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* add_arbitrary_motion_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters >&
      arbitrary_motion_parameters() const;
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters walker_delta_parameters = 2 [json_name = "walkerDeltaParameters"];
  bool has_walker_delta_parameters() const;
  void clear_walker_delta_parameters() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& walker_delta_parameters() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* release_walker_delta_parameters();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* mutable_walker_delta_parameters();
  void set_allocated_walker_delta_parameters(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* walker_delta_parameters);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& _internal_walker_delta_parameters() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* _internal_mutable_walker_delta_parameters();
  public:
  void unsafe_arena_set_allocated_walker_delta_parameters(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* walker_delta_parameters);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* unsafe_arena_release_walker_delta_parameters();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters > arbitrary_motion_parameters_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* walker_delta_parameters_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Constellation_ServiceRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest) */ {
 public:
  inline ScenarioSettings_Constellation_ServiceRequest() : ScenarioSettings_Constellation_ServiceRequest(nullptr) {}
  ~ScenarioSettings_Constellation_ServiceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Constellation_ServiceRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Constellation_ServiceRequest(const ScenarioSettings_Constellation_ServiceRequest& from);
  ScenarioSettings_Constellation_ServiceRequest(ScenarioSettings_Constellation_ServiceRequest&& from) noexcept
    : ScenarioSettings_Constellation_ServiceRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Constellation_ServiceRequest& operator=(const ScenarioSettings_Constellation_ServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Constellation_ServiceRequest& operator=(ScenarioSettings_Constellation_ServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Constellation_ServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Constellation_ServiceRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Constellation_ServiceRequest*>(
               &_ScenarioSettings_Constellation_ServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ScenarioSettings_Constellation_ServiceRequest& a, ScenarioSettings_Constellation_ServiceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Constellation_ServiceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Constellation_ServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Constellation_ServiceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Constellation_ServiceRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Constellation_ServiceRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Constellation_ServiceRequest& from) {
    ScenarioSettings_Constellation_ServiceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Constellation_ServiceRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest";
  }
  protected:
  explicit ScenarioSettings_Constellation_ServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPopIdFieldNumber = 1,
    kUplinkCapacityBpsFieldNumber = 2,
    kDownlinkCapacityBpsFieldNumber = 3,
    kPriorityFieldNumber = 4,
  };
  // optional string pop_id = 1 [json_name = "popId"];
  bool has_pop_id() const;
  void clear_pop_id() ;
  const std::string& pop_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pop_id(Arg_&& arg, Args_... args);
  std::string* mutable_pop_id();
  PROTOBUF_NODISCARD std::string* release_pop_id();
  void set_allocated_pop_id(std::string* ptr);

  private:
  const std::string& _internal_pop_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pop_id(
      const std::string& value);
  std::string* _internal_mutable_pop_id();

  public:
  // optional double uplink_capacity_bps = 2 [json_name = "uplinkCapacityBps"];
  bool has_uplink_capacity_bps() const;
  void clear_uplink_capacity_bps() ;
  double uplink_capacity_bps() const;
  void set_uplink_capacity_bps(double value);

  private:
  double _internal_uplink_capacity_bps() const;
  void _internal_set_uplink_capacity_bps(double value);

  public:
  // optional double downlink_capacity_bps = 3 [json_name = "downlinkCapacityBps"];
  bool has_downlink_capacity_bps() const;
  void clear_downlink_capacity_bps() ;
  double downlink_capacity_bps() const;
  void set_downlink_capacity_bps(double value);

  private:
  double _internal_downlink_capacity_bps() const;
  void _internal_set_downlink_capacity_bps(double value);

  public:
  // optional double priority = 4 [json_name = "priority"];
  bool has_priority() const;
  void clear_priority() ;
  double priority() const;
  void set_priority(double value);

  private:
  double _internal_priority() const;
  void _internal_set_priority(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pop_id_;
    double uplink_capacity_bps_;
    double downlink_capacity_bps_;
    double priority_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Constellation final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation) */ {
 public:
  inline ScenarioSettings_Constellation() : ScenarioSettings_Constellation(nullptr) {}
  ~ScenarioSettings_Constellation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Constellation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Constellation(const ScenarioSettings_Constellation& from);
  ScenarioSettings_Constellation(ScenarioSettings_Constellation&& from) noexcept
    : ScenarioSettings_Constellation() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Constellation& operator=(const ScenarioSettings_Constellation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Constellation& operator=(ScenarioSettings_Constellation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Constellation& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Constellation* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Constellation*>(
               &_ScenarioSettings_Constellation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ScenarioSettings_Constellation& a, ScenarioSettings_Constellation& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Constellation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Constellation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Constellation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Constellation>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Constellation& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Constellation& from) {
    ScenarioSettings_Constellation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Constellation* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation";
  }
  protected:
  explicit ScenarioSettings_Constellation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_Constellation_OrbitalParameters OrbitalParameters;
  typedef ScenarioSettings_Constellation_ServiceRequest ServiceRequest;

  // accessors -------------------------------------------------------

  enum : int {
    kTransceiverModelsFieldNumber = 3,
    kWirelessInterfacesFieldNumber = 4,
    kServiceRequestFieldNumber = 7,
    kNameFieldNumber = 1,
    kTypeFieldNumber = 5,
    kOrbitalParametersFieldNumber = 2,
    kStorageFieldNumber = 6,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 3 [json_name = "transceiverModels"];
  int transceiver_models_size() const;
  private:
  int _internal_transceiver_models_size() const;

  public:
  void clear_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 4 [json_name = "wirelessInterfaces"];
  int wireless_interfaces_size() const;
  private:
  int _internal_wireless_interfaces_size() const;

  public:
  void clear_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      wireless_interfaces() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest service_request = 7 [json_name = "serviceRequest"];
  int service_request_size() const;
  private:
  int _internal_service_request_size() const;

  public:
  void clear_service_request() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* mutable_service_request(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest >*
      mutable_service_request();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest& _internal_service_request(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* _internal_add_service_request();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest>& _internal_service_request() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest>* _internal_mutable_service_request();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest& service_request(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* add_service_request();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest >&
      service_request() const;
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string type = 5 [json_name = "type"];
  bool has_type() const;
  void clear_type() ;
  const std::string& type() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters orbital_parameters = 2 [json_name = "orbitalParameters"];
  bool has_orbital_parameters() const;
  void clear_orbital_parameters() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters& orbital_parameters() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* release_orbital_parameters();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* mutable_orbital_parameters();
  void set_allocated_orbital_parameters(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* orbital_parameters);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters& _internal_orbital_parameters() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* _internal_mutable_orbital_parameters();
  public:
  void unsafe_arena_set_allocated_orbital_parameters(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* orbital_parameters);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* unsafe_arena_release_orbital_parameters();
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode.Storage storage = 6 [json_name = "storage"];
  bool has_storage() const;
  void clear_storage() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage& storage() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* release_storage();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* mutable_storage();
  void set_allocated_storage(::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* storage);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage& _internal_storage() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* _internal_mutable_storage();
  public:
  void unsafe_arena_set_allocated_storage(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* storage);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* unsafe_arena_release_storage();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest > service_request_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* orbital_parameters_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* storage_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_WirelessInterface final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface) */ {
 public:
  inline ScenarioSettings_WirelessInterface() : ScenarioSettings_WirelessInterface(nullptr) {}
  ~ScenarioSettings_WirelessInterface() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_WirelessInterface(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_WirelessInterface(const ScenarioSettings_WirelessInterface& from);
  ScenarioSettings_WirelessInterface(ScenarioSettings_WirelessInterface&& from) noexcept
    : ScenarioSettings_WirelessInterface() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_WirelessInterface& operator=(const ScenarioSettings_WirelessInterface& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_WirelessInterface& operator=(ScenarioSettings_WirelessInterface&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_WirelessInterface& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_WirelessInterface* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_WirelessInterface*>(
               &_ScenarioSettings_WirelessInterface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ScenarioSettings_WirelessInterface& a, ScenarioSettings_WirelessInterface& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_WirelessInterface* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_WirelessInterface* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_WirelessInterface* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_WirelessInterface>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_WirelessInterface& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_WirelessInterface& from) {
    ScenarioSettings_WirelessInterface::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_WirelessInterface* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface";
  }
  protected:
  explicit ScenarioSettings_WirelessInterface(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTransceiverModelIdFieldNumber = 3,
  };
  // optional string id = 1 [json_name = "id"];
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // optional string transceiver_model_id = 3 [json_name = "transceiverModelId"];
  bool has_transceiver_model_id() const;
  void clear_transceiver_model_id() ;
  const std::string& transceiver_model_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transceiver_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_transceiver_model_id();
  PROTOBUF_NODISCARD std::string* release_transceiver_model_id();
  void set_allocated_transceiver_model_id(std::string* ptr);

  private:
  const std::string& _internal_transceiver_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transceiver_model_id(
      const std::string& value);
  std::string* _internal_mutable_transceiver_model_id();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transceiver_model_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_TransmitterDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition) */ {
 public:
  inline ScenarioSettings_TransmitterDefinition() : ScenarioSettings_TransmitterDefinition(nullptr) {}
  ~ScenarioSettings_TransmitterDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_TransmitterDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_TransmitterDefinition(const ScenarioSettings_TransmitterDefinition& from);
  ScenarioSettings_TransmitterDefinition(ScenarioSettings_TransmitterDefinition&& from) noexcept
    : ScenarioSettings_TransmitterDefinition() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_TransmitterDefinition& operator=(const ScenarioSettings_TransmitterDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_TransmitterDefinition& operator=(ScenarioSettings_TransmitterDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_TransmitterDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_TransmitterDefinition* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_TransmitterDefinition*>(
               &_ScenarioSettings_TransmitterDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ScenarioSettings_TransmitterDefinition& a, ScenarioSettings_TransmitterDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_TransmitterDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_TransmitterDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_TransmitterDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_TransmitterDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_TransmitterDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_TransmitterDefinition& from) {
    ScenarioSettings_TransmitterDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_TransmitterDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition";
  }
  protected:
  explicit ScenarioSettings_TransmitterDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSequentialChannelDefinitionFieldNumber = 2,
    kSignalProcessingStepFieldNumber = 4,
    kNameFieldNumber = 1,
    kChannelSelectionMethodFieldNumber = 3,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition sequential_channel_definition = 2 [json_name = "sequentialChannelDefinition"];
  int sequential_channel_definition_size() const;
  private:
  int _internal_sequential_channel_definition_size() const;

  public:
  void clear_sequential_channel_definition() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* mutable_sequential_channel_definition(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >*
      mutable_sequential_channel_definition();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& _internal_sequential_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* _internal_add_sequential_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>& _internal_sequential_channel_definition() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>* _internal_mutable_sequential_channel_definition();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& sequential_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* add_sequential_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >&
      sequential_channel_definition() const;
  // repeated .aalyria.spacetime.api.common.TransmitSignalProcessor signal_processing_step = 4 [json_name = "signalProcessingStep"];
  int signal_processing_step_size() const;
  private:
  int _internal_signal_processing_step_size() const;

  public:
  void clear_signal_processing_step() ;
  ::aalyria::spacetime::api::common::TransmitSignalProcessor* mutable_signal_processing_step(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::TransmitSignalProcessor >*
      mutable_signal_processing_step();
  private:
  const ::aalyria::spacetime::api::common::TransmitSignalProcessor& _internal_signal_processing_step(int index) const;
  ::aalyria::spacetime::api::common::TransmitSignalProcessor* _internal_add_signal_processing_step();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::TransmitSignalProcessor>& _internal_signal_processing_step() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::TransmitSignalProcessor>* _internal_mutable_signal_processing_step();
  public:
  const ::aalyria::spacetime::api::common::TransmitSignalProcessor& signal_processing_step(int index) const;
  ::aalyria::spacetime::api::common::TransmitSignalProcessor* add_signal_processing_step();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::TransmitSignalProcessor >&
      signal_processing_step() const;
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 3 [json_name = "channelSelectionMethod"];
  bool has_channel_selection_method() const;
  void clear_channel_selection_method() ;
  ::aalyria::spacetime::api::common::ChannelSelectionMethod channel_selection_method() const;
  void set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value);

  private:
  ::aalyria::spacetime::api::common::ChannelSelectionMethod _internal_channel_selection_method() const;
  void _internal_set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition > sequential_channel_definition_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::TransmitSignalProcessor > signal_processing_step_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    int channel_selection_method_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_ReceiverDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition) */ {
 public:
  inline ScenarioSettings_ReceiverDefinition() : ScenarioSettings_ReceiverDefinition(nullptr) {}
  ~ScenarioSettings_ReceiverDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_ReceiverDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_ReceiverDefinition(const ScenarioSettings_ReceiverDefinition& from);
  ScenarioSettings_ReceiverDefinition(ScenarioSettings_ReceiverDefinition&& from) noexcept
    : ScenarioSettings_ReceiverDefinition() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_ReceiverDefinition& operator=(const ScenarioSettings_ReceiverDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_ReceiverDefinition& operator=(ScenarioSettings_ReceiverDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_ReceiverDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_ReceiverDefinition* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_ReceiverDefinition*>(
               &_ScenarioSettings_ReceiverDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ScenarioSettings_ReceiverDefinition& a, ScenarioSettings_ReceiverDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_ReceiverDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_ReceiverDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_ReceiverDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_ReceiverDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_ReceiverDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_ReceiverDefinition& from) {
    ScenarioSettings_ReceiverDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_ReceiverDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition";
  }
  protected:
  explicit ScenarioSettings_ReceiverDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSequentialChannelDefinitionFieldNumber = 2,
    kSignalProcessingStepFieldNumber = 4,
    kNameFieldNumber = 1,
    kChannelSelectionMethodFieldNumber = 3,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition sequential_channel_definition = 2 [json_name = "sequentialChannelDefinition"];
  int sequential_channel_definition_size() const;
  private:
  int _internal_sequential_channel_definition_size() const;

  public:
  void clear_sequential_channel_definition() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* mutable_sequential_channel_definition(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >*
      mutable_sequential_channel_definition();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& _internal_sequential_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* _internal_add_sequential_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>& _internal_sequential_channel_definition() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>* _internal_mutable_sequential_channel_definition();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& sequential_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* add_sequential_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >&
      sequential_channel_definition() const;
  // repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 4 [json_name = "signalProcessingStep"];
  int signal_processing_step_size() const;
  private:
  int _internal_signal_processing_step_size() const;

  public:
  void clear_signal_processing_step() ;
  ::aalyria::spacetime::api::common::ReceiveSignalProcessor* mutable_signal_processing_step(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::ReceiveSignalProcessor >*
      mutable_signal_processing_step();
  private:
  const ::aalyria::spacetime::api::common::ReceiveSignalProcessor& _internal_signal_processing_step(int index) const;
  ::aalyria::spacetime::api::common::ReceiveSignalProcessor* _internal_add_signal_processing_step();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::ReceiveSignalProcessor>& _internal_signal_processing_step() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::ReceiveSignalProcessor>* _internal_mutable_signal_processing_step();
  public:
  const ::aalyria::spacetime::api::common::ReceiveSignalProcessor& signal_processing_step(int index) const;
  ::aalyria::spacetime::api::common::ReceiveSignalProcessor* add_signal_processing_step();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::ReceiveSignalProcessor >&
      signal_processing_step() const;
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 3 [json_name = "channelSelectionMethod"];
  bool has_channel_selection_method() const;
  void clear_channel_selection_method() ;
  ::aalyria::spacetime::api::common::ChannelSelectionMethod channel_selection_method() const;
  void set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value);

  private:
  ::aalyria::spacetime::api::common::ChannelSelectionMethod _internal_channel_selection_method() const;
  void _internal_set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition > sequential_channel_definition_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::ReceiveSignalProcessor > signal_processing_step_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    int channel_selection_method_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_TransceiverModel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel) */ {
 public:
  inline ScenarioSettings_TransceiverModel() : ScenarioSettings_TransceiverModel(nullptr) {}
  ~ScenarioSettings_TransceiverModel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_TransceiverModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_TransceiverModel(const ScenarioSettings_TransceiverModel& from);
  ScenarioSettings_TransceiverModel(ScenarioSettings_TransceiverModel&& from) noexcept
    : ScenarioSettings_TransceiverModel() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_TransceiverModel& operator=(const ScenarioSettings_TransceiverModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_TransceiverModel& operator=(ScenarioSettings_TransceiverModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_TransceiverModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_TransceiverModel* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_TransceiverModel*>(
               &_ScenarioSettings_TransceiverModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ScenarioSettings_TransceiverModel& a, ScenarioSettings_TransceiverModel& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_TransceiverModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_TransceiverModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_TransceiverModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_TransceiverModel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_TransceiverModel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_TransceiverModel& from) {
    ScenarioSettings_TransceiverModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_TransceiverModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel";
  }
  protected:
  explicit ScenarioSettings_TransceiverModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMacsFieldNumber = 5,
    kIdFieldNumber = 1,
    kTransmitterFieldNumber = 2,
    kReceiverFieldNumber = 3,
    kAntennaDefinitionFieldNumber = 4,
  };
  // repeated .aalyria.spacetime.api.common.WirelessMac macs = 5 [json_name = "macs"];
  int macs_size() const;
  private:
  int _internal_macs_size() const;

  public:
  void clear_macs() ;
  ::aalyria::spacetime::api::common::WirelessMac* mutable_macs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::WirelessMac >*
      mutable_macs();
  private:
  const ::aalyria::spacetime::api::common::WirelessMac& _internal_macs(int index) const;
  ::aalyria::spacetime::api::common::WirelessMac* _internal_add_macs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::WirelessMac>& _internal_macs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::WirelessMac>* _internal_mutable_macs();
  public:
  const ::aalyria::spacetime::api::common::WirelessMac& macs(int index) const;
  ::aalyria::spacetime::api::common::WirelessMac* add_macs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::WirelessMac >&
      macs() const;
  // optional string id = 1 [json_name = "id"];
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition transmitter = 2 [json_name = "transmitter"];
  bool has_transmitter() const;
  void clear_transmitter() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition& transmitter() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* release_transmitter();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* mutable_transmitter();
  void set_allocated_transmitter(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* transmitter);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition& _internal_transmitter() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* _internal_mutable_transmitter();
  public:
  void unsafe_arena_set_allocated_transmitter(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* transmitter);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* unsafe_arena_release_transmitter();
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition receiver = 3 [json_name = "receiver"];
  bool has_receiver() const;
  void clear_receiver() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition& receiver() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* release_receiver();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* mutable_receiver();
  void set_allocated_receiver(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* receiver);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition& _internal_receiver() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* _internal_mutable_receiver();
  public:
  void unsafe_arena_set_allocated_receiver(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* receiver);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* unsafe_arena_release_receiver();
  // optional .aalyria.spacetime.api.common.AntennaDefinition antenna_definition = 4 [json_name = "antennaDefinition"];
  bool has_antenna_definition() const;
  void clear_antenna_definition() ;
  const ::aalyria::spacetime::api::common::AntennaDefinition& antenna_definition() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::AntennaDefinition* release_antenna_definition();
  ::aalyria::spacetime::api::common::AntennaDefinition* mutable_antenna_definition();
  void set_allocated_antenna_definition(::aalyria::spacetime::api::common::AntennaDefinition* antenna_definition);
  private:
  const ::aalyria::spacetime::api::common::AntennaDefinition& _internal_antenna_definition() const;
  ::aalyria::spacetime::api::common::AntennaDefinition* _internal_mutable_antenna_definition();
  public:
  void unsafe_arena_set_allocated_antenna_definition(
      ::aalyria::spacetime::api::common::AntennaDefinition* antenna_definition);
  ::aalyria::spacetime::api::common::AntennaDefinition* unsafe_arena_release_antenna_definition();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::WirelessMac > macs_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* transmitter_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* receiver_;
    ::aalyria::spacetime::api::common::AntennaDefinition* antenna_definition_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_SequentialChannelDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition) */ {
 public:
  inline ScenarioSettings_SequentialChannelDefinition() : ScenarioSettings_SequentialChannelDefinition(nullptr) {}
  ~ScenarioSettings_SequentialChannelDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_SequentialChannelDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_SequentialChannelDefinition(const ScenarioSettings_SequentialChannelDefinition& from);
  ScenarioSettings_SequentialChannelDefinition(ScenarioSettings_SequentialChannelDefinition&& from) noexcept
    : ScenarioSettings_SequentialChannelDefinition() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_SequentialChannelDefinition& operator=(const ScenarioSettings_SequentialChannelDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_SequentialChannelDefinition& operator=(ScenarioSettings_SequentialChannelDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_SequentialChannelDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_SequentialChannelDefinition* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_SequentialChannelDefinition*>(
               &_ScenarioSettings_SequentialChannelDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ScenarioSettings_SequentialChannelDefinition& a, ScenarioSettings_SequentialChannelDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_SequentialChannelDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_SequentialChannelDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_SequentialChannelDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_SequentialChannelDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_SequentialChannelDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_SequentialChannelDefinition& from) {
    ScenarioSettings_SequentialChannelDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_SequentialChannelDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition";
  }
  protected:
  explicit ScenarioSettings_SequentialChannelDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelIdFieldNumber = 1,
    kStartingFrequencyHzFieldNumber = 3,
    kBandwidthHzFieldNumber = 4,
    kTxPowerWFieldNumber = 5,
    kChannelCountFieldNumber = 2,
  };
  // optional string channel_id = 1 [json_name = "channelId"];
  bool has_channel_id() const;
  void clear_channel_id() ;
  const std::string& channel_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_channel_id();
  PROTOBUF_NODISCARD std::string* release_channel_id();
  void set_allocated_channel_id(std::string* ptr);

  private:
  const std::string& _internal_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(
      const std::string& value);
  std::string* _internal_mutable_channel_id();

  public:
  // optional uint64 starting_frequency_hz = 3 [json_name = "startingFrequencyHz"];
  bool has_starting_frequency_hz() const;
  void clear_starting_frequency_hz() ;
  ::uint64_t starting_frequency_hz() const;
  void set_starting_frequency_hz(::uint64_t value);

  private:
  ::uint64_t _internal_starting_frequency_hz() const;
  void _internal_set_starting_frequency_hz(::uint64_t value);

  public:
  // optional uint64 bandwidth_hz = 4 [json_name = "bandwidthHz"];
  bool has_bandwidth_hz() const;
  void clear_bandwidth_hz() ;
  ::uint64_t bandwidth_hz() const;
  void set_bandwidth_hz(::uint64_t value);

  private:
  ::uint64_t _internal_bandwidth_hz() const;
  void _internal_set_bandwidth_hz(::uint64_t value);

  public:
  // optional double tx_power_w = 5 [json_name = "txPowerW"];
  bool has_tx_power_w() const;
  void clear_tx_power_w() ;
  double tx_power_w() const;
  void set_tx_power_w(double value);

  private:
  double _internal_tx_power_w() const;
  void _internal_set_tx_power_w(double value);

  public:
  // optional uint32 channel_count = 2 [json_name = "channelCount"];
  bool has_channel_count() const;
  void clear_channel_count() ;
  ::uint32_t channel_count() const;
  void set_channel_count(::uint32_t value);

  private:
  ::uint32_t _internal_channel_count() const;
  void _internal_set_channel_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channel_id_;
    ::uint64_t starting_frequency_hz_;
    ::uint64_t bandwidth_hz_;
    double tx_power_w_;
    ::uint32_t channel_count_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Gateway final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway) */ {
 public:
  inline ScenarioSettings_Gateway() : ScenarioSettings_Gateway(nullptr) {}
  ~ScenarioSettings_Gateway() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Gateway(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Gateway(const ScenarioSettings_Gateway& from);
  ScenarioSettings_Gateway(ScenarioSettings_Gateway&& from) noexcept
    : ScenarioSettings_Gateway() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Gateway& operator=(const ScenarioSettings_Gateway& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Gateway& operator=(ScenarioSettings_Gateway&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Gateway& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Gateway* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Gateway*>(
               &_ScenarioSettings_Gateway_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ScenarioSettings_Gateway& a, ScenarioSettings_Gateway& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Gateway* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Gateway* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Gateway* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Gateway>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Gateway& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Gateway& from) {
    ScenarioSettings_Gateway::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Gateway* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway";
  }
  protected:
  explicit ScenarioSettings_Gateway(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransceiverModelsFieldNumber = 8,
    kWirelessInterfacesFieldNumber = 9,
    kNameFieldNumber = 1,
    kWiredInterfaceIdFieldNumber = 10,
    kLocationFieldNumber = 2,
    kAgentFieldNumber = 3,
    kMaxWiredDataRateBpsFieldNumber = 6,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 8 [json_name = "transceiverModels"];
  int transceiver_models_size() const;
  private:
  int _internal_transceiver_models_size() const;

  public:
  void clear_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 9 [json_name = "wirelessInterfaces"];
  int wireless_interfaces_size() const;
  private:
  int _internal_wireless_interfaces_size() const;

  public:
  void clear_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      wireless_interfaces() const;
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string wired_interface_id = 10 [default = "WAN", json_name = "wiredInterfaceId"];
  bool has_wired_interface_id() const;
  void clear_wired_interface_id() ;
  const std::string& wired_interface_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wired_interface_id(Arg_&& arg, Args_... args);
  std::string* mutable_wired_interface_id();
  PROTOBUF_NODISCARD std::string* release_wired_interface_id();
  void set_allocated_wired_interface_id(std::string* ptr);

  private:
  const std::string& _internal_wired_interface_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wired_interface_id(
      const std::string& value);
  std::string* _internal_mutable_wired_interface_id();

  public:
  // optional .aalyria.spacetime.api.common.GeodeticWgs84 location = 2 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::aalyria::spacetime::api::common::GeodeticWgs84& location() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::GeodeticWgs84* release_location();
  ::aalyria::spacetime::api::common::GeodeticWgs84* mutable_location();
  void set_allocated_location(::aalyria::spacetime::api::common::GeodeticWgs84* location);
  private:
  const ::aalyria::spacetime::api::common::GeodeticWgs84& _internal_location() const;
  ::aalyria::spacetime::api::common::GeodeticWgs84* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::aalyria::spacetime::api::common::GeodeticWgs84* location);
  ::aalyria::spacetime::api::common::GeodeticWgs84* unsafe_arena_release_location();
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.SdnAgent agent = 3 [json_name = "agent"];
  bool has_agent() const;
  void clear_agent() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent& agent() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* release_agent();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* mutable_agent();
  void set_allocated_agent(::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* agent);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent& _internal_agent() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* _internal_mutable_agent();
  public:
  void unsafe_arena_set_allocated_agent(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* agent);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* unsafe_arena_release_agent();
  // optional double max_wired_data_rate_bps = 6 [json_name = "maxWiredDataRateBps"];
  bool has_max_wired_data_rate_bps() const;
  void clear_max_wired_data_rate_bps() ;
  double max_wired_data_rate_bps() const;
  void set_max_wired_data_rate_bps(double value);

  private:
  double _internal_max_wired_data_rate_bps() const;
  void _internal_set_max_wired_data_rate_bps(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    static const ::PROTOBUF_NAMESPACE_ID::internal::LazyString _i_give_permission_to_break_this_code_default_wired_interface_id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wired_interface_id_;
    ::aalyria::spacetime::api::common::GeodeticWgs84* location_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* agent_;
    double max_wired_data_rate_bps_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_ScenarioChannelDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition) */ {
 public:
  inline ScenarioSettings_ScenarioChannelDefinition() : ScenarioSettings_ScenarioChannelDefinition(nullptr) {}
  ~ScenarioSettings_ScenarioChannelDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_ScenarioChannelDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_ScenarioChannelDefinition(const ScenarioSettings_ScenarioChannelDefinition& from);
  ScenarioSettings_ScenarioChannelDefinition(ScenarioSettings_ScenarioChannelDefinition&& from) noexcept
    : ScenarioSettings_ScenarioChannelDefinition() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_ScenarioChannelDefinition& operator=(const ScenarioSettings_ScenarioChannelDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_ScenarioChannelDefinition& operator=(ScenarioSettings_ScenarioChannelDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_ScenarioChannelDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_ScenarioChannelDefinition* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_ScenarioChannelDefinition*>(
               &_ScenarioSettings_ScenarioChannelDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ScenarioSettings_ScenarioChannelDefinition& a, ScenarioSettings_ScenarioChannelDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_ScenarioChannelDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_ScenarioChannelDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_ScenarioChannelDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_ScenarioChannelDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_ScenarioChannelDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_ScenarioChannelDefinition& from) {
    ScenarioSettings_ScenarioChannelDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_ScenarioChannelDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition";
  }
  protected:
  explicit ScenarioSettings_ScenarioChannelDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelIdFieldNumber = 1,
    kChannelFieldNumber = 2,
  };
  // optional string channel_id = 1 [json_name = "channelId"];
  bool has_channel_id() const;
  void clear_channel_id() ;
  const std::string& channel_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_channel_id();
  PROTOBUF_NODISCARD std::string* release_channel_id();
  void set_allocated_channel_id(std::string* ptr);

  private:
  const std::string& _internal_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(
      const std::string& value);
  std::string* _internal_mutable_channel_id();

  public:
  // optional .aalyria.spacetime.api.common.BandProfile channel = 2 [json_name = "channel"];
  bool has_channel() const;
  void clear_channel() ;
  const ::aalyria::spacetime::api::common::BandProfile& channel() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::BandProfile* release_channel();
  ::aalyria::spacetime::api::common::BandProfile* mutable_channel();
  void set_allocated_channel(::aalyria::spacetime::api::common::BandProfile* channel);
  private:
  const ::aalyria::spacetime::api::common::BandProfile& _internal_channel() const;
  ::aalyria::spacetime::api::common::BandProfile* _internal_mutable_channel();
  public:
  void unsafe_arena_set_allocated_channel(
      ::aalyria::spacetime::api::common::BandProfile* channel);
  ::aalyria::spacetime::api::common::BandProfile* unsafe_arena_release_channel();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channel_id_;
    ::aalyria::spacetime::api::common::BandProfile* channel_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_AntennaPatternSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings) */ {
 public:
  inline ScenarioSettings_AntennaPatternSettings() : ScenarioSettings_AntennaPatternSettings(nullptr) {}
  ~ScenarioSettings_AntennaPatternSettings() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_AntennaPatternSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_AntennaPatternSettings(const ScenarioSettings_AntennaPatternSettings& from);
  ScenarioSettings_AntennaPatternSettings(ScenarioSettings_AntennaPatternSettings&& from) noexcept
    : ScenarioSettings_AntennaPatternSettings() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_AntennaPatternSettings& operator=(const ScenarioSettings_AntennaPatternSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_AntennaPatternSettings& operator=(ScenarioSettings_AntennaPatternSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_AntennaPatternSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_AntennaPatternSettings* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_AntennaPatternSettings*>(
               &_ScenarioSettings_AntennaPatternSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ScenarioSettings_AntennaPatternSettings& a, ScenarioSettings_AntennaPatternSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_AntennaPatternSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_AntennaPatternSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_AntennaPatternSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_AntennaPatternSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_AntennaPatternSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_AntennaPatternSettings& from) {
    ScenarioSettings_AntennaPatternSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_AntennaPatternSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings";
  }
  protected:
  explicit ScenarioSettings_AntennaPatternSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAntennaPatternIdFieldNumber = 1,
    kAntennaPatternFieldNumber = 2,
  };
  // optional string antenna_pattern_id = 1 [json_name = "antennaPatternId"];
  bool has_antenna_pattern_id() const;
  void clear_antenna_pattern_id() ;
  const std::string& antenna_pattern_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_antenna_pattern_id(Arg_&& arg, Args_... args);
  std::string* mutable_antenna_pattern_id();
  PROTOBUF_NODISCARD std::string* release_antenna_pattern_id();
  void set_allocated_antenna_pattern_id(std::string* ptr);

  private:
  const std::string& _internal_antenna_pattern_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_antenna_pattern_id(
      const std::string& value);
  std::string* _internal_mutable_antenna_pattern_id();

  public:
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern antenna_pattern = 2 [json_name = "antennaPattern"];
  bool has_antenna_pattern() const;
  void clear_antenna_pattern() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern& antenna_pattern() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* release_antenna_pattern();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* mutable_antenna_pattern();
  void set_allocated_antenna_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* antenna_pattern);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern& _internal_antenna_pattern() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* _internal_mutable_antenna_pattern();
  public:
  void unsafe_arena_set_allocated_antenna_pattern(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* antenna_pattern);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* unsafe_arena_release_antenna_pattern();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr antenna_pattern_id_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* antenna_pattern_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_UserTerminal_UserTerminalGridDefinition final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition) */ {
 public:
  inline ScenarioSettings_UserTerminal_UserTerminalGridDefinition() : ScenarioSettings_UserTerminal_UserTerminalGridDefinition(nullptr) {}
  ~ScenarioSettings_UserTerminal_UserTerminalGridDefinition() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_UserTerminal_UserTerminalGridDefinition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_UserTerminal_UserTerminalGridDefinition(const ScenarioSettings_UserTerminal_UserTerminalGridDefinition& from);
  ScenarioSettings_UserTerminal_UserTerminalGridDefinition(ScenarioSettings_UserTerminal_UserTerminalGridDefinition&& from) noexcept
    : ScenarioSettings_UserTerminal_UserTerminalGridDefinition() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_UserTerminal_UserTerminalGridDefinition& operator=(const ScenarioSettings_UserTerminal_UserTerminalGridDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_UserTerminal_UserTerminalGridDefinition& operator=(ScenarioSettings_UserTerminal_UserTerminalGridDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_UserTerminal_UserTerminalGridDefinition& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_UserTerminal_UserTerminalGridDefinition* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_UserTerminal_UserTerminalGridDefinition*>(
               &_ScenarioSettings_UserTerminal_UserTerminalGridDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ScenarioSettings_UserTerminal_UserTerminalGridDefinition& a, ScenarioSettings_UserTerminal_UserTerminalGridDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_UserTerminal_UserTerminalGridDefinition* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_UserTerminal_UserTerminalGridDefinition* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_UserTerminal_UserTerminalGridDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_UserTerminal_UserTerminalGridDefinition>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_UserTerminal_UserTerminalGridDefinition& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_UserTerminal_UserTerminalGridDefinition& from) {
    ScenarioSettings_UserTerminal_UserTerminalGridDefinition::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_UserTerminal_UserTerminalGridDefinition* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition";
  }
  protected:
  explicit ScenarioSettings_UserTerminal_UserTerminalGridDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 6,
    kSouthWestCornerFieldNumber = 1,
    kRowCountFieldNumber = 2,
    kColumnCountFieldNumber = 3,
    kGridLatitudeSpacingDegFieldNumber = 4,
    kGridLongitudeSpacingDegFieldNumber = 5,
  };
  // optional string name = 6 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .aalyria.spacetime.api.common.GeodeticWgs84 south_west_corner = 1 [json_name = "southWestCorner"];
  bool has_south_west_corner() const;
  void clear_south_west_corner() ;
  const ::aalyria::spacetime::api::common::GeodeticWgs84& south_west_corner() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::GeodeticWgs84* release_south_west_corner();
  ::aalyria::spacetime::api::common::GeodeticWgs84* mutable_south_west_corner();
  void set_allocated_south_west_corner(::aalyria::spacetime::api::common::GeodeticWgs84* south_west_corner);
  private:
  const ::aalyria::spacetime::api::common::GeodeticWgs84& _internal_south_west_corner() const;
  ::aalyria::spacetime::api::common::GeodeticWgs84* _internal_mutable_south_west_corner();
  public:
  void unsafe_arena_set_allocated_south_west_corner(
      ::aalyria::spacetime::api::common::GeodeticWgs84* south_west_corner);
  ::aalyria::spacetime::api::common::GeodeticWgs84* unsafe_arena_release_south_west_corner();
  // optional uint32 row_count = 2 [json_name = "rowCount"];
  bool has_row_count() const;
  void clear_row_count() ;
  ::uint32_t row_count() const;
  void set_row_count(::uint32_t value);

  private:
  ::uint32_t _internal_row_count() const;
  void _internal_set_row_count(::uint32_t value);

  public:
  // optional uint32 column_count = 3 [json_name = "columnCount"];
  bool has_column_count() const;
  void clear_column_count() ;
  ::uint32_t column_count() const;
  void set_column_count(::uint32_t value);

  private:
  ::uint32_t _internal_column_count() const;
  void _internal_set_column_count(::uint32_t value);

  public:
  // optional double grid_latitude_spacing_deg = 4 [json_name = "gridLatitudeSpacingDeg"];
  bool has_grid_latitude_spacing_deg() const;
  void clear_grid_latitude_spacing_deg() ;
  double grid_latitude_spacing_deg() const;
  void set_grid_latitude_spacing_deg(double value);

  private:
  double _internal_grid_latitude_spacing_deg() const;
  void _internal_set_grid_latitude_spacing_deg(double value);

  public:
  // optional double grid_longitude_spacing_deg = 5 [json_name = "gridLongitudeSpacingDeg"];
  bool has_grid_longitude_spacing_deg() const;
  void clear_grid_longitude_spacing_deg() ;
  double grid_longitude_spacing_deg() const;
  void set_grid_longitude_spacing_deg(double value);

  private:
  double _internal_grid_longitude_spacing_deg() const;
  void _internal_set_grid_longitude_spacing_deg(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::aalyria::spacetime::api::common::GeodeticWgs84* south_west_corner_;
    ::uint32_t row_count_;
    ::uint32_t column_count_;
    double grid_latitude_spacing_deg_;
    double grid_longitude_spacing_deg_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_UserTerminal final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal) */ {
 public:
  inline ScenarioSettings_UserTerminal() : ScenarioSettings_UserTerminal(nullptr) {}
  ~ScenarioSettings_UserTerminal() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_UserTerminal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_UserTerminal(const ScenarioSettings_UserTerminal& from);
  ScenarioSettings_UserTerminal(ScenarioSettings_UserTerminal&& from) noexcept
    : ScenarioSettings_UserTerminal() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_UserTerminal& operator=(const ScenarioSettings_UserTerminal& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_UserTerminal& operator=(ScenarioSettings_UserTerminal&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_UserTerminal& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_UserTerminal* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_UserTerminal*>(
               &_ScenarioSettings_UserTerminal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ScenarioSettings_UserTerminal& a, ScenarioSettings_UserTerminal& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_UserTerminal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_UserTerminal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_UserTerminal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_UserTerminal>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_UserTerminal& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_UserTerminal& from) {
    ScenarioSettings_UserTerminal::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_UserTerminal* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal";
  }
  protected:
  explicit ScenarioSettings_UserTerminal(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_UserTerminal_UserTerminalGridDefinition UserTerminalGridDefinition;

  // accessors -------------------------------------------------------

  enum : int {
    kUserTerminalGridDefinitionFieldNumber = 2,
    kTransceiverModelsFieldNumber = 8,
    kWirelessInterfacesFieldNumber = 9,
    kNameFieldNumber = 1,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition user_terminal_grid_definition = 2 [json_name = "userTerminalGridDefinition"];
  int user_terminal_grid_definition_size() const;
  private:
  int _internal_user_terminal_grid_definition_size() const;

  public:
  void clear_user_terminal_grid_definition() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* mutable_user_terminal_grid_definition(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition >*
      mutable_user_terminal_grid_definition();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition& _internal_user_terminal_grid_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* _internal_add_user_terminal_grid_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition>& _internal_user_terminal_grid_definition() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition>* _internal_mutable_user_terminal_grid_definition();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition& user_terminal_grid_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* add_user_terminal_grid_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition >&
      user_terminal_grid_definition() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 8 [json_name = "transceiverModels"];
  int transceiver_models_size() const;
  private:
  int _internal_transceiver_models_size() const;

  public:
  void clear_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 9 [json_name = "wirelessInterfaces"];
  int wireless_interfaces_size() const;
  private:
  int _internal_wireless_interfaces_size() const;

  public:
  void clear_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      wireless_interfaces() const;
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition > user_terminal_grid_definition_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_UserTerminalCommonSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings) */ {
 public:
  inline ScenarioSettings_UserTerminalCommonSettings() : ScenarioSettings_UserTerminalCommonSettings(nullptr) {}
  ~ScenarioSettings_UserTerminalCommonSettings() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_UserTerminalCommonSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_UserTerminalCommonSettings(const ScenarioSettings_UserTerminalCommonSettings& from);
  ScenarioSettings_UserTerminalCommonSettings(ScenarioSettings_UserTerminalCommonSettings&& from) noexcept
    : ScenarioSettings_UserTerminalCommonSettings() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_UserTerminalCommonSettings& operator=(const ScenarioSettings_UserTerminalCommonSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_UserTerminalCommonSettings& operator=(ScenarioSettings_UserTerminalCommonSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_UserTerminalCommonSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_UserTerminalCommonSettings* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_UserTerminalCommonSettings*>(
               &_ScenarioSettings_UserTerminalCommonSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ScenarioSettings_UserTerminalCommonSettings& a, ScenarioSettings_UserTerminalCommonSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_UserTerminalCommonSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_UserTerminalCommonSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_UserTerminalCommonSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_UserTerminalCommonSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_UserTerminalCommonSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_UserTerminalCommonSettings& from) {
    ScenarioSettings_UserTerminalCommonSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_UserTerminalCommonSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings";
  }
  protected:
  explicit ScenarioSettings_UserTerminalCommonSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserTerminalForwardDataRateBpsFieldNumber = 1,
    kUserTerminalReturnDataRateBpsFieldNumber = 2,
  };
  // optional double user_terminal_forward_data_rate_bps = 1 [json_name = "userTerminalForwardDataRateBps"];
  bool has_user_terminal_forward_data_rate_bps() const;
  void clear_user_terminal_forward_data_rate_bps() ;
  double user_terminal_forward_data_rate_bps() const;
  void set_user_terminal_forward_data_rate_bps(double value);

  private:
  double _internal_user_terminal_forward_data_rate_bps() const;
  void _internal_set_user_terminal_forward_data_rate_bps(double value);

  public:
  // optional double user_terminal_return_data_rate_bps = 2 [json_name = "userTerminalReturnDataRateBps"];
  bool has_user_terminal_return_data_rate_bps() const;
  void clear_user_terminal_return_data_rate_bps() ;
  double user_terminal_return_data_rate_bps() const;
  void set_user_terminal_return_data_rate_bps(double value);

  private:
  double _internal_user_terminal_return_data_rate_bps() const;
  void _internal_set_user_terminal_return_data_rate_bps(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    double user_terminal_forward_data_rate_bps_;
    double user_terminal_return_data_rate_bps_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_Pop final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop) */ {
 public:
  inline ScenarioSettings_Pop() : ScenarioSettings_Pop(nullptr) {}
  ~ScenarioSettings_Pop() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_Pop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_Pop(const ScenarioSettings_Pop& from);
  ScenarioSettings_Pop(ScenarioSettings_Pop&& from) noexcept
    : ScenarioSettings_Pop() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_Pop& operator=(const ScenarioSettings_Pop& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_Pop& operator=(ScenarioSettings_Pop&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_Pop& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_Pop* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_Pop*>(
               &_ScenarioSettings_Pop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ScenarioSettings_Pop& a, ScenarioSettings_Pop& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_Pop* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_Pop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_Pop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_Pop>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_Pop& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_Pop& from) {
    ScenarioSettings_Pop::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_Pop* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop";
  }
  protected:
  explicit ScenarioSettings_Pop(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kLocationFieldNumber = 2,
    kMaxDataRateBpsFieldNumber = 3,
  };
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional .aalyria.spacetime.api.common.GeodeticWgs84 location = 2 [json_name = "location"];
  bool has_location() const;
  void clear_location() ;
  const ::aalyria::spacetime::api::common::GeodeticWgs84& location() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::common::GeodeticWgs84* release_location();
  ::aalyria::spacetime::api::common::GeodeticWgs84* mutable_location();
  void set_allocated_location(::aalyria::spacetime::api::common::GeodeticWgs84* location);
  private:
  const ::aalyria::spacetime::api::common::GeodeticWgs84& _internal_location() const;
  ::aalyria::spacetime::api::common::GeodeticWgs84* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::aalyria::spacetime::api::common::GeodeticWgs84* location);
  ::aalyria::spacetime::api::common::GeodeticWgs84* unsafe_arena_release_location();
  // optional double max_data_rate_bps = 3 [json_name = "maxDataRateBps"];
  bool has_max_data_rate_bps() const;
  void clear_max_data_rate_bps() ;
  double max_data_rate_bps() const;
  void set_max_data_rate_bps(double value);

  private:
  double _internal_max_data_rate_bps() const;
  void _internal_set_max_data_rate_bps(double value);

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    ::aalyria::spacetime::api::common::GeodeticWgs84* location_;
    double max_data_rate_bps_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_AirFleet_Aircraft final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft) */ {
 public:
  inline ScenarioSettings_AirFleet_Aircraft() : ScenarioSettings_AirFleet_Aircraft(nullptr) {}
  ~ScenarioSettings_AirFleet_Aircraft() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_AirFleet_Aircraft(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_AirFleet_Aircraft(const ScenarioSettings_AirFleet_Aircraft& from);
  ScenarioSettings_AirFleet_Aircraft(ScenarioSettings_AirFleet_Aircraft&& from) noexcept
    : ScenarioSettings_AirFleet_Aircraft() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_AirFleet_Aircraft& operator=(const ScenarioSettings_AirFleet_Aircraft& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_AirFleet_Aircraft& operator=(ScenarioSettings_AirFleet_Aircraft&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_AirFleet_Aircraft& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_AirFleet_Aircraft* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_AirFleet_Aircraft*>(
               &_ScenarioSettings_AirFleet_Aircraft_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ScenarioSettings_AirFleet_Aircraft& a, ScenarioSettings_AirFleet_Aircraft& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_AirFleet_Aircraft* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_AirFleet_Aircraft* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_AirFleet_Aircraft* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_AirFleet_Aircraft>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_AirFleet_Aircraft& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_AirFleet_Aircraft& from) {
    ScenarioSettings_AirFleet_Aircraft::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_AirFleet_Aircraft* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft";
  }
  protected:
  explicit ScenarioSettings_AirFleet_Aircraft(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalTransceiverModelsFieldNumber = 2,
    kAdditionalWirelessInterfacesFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel additional_transceiver_models = 2 [json_name = "additionalTransceiverModels"];
  int additional_transceiver_models_size() const;
  private:
  int _internal_additional_transceiver_models_size() const;

  public:
  void clear_additional_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_additional_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_additional_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_additional_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_additional_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_additional_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_additional_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& additional_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_additional_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      additional_transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface additional_wireless_interfaces = 3 [json_name = "additionalWirelessInterfaces"];
  int additional_wireless_interfaces_size() const;
  private:
  int _internal_additional_wireless_interfaces_size() const;

  public:
  void clear_additional_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_additional_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_additional_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_additional_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_additional_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_additional_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_additional_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& additional_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_additional_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      additional_wireless_interfaces() const;
  // optional string id = 1 [json_name = "id"];
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > additional_transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > additional_wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_AirFleet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet) */ {
 public:
  inline ScenarioSettings_AirFleet() : ScenarioSettings_AirFleet(nullptr) {}
  ~ScenarioSettings_AirFleet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_AirFleet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_AirFleet(const ScenarioSettings_AirFleet& from);
  ScenarioSettings_AirFleet(ScenarioSettings_AirFleet&& from) noexcept
    : ScenarioSettings_AirFleet() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_AirFleet& operator=(const ScenarioSettings_AirFleet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_AirFleet& operator=(ScenarioSettings_AirFleet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_AirFleet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_AirFleet* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_AirFleet*>(
               &_ScenarioSettings_AirFleet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ScenarioSettings_AirFleet& a, ScenarioSettings_AirFleet& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_AirFleet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_AirFleet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_AirFleet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_AirFleet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_AirFleet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_AirFleet& from) {
    ScenarioSettings_AirFleet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_AirFleet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet";
  }
  protected:
  explicit ScenarioSettings_AirFleet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_AirFleet_Aircraft Aircraft;

  // accessors -------------------------------------------------------

  enum : int {
    kAircraftFieldNumber = 1,
    kTransceiverModelsFieldNumber = 2,
    kWirelessInterfacesFieldNumber = 3,
    kPopIdFieldNumber = 4,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft aircraft = 1 [json_name = "aircraft"];
  int aircraft_size() const;
  private:
  int _internal_aircraft_size() const;

  public:
  void clear_aircraft() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* mutable_aircraft(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft >*
      mutable_aircraft();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft& _internal_aircraft(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* _internal_add_aircraft();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft>& _internal_aircraft() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft>* _internal_mutable_aircraft();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft& aircraft(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* add_aircraft();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft >&
      aircraft() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 2 [json_name = "transceiverModels"];
  int transceiver_models_size() const;
  private:
  int _internal_transceiver_models_size() const;

  public:
  void clear_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 3 [json_name = "wirelessInterfaces"];
  int wireless_interfaces_size() const;
  private:
  int _internal_wireless_interfaces_size() const;

  public:
  void clear_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      wireless_interfaces() const;
  // optional string pop_id = 4 [json_name = "popId"];
  bool has_pop_id() const;
  void clear_pop_id() ;
  const std::string& pop_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pop_id(Arg_&& arg, Args_... args);
  std::string* mutable_pop_id();
  PROTOBUF_NODISCARD std::string* release_pop_id();
  void set_allocated_pop_id(std::string* ptr);

  private:
  const std::string& _internal_pop_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pop_id(
      const std::string& value);
  std::string* _internal_mutable_pop_id();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft > aircraft_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pop_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_ShipFleet_Ship final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship) */ {
 public:
  inline ScenarioSettings_ShipFleet_Ship() : ScenarioSettings_ShipFleet_Ship(nullptr) {}
  ~ScenarioSettings_ShipFleet_Ship() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_ShipFleet_Ship(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_ShipFleet_Ship(const ScenarioSettings_ShipFleet_Ship& from);
  ScenarioSettings_ShipFleet_Ship(ScenarioSettings_ShipFleet_Ship&& from) noexcept
    : ScenarioSettings_ShipFleet_Ship() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_ShipFleet_Ship& operator=(const ScenarioSettings_ShipFleet_Ship& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_ShipFleet_Ship& operator=(ScenarioSettings_ShipFleet_Ship&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_ShipFleet_Ship& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_ShipFleet_Ship* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_ShipFleet_Ship*>(
               &_ScenarioSettings_ShipFleet_Ship_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ScenarioSettings_ShipFleet_Ship& a, ScenarioSettings_ShipFleet_Ship& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_ShipFleet_Ship* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_ShipFleet_Ship* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_ShipFleet_Ship* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_ShipFleet_Ship>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_ShipFleet_Ship& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_ShipFleet_Ship& from) {
    ScenarioSettings_ShipFleet_Ship::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_ShipFleet_Ship* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship";
  }
  protected:
  explicit ScenarioSettings_ShipFleet_Ship(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdditionalTransceiverModelsFieldNumber = 4,
    kAdditionalWirelessInterfacesFieldNumber = 5,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel additional_transceiver_models = 4 [json_name = "additionalTransceiverModels"];
  int additional_transceiver_models_size() const;
  private:
  int _internal_additional_transceiver_models_size() const;

  public:
  void clear_additional_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_additional_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_additional_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_additional_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_additional_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_additional_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_additional_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& additional_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_additional_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      additional_transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface additional_wireless_interfaces = 5 [json_name = "additionalWirelessInterfaces"];
  int additional_wireless_interfaces_size() const;
  private:
  int _internal_additional_wireless_interfaces_size() const;

  public:
  void clear_additional_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_additional_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_additional_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_additional_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_additional_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_additional_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_additional_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& additional_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_additional_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      additional_wireless_interfaces() const;
  // optional string id = 1 [json_name = "id"];
  bool has_id() const;
  void clear_id() ;
  const std::string& id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // optional string name = 2 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > additional_transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > additional_wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_ShipFleet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet) */ {
 public:
  inline ScenarioSettings_ShipFleet() : ScenarioSettings_ShipFleet(nullptr) {}
  ~ScenarioSettings_ShipFleet() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_ShipFleet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings_ShipFleet(const ScenarioSettings_ShipFleet& from);
  ScenarioSettings_ShipFleet(ScenarioSettings_ShipFleet&& from) noexcept
    : ScenarioSettings_ShipFleet() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings_ShipFleet& operator=(const ScenarioSettings_ShipFleet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings_ShipFleet& operator=(ScenarioSettings_ShipFleet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings_ShipFleet& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings_ShipFleet* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings_ShipFleet*>(
               &_ScenarioSettings_ShipFleet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ScenarioSettings_ShipFleet& a, ScenarioSettings_ShipFleet& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings_ShipFleet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings_ShipFleet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings_ShipFleet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings_ShipFleet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings_ShipFleet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings_ShipFleet& from) {
    ScenarioSettings_ShipFleet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings_ShipFleet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet";
  }
  protected:
  explicit ScenarioSettings_ShipFleet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_ShipFleet_Ship Ship;

  // accessors -------------------------------------------------------

  enum : int {
    kShipFieldNumber = 1,
    kTransceiverModelsFieldNumber = 2,
    kWirelessInterfacesFieldNumber = 3,
    kPopIdFieldNumber = 4,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship ship = 1 [json_name = "ship"];
  int ship_size() const;
  private:
  int _internal_ship_size() const;

  public:
  void clear_ship() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* mutable_ship(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship >*
      mutable_ship();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship& _internal_ship(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* _internal_add_ship();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship>& _internal_ship() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship>* _internal_mutable_ship();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship& ship(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* add_ship();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship >&
      ship() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 2 [json_name = "transceiverModels"];
  int transceiver_models_size() const;
  private:
  int _internal_transceiver_models_size() const;

  public:
  void clear_transceiver_models() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* mutable_transceiver_models(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
      mutable_transceiver_models();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& _internal_transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _internal_add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>& _internal_transceiver_models() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>* _internal_mutable_transceiver_models();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& transceiver_models(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* add_transceiver_models();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
      transceiver_models() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 3 [json_name = "wirelessInterfaces"];
  int wireless_interfaces_size() const;
  private:
  int _internal_wireless_interfaces_size() const;

  public:
  void clear_wireless_interfaces() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* mutable_wireless_interfaces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
      mutable_wireless_interfaces();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& _internal_wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _internal_add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>& _internal_wireless_interfaces() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>* _internal_mutable_wireless_interfaces();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& wireless_interfaces(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* add_wireless_interfaces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
      wireless_interfaces() const;
  // optional string pop_id = 4 [json_name = "popId"];
  bool has_pop_id() const;
  void clear_pop_id() ;
  const std::string& pop_id() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pop_id(Arg_&& arg, Args_... args);
  std::string* mutable_pop_id();
  PROTOBUF_NODISCARD std::string* release_pop_id();
  void set_allocated_pop_id(std::string* ptr);

  private:
  const std::string& _internal_pop_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pop_id(
      const std::string& value);
  std::string* _internal_mutable_pop_id();

  public:
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship > ship_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel > transceiver_models_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface > wireless_interfaces_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pop_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};// -------------------------------------------------------------------

class ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse final : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse& other);
  static const ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse*>(&_ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.GatewayToPermittedPopsEntry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.GatewayToPermittedPopsEntry.value");
#else
    (void) s;
#endif
    return true;
 }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};
// -------------------------------------------------------------------

class ScenarioSettings final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings) */ {
 public:
  inline ScenarioSettings() : ScenarioSettings(nullptr) {}
  ~ScenarioSettings() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ScenarioSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ScenarioSettings(const ScenarioSettings& from);
  ScenarioSettings(ScenarioSettings&& from) noexcept
    : ScenarioSettings() {
    *this = ::std::move(from);
  }

  inline ScenarioSettings& operator=(const ScenarioSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScenarioSettings& operator=(ScenarioSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScenarioSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScenarioSettings* internal_default_instance() {
    return reinterpret_cast<const ScenarioSettings*>(
               &_ScenarioSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ScenarioSettings& a, ScenarioSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(ScenarioSettings* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScenarioSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScenarioSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ScenarioSettings>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ScenarioSettings& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ScenarioSettings& from) {
    ScenarioSettings::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSettings* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings";
  }
  protected:
  explicit ScenarioSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ScenarioSettings_Constellation Constellation;
  typedef ScenarioSettings_WirelessInterface WirelessInterface;
  typedef ScenarioSettings_TransmitterDefinition TransmitterDefinition;
  typedef ScenarioSettings_ReceiverDefinition ReceiverDefinition;
  typedef ScenarioSettings_TransceiverModel TransceiverModel;
  typedef ScenarioSettings_SequentialChannelDefinition SequentialChannelDefinition;
  typedef ScenarioSettings_Gateway Gateway;
  typedef ScenarioSettings_ScenarioChannelDefinition ScenarioChannelDefinition;
  typedef ScenarioSettings_AntennaPatternSettings AntennaPatternSettings;
  typedef ScenarioSettings_UserTerminal UserTerminal;
  typedef ScenarioSettings_UserTerminalCommonSettings UserTerminalCommonSettings;
  typedef ScenarioSettings_Pop Pop;
  typedef ScenarioSettings_AirFleet AirFleet;
  typedef ScenarioSettings_ShipFleet ShipFleet;

  // accessors -------------------------------------------------------

  enum : int {
    kConstellationFieldNumber = 1,
    kGatewaysFieldNumber = 2,
    kScenarioChannelDefinitionFieldNumber = 3,
    kAntennaPatternSettingsFieldNumber = 4,
    kUserTerminalFieldNumber = 5,
    kPopFieldNumber = 7,
    kAirfleetsFieldNumber = 8,
    kShipfleetsFieldNumber = 9,
    kGatewayToPermittedPopsFieldNumber = 10,
    kUserTerminalCommonSettingsFieldNumber = 6,
  };
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation constellation = 1 [json_name = "constellation"];
  int constellation_size() const;
  private:
  int _internal_constellation_size() const;

  public:
  void clear_constellation() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* mutable_constellation(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation >*
      mutable_constellation();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation& _internal_constellation(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* _internal_add_constellation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation>& _internal_constellation() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation>* _internal_mutable_constellation();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation& constellation(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* add_constellation();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation >&
      constellation() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway gateways = 2 [json_name = "gateways"];
  int gateways_size() const;
  private:
  int _internal_gateways_size() const;

  public:
  void clear_gateways() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* mutable_gateways(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway >*
      mutable_gateways();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway& _internal_gateways(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* _internal_add_gateways();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway>& _internal_gateways() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway>* _internal_mutable_gateways();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway& gateways(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* add_gateways();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway >&
      gateways() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition scenario_channel_definition = 3 [json_name = "scenarioChannelDefinition"];
  int scenario_channel_definition_size() const;
  private:
  int _internal_scenario_channel_definition_size() const;

  public:
  void clear_scenario_channel_definition() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* mutable_scenario_channel_definition(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition >*
      mutable_scenario_channel_definition();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition& _internal_scenario_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* _internal_add_scenario_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition>& _internal_scenario_channel_definition() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition>* _internal_mutable_scenario_channel_definition();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition& scenario_channel_definition(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* add_scenario_channel_definition();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition >&
      scenario_channel_definition() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings antenna_pattern_settings = 4 [json_name = "antennaPatternSettings"];
  int antenna_pattern_settings_size() const;
  private:
  int _internal_antenna_pattern_settings_size() const;

  public:
  void clear_antenna_pattern_settings() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* mutable_antenna_pattern_settings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings >*
      mutable_antenna_pattern_settings();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings& _internal_antenna_pattern_settings(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* _internal_add_antenna_pattern_settings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings>& _internal_antenna_pattern_settings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings>* _internal_mutable_antenna_pattern_settings();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings& antenna_pattern_settings(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* add_antenna_pattern_settings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings >&
      antenna_pattern_settings() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal user_terminal = 5 [json_name = "userTerminal"];
  int user_terminal_size() const;
  private:
  int _internal_user_terminal_size() const;

  public:
  void clear_user_terminal() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* mutable_user_terminal(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal >*
      mutable_user_terminal();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal& _internal_user_terminal(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* _internal_add_user_terminal();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal>& _internal_user_terminal() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal>* _internal_mutable_user_terminal();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal& user_terminal(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* add_user_terminal();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal >&
      user_terminal() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop pop = 7 [json_name = "pop"];
  int pop_size() const;
  private:
  int _internal_pop_size() const;

  public:
  void clear_pop() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* mutable_pop(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop >*
      mutable_pop();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop& _internal_pop(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* _internal_add_pop();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop>& _internal_pop() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop>* _internal_mutable_pop();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop& pop(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* add_pop();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop >&
      pop() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet airfleets = 8 [json_name = "airfleets"];
  int airfleets_size() const;
  private:
  int _internal_airfleets_size() const;

  public:
  void clear_airfleets() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* mutable_airfleets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet >*
      mutable_airfleets();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet& _internal_airfleets(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* _internal_add_airfleets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet>& _internal_airfleets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet>* _internal_mutable_airfleets();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet& airfleets(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* add_airfleets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet >&
      airfleets() const;
  // repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet shipfleets = 9 [json_name = "shipfleets"];
  int shipfleets_size() const;
  private:
  int _internal_shipfleets_size() const;

  public:
  void clear_shipfleets() ;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* mutable_shipfleets(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet >*
      mutable_shipfleets();
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet& _internal_shipfleets(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* _internal_add_shipfleets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet>& _internal_shipfleets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet>* _internal_mutable_shipfleets();
  public:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet& shipfleets(int index) const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* add_shipfleets();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet >&
      shipfleets() const;
  // map<string, string> gateway_to_permitted_pops = 10 [json_name = "gatewayToPermittedPops"];
  int gateway_to_permitted_pops_size() const;
  private:
  int _internal_gateway_to_permitted_pops_size() const;

  public:
  void clear_gateway_to_permitted_pops() ;
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_gateway_to_permitted_pops() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_gateway_to_permitted_pops();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      gateway_to_permitted_pops() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_gateway_to_permitted_pops();
  // optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings user_terminal_common_settings = 6 [json_name = "userTerminalCommonSettings"];
  bool has_user_terminal_common_settings() const;
  void clear_user_terminal_common_settings() ;
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings& user_terminal_common_settings() const;
  PROTOBUF_NODISCARD ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* release_user_terminal_common_settings();
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* mutable_user_terminal_common_settings();
  void set_allocated_user_terminal_common_settings(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* user_terminal_common_settings);
  private:
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings& _internal_user_terminal_common_settings() const;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* _internal_mutable_user_terminal_common_settings();
  public:
  void unsafe_arena_set_allocated_user_terminal_common_settings(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* user_terminal_common_settings);
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* unsafe_arena_release_user_terminal_common_settings();
  // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation > constellation_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway > gateways_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition > scenario_channel_definition_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings > antenna_pattern_settings_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal > user_terminal_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop > pop_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet > airfleets_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet > shipfleets_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        ScenarioSettings_GatewayToPermittedPopsEntry_DoNotUse,
        std::string, std::string,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> gateway_to_permitted_pops_;
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* user_terminal_common_settings_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters

// optional double semimajor_axis_km = 1 [json_name = "semimajorAxisKm"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_semimajor_axis_km() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_semimajor_axis_km() {
  _impl_.semimajor_axis_km_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::semimajor_axis_km() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.semimajor_axis_km)
  return _internal_semimajor_axis_km();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_semimajor_axis_km(double value) {
  _internal_set_semimajor_axis_km(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.semimajor_axis_km)
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_semimajor_axis_km() const {
  return _impl_.semimajor_axis_km_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_semimajor_axis_km(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.semimajor_axis_km_ = value;
}

// optional double eccentricity = 7 [default = 0, json_name = "eccentricity"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_eccentricity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_eccentricity() {
  _impl_.eccentricity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::eccentricity() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.eccentricity)
  return _internal_eccentricity();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_eccentricity(double value) {
  _internal_set_eccentricity(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.eccentricity)
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_eccentricity() const {
  return _impl_.eccentricity_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_eccentricity(double value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.eccentricity_ = value;
}

// optional double inclination_deg = 2 [json_name = "inclinationDeg"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_inclination_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_inclination_deg() {
  _impl_.inclination_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::inclination_deg() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.inclination_deg)
  return _internal_inclination_deg();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_inclination_deg(double value) {
  _internal_set_inclination_deg(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.inclination_deg)
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_inclination_deg() const {
  return _impl_.inclination_deg_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_inclination_deg(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.inclination_deg_ = value;
}

// optional uint32 number_of_planes = 3 [json_name = "numberOfPlanes"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_number_of_planes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_number_of_planes() {
  _impl_.number_of_planes_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::number_of_planes() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.number_of_planes)
  return _internal_number_of_planes();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_number_of_planes(::uint32_t value) {
  _internal_set_number_of_planes(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.number_of_planes)
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_number_of_planes() const {
  return _impl_.number_of_planes_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_number_of_planes(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.number_of_planes_ = value;
}

// optional uint32 satellites_per_plane = 4 [json_name = "satellitesPerPlane"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_satellites_per_plane() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_satellites_per_plane() {
  _impl_.satellites_per_plane_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::satellites_per_plane() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.satellites_per_plane)
  return _internal_satellites_per_plane();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_satellites_per_plane(::uint32_t value) {
  _internal_set_satellites_per_plane(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.satellites_per_plane)
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_satellites_per_plane() const {
  return _impl_.satellites_per_plane_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_satellites_per_plane(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.satellites_per_plane_ = value;
}

// optional uint32 inter_plane_spacing = 5 [json_name = "interPlaneSpacing"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_inter_plane_spacing() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_inter_plane_spacing() {
  _impl_.inter_plane_spacing_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::inter_plane_spacing() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.inter_plane_spacing)
  return _internal_inter_plane_spacing();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_inter_plane_spacing(::uint32_t value) {
  _internal_set_inter_plane_spacing(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.inter_plane_spacing)
}
inline ::uint32_t ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_inter_plane_spacing() const {
  return _impl_.inter_plane_spacing_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_inter_plane_spacing(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.inter_plane_spacing_ = value;
}

// optional double raan_offset_deg = 8 [json_name = "raanOffsetDeg"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_raan_offset_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_raan_offset_deg() {
  _impl_.raan_offset_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::raan_offset_deg() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.raan_offset_deg)
  return _internal_raan_offset_deg();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_raan_offset_deg(double value) {
  _internal_set_raan_offset_deg(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.raan_offset_deg)
}
inline double ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_raan_offset_deg() const {
  return _impl_.raan_offset_deg_;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_raan_offset_deg(double value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.raan_offset_deg_ = value;
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.IslPattern isl_pattern = 6 [default = ISL_PATTERN_NONE, json_name = "islPattern"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::has_isl_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::clear_isl_pattern() {
  _impl_.isl_pattern_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::isl_pattern() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.isl_pattern)
  return _internal_isl_pattern();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::set_isl_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern value) {
   _internal_set_isl_pattern(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.isl_pattern)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_isl_pattern() const {
  return static_cast<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>(_impl_.isl_pattern_);
}
inline void ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters::_internal_set_isl_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern value) {
  assert(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.isl_pattern_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters

// required string name = 1 [json_name = "name"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.name)
}
inline std::string* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.name)
  return _s;
}
inline const std::string& ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.name)
}

// required .aalyria.spacetime.api.common.Motion motion = 2 [json_name = "motion"];
inline bool ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::has_motion() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.motion_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::Motion& ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::_internal_motion() const {
  const ::aalyria::spacetime::api::common::Motion* p = _impl_.motion_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::Motion&>(
      ::aalyria::spacetime::api::common::_Motion_default_instance_);
}
inline const ::aalyria::spacetime::api::common::Motion& ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::motion() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion)
  return _internal_motion();
}
inline void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::unsafe_arena_set_allocated_motion(
    ::aalyria::spacetime::api::common::Motion* motion) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_);
  }
  _impl_.motion_ = motion;
  if (motion) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion)
}
inline ::aalyria::spacetime::api::common::Motion* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::release_motion() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::Motion* temp = _impl_.motion_;
  _impl_.motion_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::Motion* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::unsafe_arena_release_motion() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::Motion* temp = _impl_.motion_;
  _impl_.motion_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::Motion* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::_internal_mutable_motion() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.motion_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::Motion>(GetArenaForAllocation());
    _impl_.motion_ = p;
  }
  return _impl_.motion_;
}
inline ::aalyria::spacetime::api::common::Motion* ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::mutable_motion() {
  ::aalyria::spacetime::api::common::Motion* _msg = _internal_mutable_motion();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion)
  return _msg;
}
inline void ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters::set_allocated_motion(::aalyria::spacetime::api::common::Motion* motion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.motion_);
  }
  if (motion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(motion));
    if (message_arena != submessage_arena) {
      motion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motion, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.motion_ = motion;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion)
}

// -------------------------------------------------------------------

// ScenarioSettings_Constellation_OrbitalParameters

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters walker_delta_parameters = 2 [json_name = "walkerDeltaParameters"];
inline bool ScenarioSettings_Constellation_OrbitalParameters::has_walker_delta_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.walker_delta_parameters_ != nullptr);
  return value;
}
inline void ScenarioSettings_Constellation_OrbitalParameters::clear_walker_delta_parameters() {
  if (_impl_.walker_delta_parameters_ != nullptr) _impl_.walker_delta_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& ScenarioSettings_Constellation_OrbitalParameters::_internal_walker_delta_parameters() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* p = _impl_.walker_delta_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters& ScenarioSettings_Constellation_OrbitalParameters::walker_delta_parameters() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters)
  return _internal_walker_delta_parameters();
}
inline void ScenarioSettings_Constellation_OrbitalParameters::unsafe_arena_set_allocated_walker_delta_parameters(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* walker_delta_parameters) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.walker_delta_parameters_);
  }
  _impl_.walker_delta_parameters_ = walker_delta_parameters;
  if (walker_delta_parameters) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* ScenarioSettings_Constellation_OrbitalParameters::release_walker_delta_parameters() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* temp = _impl_.walker_delta_parameters_;
  _impl_.walker_delta_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* ScenarioSettings_Constellation_OrbitalParameters::unsafe_arena_release_walker_delta_parameters() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* temp = _impl_.walker_delta_parameters_;
  _impl_.walker_delta_parameters_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* ScenarioSettings_Constellation_OrbitalParameters::_internal_mutable_walker_delta_parameters() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.walker_delta_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters>(GetArenaForAllocation());
    _impl_.walker_delta_parameters_ = p;
  }
  return _impl_.walker_delta_parameters_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* ScenarioSettings_Constellation_OrbitalParameters::mutable_walker_delta_parameters() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* _msg = _internal_mutable_walker_delta_parameters();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters)
  return _msg;
}
inline void ScenarioSettings_Constellation_OrbitalParameters::set_allocated_walker_delta_parameters(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters* walker_delta_parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.walker_delta_parameters_;
  }
  if (walker_delta_parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(walker_delta_parameters);
    if (message_arena != submessage_arena) {
      walker_delta_parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, walker_delta_parameters, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.walker_delta_parameters_ = walker_delta_parameters;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters arbitrary_motion_parameters = 3 [json_name = "arbitraryMotionParameters"];
inline int ScenarioSettings_Constellation_OrbitalParameters::_internal_arbitrary_motion_parameters_size() const {
  return _impl_.arbitrary_motion_parameters_.size();
}
inline int ScenarioSettings_Constellation_OrbitalParameters::arbitrary_motion_parameters_size() const {
  return _internal_arbitrary_motion_parameters_size();
}
inline void ScenarioSettings_Constellation_OrbitalParameters::clear_arbitrary_motion_parameters() {
  _internal_mutable_arbitrary_motion_parameters()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* ScenarioSettings_Constellation_OrbitalParameters::mutable_arbitrary_motion_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters)
  return _internal_mutable_arbitrary_motion_parameters()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters >*
ScenarioSettings_Constellation_OrbitalParameters::mutable_arbitrary_motion_parameters() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters)
  return _internal_mutable_arbitrary_motion_parameters();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& ScenarioSettings_Constellation_OrbitalParameters::_internal_arbitrary_motion_parameters(int index) const {
  return _internal_arbitrary_motion_parameters().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters& ScenarioSettings_Constellation_OrbitalParameters::arbitrary_motion_parameters(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters)
  return _internal_arbitrary_motion_parameters(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* ScenarioSettings_Constellation_OrbitalParameters::_internal_add_arbitrary_motion_parameters() {
  return _internal_mutable_arbitrary_motion_parameters()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* ScenarioSettings_Constellation_OrbitalParameters::add_arbitrary_motion_parameters() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters* _add = _internal_add_arbitrary_motion_parameters();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters >&
ScenarioSettings_Constellation_OrbitalParameters::arbitrary_motion_parameters() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters)
  return _internal_arbitrary_motion_parameters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>&
ScenarioSettings_Constellation_OrbitalParameters::_internal_arbitrary_motion_parameters() const {
  return _impl_.arbitrary_motion_parameters_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters>*
ScenarioSettings_Constellation_OrbitalParameters::_internal_mutable_arbitrary_motion_parameters() {
  return &_impl_.arbitrary_motion_parameters_;
}

// -------------------------------------------------------------------

// ScenarioSettings_Constellation_ServiceRequest

// optional string pop_id = 1 [json_name = "popId"];
inline bool ScenarioSettings_Constellation_ServiceRequest::has_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_ServiceRequest::clear_pop_id() {
  _impl_.pop_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_Constellation_ServiceRequest::pop_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.pop_id)
  return _internal_pop_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Constellation_ServiceRequest::set_pop_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pop_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.pop_id)
}
inline std::string* ScenarioSettings_Constellation_ServiceRequest::mutable_pop_id() {
  std::string* _s = _internal_mutable_pop_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.pop_id)
  return _s;
}
inline const std::string& ScenarioSettings_Constellation_ServiceRequest::_internal_pop_id() const {
  return _impl_.pop_id_.Get();
}
inline void ScenarioSettings_Constellation_ServiceRequest::_internal_set_pop_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.pop_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation_ServiceRequest::_internal_mutable_pop_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pop_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation_ServiceRequest::release_pop_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.pop_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pop_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pop_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Constellation_ServiceRequest::set_allocated_pop_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pop_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pop_id_.IsDefault()) {
          _impl_.pop_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.pop_id)
}

// optional double uplink_capacity_bps = 2 [json_name = "uplinkCapacityBps"];
inline bool ScenarioSettings_Constellation_ServiceRequest::has_uplink_capacity_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_ServiceRequest::clear_uplink_capacity_bps() {
  _impl_.uplink_capacity_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ScenarioSettings_Constellation_ServiceRequest::uplink_capacity_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.uplink_capacity_bps)
  return _internal_uplink_capacity_bps();
}
inline void ScenarioSettings_Constellation_ServiceRequest::set_uplink_capacity_bps(double value) {
  _internal_set_uplink_capacity_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.uplink_capacity_bps)
}
inline double ScenarioSettings_Constellation_ServiceRequest::_internal_uplink_capacity_bps() const {
  return _impl_.uplink_capacity_bps_;
}
inline void ScenarioSettings_Constellation_ServiceRequest::_internal_set_uplink_capacity_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.uplink_capacity_bps_ = value;
}

// optional double downlink_capacity_bps = 3 [json_name = "downlinkCapacityBps"];
inline bool ScenarioSettings_Constellation_ServiceRequest::has_downlink_capacity_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_ServiceRequest::clear_downlink_capacity_bps() {
  _impl_.downlink_capacity_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double ScenarioSettings_Constellation_ServiceRequest::downlink_capacity_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.downlink_capacity_bps)
  return _internal_downlink_capacity_bps();
}
inline void ScenarioSettings_Constellation_ServiceRequest::set_downlink_capacity_bps(double value) {
  _internal_set_downlink_capacity_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.downlink_capacity_bps)
}
inline double ScenarioSettings_Constellation_ServiceRequest::_internal_downlink_capacity_bps() const {
  return _impl_.downlink_capacity_bps_;
}
inline void ScenarioSettings_Constellation_ServiceRequest::_internal_set_downlink_capacity_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.downlink_capacity_bps_ = value;
}

// optional double priority = 4 [json_name = "priority"];
inline bool ScenarioSettings_Constellation_ServiceRequest::has_priority() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation_ServiceRequest::clear_priority() {
  _impl_.priority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double ScenarioSettings_Constellation_ServiceRequest::priority() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.priority)
  return _internal_priority();
}
inline void ScenarioSettings_Constellation_ServiceRequest::set_priority(double value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest.priority)
}
inline double ScenarioSettings_Constellation_ServiceRequest::_internal_priority() const {
  return _impl_.priority_;
}
inline void ScenarioSettings_Constellation_ServiceRequest::_internal_set_priority(double value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_Constellation

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_Constellation::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_Constellation::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Constellation::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.name)
}
inline std::string* ScenarioSettings_Constellation::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.name)
  return _s;
}
inline const std::string& ScenarioSettings_Constellation::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_Constellation::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Constellation::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.name)
}

// optional string type = 5 [json_name = "type"];
inline bool ScenarioSettings_Constellation::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_Constellation::clear_type() {
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ScenarioSettings_Constellation::type() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Constellation::set_type(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.type)
}
inline std::string* ScenarioSettings_Constellation::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.type)
  return _s;
}
inline const std::string& ScenarioSettings_Constellation::_internal_type() const {
  return _impl_.type_.Get();
}
inline void ScenarioSettings_Constellation::_internal_set_type(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation::_internal_mutable_type() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Constellation::release_type() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.type_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Constellation::set_allocated_type(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.type)
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters orbital_parameters = 2 [json_name = "orbitalParameters"];
inline bool ScenarioSettings_Constellation::has_orbital_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.orbital_parameters_ != nullptr);
  return value;
}
inline void ScenarioSettings_Constellation::clear_orbital_parameters() {
  if (_impl_.orbital_parameters_ != nullptr) _impl_.orbital_parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters& ScenarioSettings_Constellation::_internal_orbital_parameters() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* p = _impl_.orbital_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_ScenarioSettings_Constellation_OrbitalParameters_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters& ScenarioSettings_Constellation::orbital_parameters() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters)
  return _internal_orbital_parameters();
}
inline void ScenarioSettings_Constellation::unsafe_arena_set_allocated_orbital_parameters(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* orbital_parameters) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.orbital_parameters_);
  }
  _impl_.orbital_parameters_ = orbital_parameters;
  if (orbital_parameters) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* ScenarioSettings_Constellation::release_orbital_parameters() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* temp = _impl_.orbital_parameters_;
  _impl_.orbital_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* ScenarioSettings_Constellation::unsafe_arena_release_orbital_parameters() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* temp = _impl_.orbital_parameters_;
  _impl_.orbital_parameters_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* ScenarioSettings_Constellation::_internal_mutable_orbital_parameters() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.orbital_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters>(GetArenaForAllocation());
    _impl_.orbital_parameters_ = p;
  }
  return _impl_.orbital_parameters_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* ScenarioSettings_Constellation::mutable_orbital_parameters() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* _msg = _internal_mutable_orbital_parameters();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters)
  return _msg;
}
inline void ScenarioSettings_Constellation::set_allocated_orbital_parameters(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters* orbital_parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.orbital_parameters_;
  }
  if (orbital_parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(orbital_parameters);
    if (message_arena != submessage_arena) {
      orbital_parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, orbital_parameters, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.orbital_parameters_ = orbital_parameters;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 3 [json_name = "transceiverModels"];
inline int ScenarioSettings_Constellation::_internal_transceiver_models_size() const {
  return _impl_.transceiver_models_.size();
}
inline int ScenarioSettings_Constellation::transceiver_models_size() const {
  return _internal_transceiver_models_size();
}
inline void ScenarioSettings_Constellation::clear_transceiver_models() {
  _internal_mutable_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Constellation::mutable_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models)
  return _internal_mutable_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_Constellation::mutable_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models)
  return _internal_mutable_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_Constellation::_internal_transceiver_models(int index) const {
  return _internal_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_Constellation::transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models)
  return _internal_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Constellation::_internal_add_transceiver_models() {
  return _internal_mutable_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Constellation::add_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_Constellation::transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models)
  return _internal_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_Constellation::_internal_transceiver_models() const {
  return _impl_.transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_Constellation::_internal_mutable_transceiver_models() {
  return &_impl_.transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 4 [json_name = "wirelessInterfaces"];
inline int ScenarioSettings_Constellation::_internal_wireless_interfaces_size() const {
  return _impl_.wireless_interfaces_.size();
}
inline int ScenarioSettings_Constellation::wireless_interfaces_size() const {
  return _internal_wireless_interfaces_size();
}
inline void ScenarioSettings_Constellation::clear_wireless_interfaces() {
  _internal_mutable_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Constellation::mutable_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces)
  return _internal_mutable_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_Constellation::mutable_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces)
  return _internal_mutable_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_Constellation::_internal_wireless_interfaces(int index) const {
  return _internal_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_Constellation::wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces)
  return _internal_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Constellation::_internal_add_wireless_interfaces() {
  return _internal_mutable_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Constellation::add_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_Constellation::wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces)
  return _internal_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_Constellation::_internal_wireless_interfaces() const {
  return _impl_.wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_Constellation::_internal_mutable_wireless_interfaces() {
  return &_impl_.wireless_interfaces_;
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode.Storage storage = 6 [json_name = "storage"];
inline bool ScenarioSettings_Constellation::has_storage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.storage_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage& ScenarioSettings_Constellation::_internal_storage() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* p = _impl_.storage_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_NetworkNode_Storage_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage& ScenarioSettings_Constellation::storage() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage)
  return _internal_storage();
}
inline void ScenarioSettings_Constellation::unsafe_arena_set_allocated_storage(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* storage) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.storage_);
  }
  _impl_.storage_ = storage;
  if (storage) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* ScenarioSettings_Constellation::release_storage() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* temp = _impl_.storage_;
  _impl_.storage_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* ScenarioSettings_Constellation::unsafe_arena_release_storage() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* temp = _impl_.storage_;
  _impl_.storage_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* ScenarioSettings_Constellation::_internal_mutable_storage() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.storage_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage>(GetArenaForAllocation());
    _impl_.storage_ = p;
  }
  return _impl_.storage_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* ScenarioSettings_Constellation::mutable_storage() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* _msg = _internal_mutable_storage();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage)
  return _msg;
}
inline void ScenarioSettings_Constellation::set_allocated_storage(::aalyria::spacetime::api::nbi::v1alpha::resources::NetworkNode_Storage* storage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.storage_);
  }
  if (storage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(storage));
    if (message_arena != submessage_arena) {
      storage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, storage, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.storage_ = storage;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest service_request = 7 [json_name = "serviceRequest"];
inline int ScenarioSettings_Constellation::_internal_service_request_size() const {
  return _impl_.service_request_.size();
}
inline int ScenarioSettings_Constellation::service_request_size() const {
  return _internal_service_request_size();
}
inline void ScenarioSettings_Constellation::clear_service_request() {
  _internal_mutable_service_request()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* ScenarioSettings_Constellation::mutable_service_request(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request)
  return _internal_mutable_service_request()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest >*
ScenarioSettings_Constellation::mutable_service_request() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request)
  return _internal_mutable_service_request();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest& ScenarioSettings_Constellation::_internal_service_request(int index) const {
  return _internal_service_request().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest& ScenarioSettings_Constellation::service_request(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request)
  return _internal_service_request(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* ScenarioSettings_Constellation::_internal_add_service_request() {
  return _internal_mutable_service_request()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* ScenarioSettings_Constellation::add_service_request() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest* _add = _internal_add_service_request();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest >&
ScenarioSettings_Constellation::service_request() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request)
  return _internal_service_request();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest>&
ScenarioSettings_Constellation::_internal_service_request() const {
  return _impl_.service_request_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_ServiceRequest>*
ScenarioSettings_Constellation::_internal_mutable_service_request() {
  return &_impl_.service_request_;
}

// -------------------------------------------------------------------

// ScenarioSettings_WirelessInterface

// optional string id = 1 [json_name = "id"];
inline bool ScenarioSettings_WirelessInterface::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_WirelessInterface::clear_id() {
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_WirelessInterface::id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_WirelessInterface::set_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.id)
}
inline std::string* ScenarioSettings_WirelessInterface::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.id)
  return _s;
}
inline const std::string& ScenarioSettings_WirelessInterface::_internal_id() const {
  return _impl_.id_.Get();
}
inline void ScenarioSettings_WirelessInterface::_internal_set_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_WirelessInterface::_internal_mutable_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_WirelessInterface::release_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_WirelessInterface::set_allocated_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.id)
}

// optional string transceiver_model_id = 3 [json_name = "transceiverModelId"];
inline bool ScenarioSettings_WirelessInterface::has_transceiver_model_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_WirelessInterface::clear_transceiver_model_id() {
  _impl_.transceiver_model_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ScenarioSettings_WirelessInterface::transceiver_model_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.transceiver_model_id)
  return _internal_transceiver_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_WirelessInterface::set_transceiver_model_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.transceiver_model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.transceiver_model_id)
}
inline std::string* ScenarioSettings_WirelessInterface::mutable_transceiver_model_id() {
  std::string* _s = _internal_mutable_transceiver_model_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.transceiver_model_id)
  return _s;
}
inline const std::string& ScenarioSettings_WirelessInterface::_internal_transceiver_model_id() const {
  return _impl_.transceiver_model_id_.Get();
}
inline void ScenarioSettings_WirelessInterface::_internal_set_transceiver_model_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.transceiver_model_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_WirelessInterface::_internal_mutable_transceiver_model_id() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.transceiver_model_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_WirelessInterface::release_transceiver_model_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.transceiver_model_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.transceiver_model_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.transceiver_model_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_WirelessInterface::set_allocated_transceiver_model_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transceiver_model_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transceiver_model_id_.IsDefault()) {
          _impl_.transceiver_model_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface.transceiver_model_id)
}

// -------------------------------------------------------------------

// ScenarioSettings_TransmitterDefinition

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_TransmitterDefinition::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_TransmitterDefinition::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_TransmitterDefinition::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_TransmitterDefinition::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.name)
}
inline std::string* ScenarioSettings_TransmitterDefinition::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.name)
  return _s;
}
inline const std::string& ScenarioSettings_TransmitterDefinition::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_TransmitterDefinition::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_TransmitterDefinition::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_TransmitterDefinition::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_TransmitterDefinition::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.name)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition sequential_channel_definition = 2 [json_name = "sequentialChannelDefinition"];
inline int ScenarioSettings_TransmitterDefinition::_internal_sequential_channel_definition_size() const {
  return _impl_.sequential_channel_definition_.size();
}
inline int ScenarioSettings_TransmitterDefinition::sequential_channel_definition_size() const {
  return _internal_sequential_channel_definition_size();
}
inline void ScenarioSettings_TransmitterDefinition::clear_sequential_channel_definition() {
  _internal_mutable_sequential_channel_definition()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_TransmitterDefinition::mutable_sequential_channel_definition(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition)
  return _internal_mutable_sequential_channel_definition()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >*
ScenarioSettings_TransmitterDefinition::mutable_sequential_channel_definition() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition)
  return _internal_mutable_sequential_channel_definition();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& ScenarioSettings_TransmitterDefinition::_internal_sequential_channel_definition(int index) const {
  return _internal_sequential_channel_definition().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& ScenarioSettings_TransmitterDefinition::sequential_channel_definition(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition)
  return _internal_sequential_channel_definition(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_TransmitterDefinition::_internal_add_sequential_channel_definition() {
  return _internal_mutable_sequential_channel_definition()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_TransmitterDefinition::add_sequential_channel_definition() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* _add = _internal_add_sequential_channel_definition();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >&
ScenarioSettings_TransmitterDefinition::sequential_channel_definition() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition)
  return _internal_sequential_channel_definition();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>&
ScenarioSettings_TransmitterDefinition::_internal_sequential_channel_definition() const {
  return _impl_.sequential_channel_definition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>*
ScenarioSettings_TransmitterDefinition::_internal_mutable_sequential_channel_definition() {
  return &_impl_.sequential_channel_definition_;
}

// optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 3 [json_name = "channelSelectionMethod"];
inline bool ScenarioSettings_TransmitterDefinition::has_channel_selection_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_TransmitterDefinition::clear_channel_selection_method() {
  _impl_.channel_selection_method_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::aalyria::spacetime::api::common::ChannelSelectionMethod ScenarioSettings_TransmitterDefinition::channel_selection_method() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.channel_selection_method)
  return _internal_channel_selection_method();
}
inline void ScenarioSettings_TransmitterDefinition::set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value) {
   _internal_set_channel_selection_method(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.channel_selection_method)
}
inline ::aalyria::spacetime::api::common::ChannelSelectionMethod ScenarioSettings_TransmitterDefinition::_internal_channel_selection_method() const {
  return static_cast<::aalyria::spacetime::api::common::ChannelSelectionMethod>(_impl_.channel_selection_method_);
}
inline void ScenarioSettings_TransmitterDefinition::_internal_set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value) {
  assert(::aalyria::spacetime::api::common::ChannelSelectionMethod_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.channel_selection_method_ = value;
}

// repeated .aalyria.spacetime.api.common.TransmitSignalProcessor signal_processing_step = 4 [json_name = "signalProcessingStep"];
inline int ScenarioSettings_TransmitterDefinition::_internal_signal_processing_step_size() const {
  return _impl_.signal_processing_step_.size();
}
inline int ScenarioSettings_TransmitterDefinition::signal_processing_step_size() const {
  return _internal_signal_processing_step_size();
}
inline ::aalyria::spacetime::api::common::TransmitSignalProcessor* ScenarioSettings_TransmitterDefinition::mutable_signal_processing_step(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step)
  return _internal_mutable_signal_processing_step()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::TransmitSignalProcessor >*
ScenarioSettings_TransmitterDefinition::mutable_signal_processing_step() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step)
  return _internal_mutable_signal_processing_step();
}
inline const ::aalyria::spacetime::api::common::TransmitSignalProcessor& ScenarioSettings_TransmitterDefinition::_internal_signal_processing_step(int index) const {
  return _internal_signal_processing_step().Get(index);
}
inline const ::aalyria::spacetime::api::common::TransmitSignalProcessor& ScenarioSettings_TransmitterDefinition::signal_processing_step(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step)
  return _internal_signal_processing_step(index);
}
inline ::aalyria::spacetime::api::common::TransmitSignalProcessor* ScenarioSettings_TransmitterDefinition::_internal_add_signal_processing_step() {
  return _internal_mutable_signal_processing_step()->Add();
}
inline ::aalyria::spacetime::api::common::TransmitSignalProcessor* ScenarioSettings_TransmitterDefinition::add_signal_processing_step() {
  ::aalyria::spacetime::api::common::TransmitSignalProcessor* _add = _internal_add_signal_processing_step();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::TransmitSignalProcessor >&
ScenarioSettings_TransmitterDefinition::signal_processing_step() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step)
  return _internal_signal_processing_step();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::TransmitSignalProcessor>&
ScenarioSettings_TransmitterDefinition::_internal_signal_processing_step() const {
  return _impl_.signal_processing_step_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::TransmitSignalProcessor>*
ScenarioSettings_TransmitterDefinition::_internal_mutable_signal_processing_step() {
  return &_impl_.signal_processing_step_;
}

// -------------------------------------------------------------------

// ScenarioSettings_ReceiverDefinition

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_ReceiverDefinition::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_ReceiverDefinition::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_ReceiverDefinition::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_ReceiverDefinition::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.name)
}
inline std::string* ScenarioSettings_ReceiverDefinition::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.name)
  return _s;
}
inline const std::string& ScenarioSettings_ReceiverDefinition::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_ReceiverDefinition::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ReceiverDefinition::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ReceiverDefinition::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_ReceiverDefinition::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.name)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition sequential_channel_definition = 2 [json_name = "sequentialChannelDefinition"];
inline int ScenarioSettings_ReceiverDefinition::_internal_sequential_channel_definition_size() const {
  return _impl_.sequential_channel_definition_.size();
}
inline int ScenarioSettings_ReceiverDefinition::sequential_channel_definition_size() const {
  return _internal_sequential_channel_definition_size();
}
inline void ScenarioSettings_ReceiverDefinition::clear_sequential_channel_definition() {
  _internal_mutable_sequential_channel_definition()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_ReceiverDefinition::mutable_sequential_channel_definition(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition)
  return _internal_mutable_sequential_channel_definition()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >*
ScenarioSettings_ReceiverDefinition::mutable_sequential_channel_definition() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition)
  return _internal_mutable_sequential_channel_definition();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& ScenarioSettings_ReceiverDefinition::_internal_sequential_channel_definition(int index) const {
  return _internal_sequential_channel_definition().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition& ScenarioSettings_ReceiverDefinition::sequential_channel_definition(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition)
  return _internal_sequential_channel_definition(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_ReceiverDefinition::_internal_add_sequential_channel_definition() {
  return _internal_mutable_sequential_channel_definition()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* ScenarioSettings_ReceiverDefinition::add_sequential_channel_definition() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition* _add = _internal_add_sequential_channel_definition();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition >&
ScenarioSettings_ReceiverDefinition::sequential_channel_definition() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition)
  return _internal_sequential_channel_definition();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>&
ScenarioSettings_ReceiverDefinition::_internal_sequential_channel_definition() const {
  return _impl_.sequential_channel_definition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_SequentialChannelDefinition>*
ScenarioSettings_ReceiverDefinition::_internal_mutable_sequential_channel_definition() {
  return &_impl_.sequential_channel_definition_;
}

// optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 3 [json_name = "channelSelectionMethod"];
inline bool ScenarioSettings_ReceiverDefinition::has_channel_selection_method() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_ReceiverDefinition::clear_channel_selection_method() {
  _impl_.channel_selection_method_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::aalyria::spacetime::api::common::ChannelSelectionMethod ScenarioSettings_ReceiverDefinition::channel_selection_method() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.channel_selection_method)
  return _internal_channel_selection_method();
}
inline void ScenarioSettings_ReceiverDefinition::set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value) {
   _internal_set_channel_selection_method(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.channel_selection_method)
}
inline ::aalyria::spacetime::api::common::ChannelSelectionMethod ScenarioSettings_ReceiverDefinition::_internal_channel_selection_method() const {
  return static_cast<::aalyria::spacetime::api::common::ChannelSelectionMethod>(_impl_.channel_selection_method_);
}
inline void ScenarioSettings_ReceiverDefinition::_internal_set_channel_selection_method(::aalyria::spacetime::api::common::ChannelSelectionMethod value) {
  assert(::aalyria::spacetime::api::common::ChannelSelectionMethod_IsValid(value));
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.channel_selection_method_ = value;
}

// repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 4 [json_name = "signalProcessingStep"];
inline int ScenarioSettings_ReceiverDefinition::_internal_signal_processing_step_size() const {
  return _impl_.signal_processing_step_.size();
}
inline int ScenarioSettings_ReceiverDefinition::signal_processing_step_size() const {
  return _internal_signal_processing_step_size();
}
inline ::aalyria::spacetime::api::common::ReceiveSignalProcessor* ScenarioSettings_ReceiverDefinition::mutable_signal_processing_step(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step)
  return _internal_mutable_signal_processing_step()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::ReceiveSignalProcessor >*
ScenarioSettings_ReceiverDefinition::mutable_signal_processing_step() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step)
  return _internal_mutable_signal_processing_step();
}
inline const ::aalyria::spacetime::api::common::ReceiveSignalProcessor& ScenarioSettings_ReceiverDefinition::_internal_signal_processing_step(int index) const {
  return _internal_signal_processing_step().Get(index);
}
inline const ::aalyria::spacetime::api::common::ReceiveSignalProcessor& ScenarioSettings_ReceiverDefinition::signal_processing_step(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step)
  return _internal_signal_processing_step(index);
}
inline ::aalyria::spacetime::api::common::ReceiveSignalProcessor* ScenarioSettings_ReceiverDefinition::_internal_add_signal_processing_step() {
  return _internal_mutable_signal_processing_step()->Add();
}
inline ::aalyria::spacetime::api::common::ReceiveSignalProcessor* ScenarioSettings_ReceiverDefinition::add_signal_processing_step() {
  ::aalyria::spacetime::api::common::ReceiveSignalProcessor* _add = _internal_add_signal_processing_step();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::ReceiveSignalProcessor >&
ScenarioSettings_ReceiverDefinition::signal_processing_step() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step)
  return _internal_signal_processing_step();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::ReceiveSignalProcessor>&
ScenarioSettings_ReceiverDefinition::_internal_signal_processing_step() const {
  return _impl_.signal_processing_step_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::ReceiveSignalProcessor>*
ScenarioSettings_ReceiverDefinition::_internal_mutable_signal_processing_step() {
  return &_impl_.signal_processing_step_;
}

// -------------------------------------------------------------------

// ScenarioSettings_TransceiverModel

// optional string id = 1 [json_name = "id"];
inline bool ScenarioSettings_TransceiverModel::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_TransceiverModel::clear_id() {
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_TransceiverModel::id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_TransceiverModel::set_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.id)
}
inline std::string* ScenarioSettings_TransceiverModel::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.id)
  return _s;
}
inline const std::string& ScenarioSettings_TransceiverModel::_internal_id() const {
  return _impl_.id_.Get();
}
inline void ScenarioSettings_TransceiverModel::_internal_set_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_TransceiverModel::_internal_mutable_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_TransceiverModel::release_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_TransceiverModel::set_allocated_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.id)
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition transmitter = 2 [json_name = "transmitter"];
inline bool ScenarioSettings_TransceiverModel::has_transmitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transmitter_ != nullptr);
  return value;
}
inline void ScenarioSettings_TransceiverModel::clear_transmitter() {
  if (_impl_.transmitter_ != nullptr) _impl_.transmitter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition& ScenarioSettings_TransceiverModel::_internal_transmitter() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* p = _impl_.transmitter_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_ScenarioSettings_TransmitterDefinition_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition& ScenarioSettings_TransceiverModel::transmitter() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter)
  return _internal_transmitter();
}
inline void ScenarioSettings_TransceiverModel::unsafe_arena_set_allocated_transmitter(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* transmitter) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transmitter_);
  }
  _impl_.transmitter_ = transmitter;
  if (transmitter) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* ScenarioSettings_TransceiverModel::release_transmitter() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* temp = _impl_.transmitter_;
  _impl_.transmitter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* ScenarioSettings_TransceiverModel::unsafe_arena_release_transmitter() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* temp = _impl_.transmitter_;
  _impl_.transmitter_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* ScenarioSettings_TransceiverModel::_internal_mutable_transmitter() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transmitter_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition>(GetArenaForAllocation());
    _impl_.transmitter_ = p;
  }
  return _impl_.transmitter_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* ScenarioSettings_TransceiverModel::mutable_transmitter() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* _msg = _internal_mutable_transmitter();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter)
  return _msg;
}
inline void ScenarioSettings_TransceiverModel::set_allocated_transmitter(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransmitterDefinition* transmitter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.transmitter_;
  }
  if (transmitter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(transmitter);
    if (message_arena != submessage_arena) {
      transmitter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transmitter, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transmitter_ = transmitter;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter)
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition receiver = 3 [json_name = "receiver"];
inline bool ScenarioSettings_TransceiverModel::has_receiver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.receiver_ != nullptr);
  return value;
}
inline void ScenarioSettings_TransceiverModel::clear_receiver() {
  if (_impl_.receiver_ != nullptr) _impl_.receiver_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition& ScenarioSettings_TransceiverModel::_internal_receiver() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* p = _impl_.receiver_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_ScenarioSettings_ReceiverDefinition_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition& ScenarioSettings_TransceiverModel::receiver() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver)
  return _internal_receiver();
}
inline void ScenarioSettings_TransceiverModel::unsafe_arena_set_allocated_receiver(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* receiver) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.receiver_);
  }
  _impl_.receiver_ = receiver;
  if (receiver) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* ScenarioSettings_TransceiverModel::release_receiver() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* temp = _impl_.receiver_;
  _impl_.receiver_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* ScenarioSettings_TransceiverModel::unsafe_arena_release_receiver() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* temp = _impl_.receiver_;
  _impl_.receiver_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* ScenarioSettings_TransceiverModel::_internal_mutable_receiver() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.receiver_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition>(GetArenaForAllocation());
    _impl_.receiver_ = p;
  }
  return _impl_.receiver_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* ScenarioSettings_TransceiverModel::mutable_receiver() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* _msg = _internal_mutable_receiver();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver)
  return _msg;
}
inline void ScenarioSettings_TransceiverModel::set_allocated_receiver(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ReceiverDefinition* receiver) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.receiver_;
  }
  if (receiver) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(receiver);
    if (message_arena != submessage_arena) {
      receiver = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, receiver, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.receiver_ = receiver;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver)
}

// optional .aalyria.spacetime.api.common.AntennaDefinition antenna_definition = 4 [json_name = "antennaDefinition"];
inline bool ScenarioSettings_TransceiverModel::has_antenna_definition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.antenna_definition_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::AntennaDefinition& ScenarioSettings_TransceiverModel::_internal_antenna_definition() const {
  const ::aalyria::spacetime::api::common::AntennaDefinition* p = _impl_.antenna_definition_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::AntennaDefinition&>(
      ::aalyria::spacetime::api::common::_AntennaDefinition_default_instance_);
}
inline const ::aalyria::spacetime::api::common::AntennaDefinition& ScenarioSettings_TransceiverModel::antenna_definition() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition)
  return _internal_antenna_definition();
}
inline void ScenarioSettings_TransceiverModel::unsafe_arena_set_allocated_antenna_definition(
    ::aalyria::spacetime::api::common::AntennaDefinition* antenna_definition) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.antenna_definition_);
  }
  _impl_.antenna_definition_ = antenna_definition;
  if (antenna_definition) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition)
}
inline ::aalyria::spacetime::api::common::AntennaDefinition* ScenarioSettings_TransceiverModel::release_antenna_definition() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::common::AntennaDefinition* temp = _impl_.antenna_definition_;
  _impl_.antenna_definition_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::AntennaDefinition* ScenarioSettings_TransceiverModel::unsafe_arena_release_antenna_definition() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::common::AntennaDefinition* temp = _impl_.antenna_definition_;
  _impl_.antenna_definition_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::AntennaDefinition* ScenarioSettings_TransceiverModel::_internal_mutable_antenna_definition() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.antenna_definition_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::AntennaDefinition>(GetArenaForAllocation());
    _impl_.antenna_definition_ = p;
  }
  return _impl_.antenna_definition_;
}
inline ::aalyria::spacetime::api::common::AntennaDefinition* ScenarioSettings_TransceiverModel::mutable_antenna_definition() {
  ::aalyria::spacetime::api::common::AntennaDefinition* _msg = _internal_mutable_antenna_definition();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition)
  return _msg;
}
inline void ScenarioSettings_TransceiverModel::set_allocated_antenna_definition(::aalyria::spacetime::api::common::AntennaDefinition* antenna_definition) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.antenna_definition_);
  }
  if (antenna_definition) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(antenna_definition));
    if (message_arena != submessage_arena) {
      antenna_definition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, antenna_definition, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.antenna_definition_ = antenna_definition;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition)
}

// repeated .aalyria.spacetime.api.common.WirelessMac macs = 5 [json_name = "macs"];
inline int ScenarioSettings_TransceiverModel::_internal_macs_size() const {
  return _impl_.macs_.size();
}
inline int ScenarioSettings_TransceiverModel::macs_size() const {
  return _internal_macs_size();
}
inline ::aalyria::spacetime::api::common::WirelessMac* ScenarioSettings_TransceiverModel::mutable_macs(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs)
  return _internal_mutable_macs()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::WirelessMac >*
ScenarioSettings_TransceiverModel::mutable_macs() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs)
  return _internal_mutable_macs();
}
inline const ::aalyria::spacetime::api::common::WirelessMac& ScenarioSettings_TransceiverModel::_internal_macs(int index) const {
  return _internal_macs().Get(index);
}
inline const ::aalyria::spacetime::api::common::WirelessMac& ScenarioSettings_TransceiverModel::macs(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs)
  return _internal_macs(index);
}
inline ::aalyria::spacetime::api::common::WirelessMac* ScenarioSettings_TransceiverModel::_internal_add_macs() {
  return _internal_mutable_macs()->Add();
}
inline ::aalyria::spacetime::api::common::WirelessMac* ScenarioSettings_TransceiverModel::add_macs() {
  ::aalyria::spacetime::api::common::WirelessMac* _add = _internal_add_macs();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::common::WirelessMac >&
ScenarioSettings_TransceiverModel::macs() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs)
  return _internal_macs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::WirelessMac>&
ScenarioSettings_TransceiverModel::_internal_macs() const {
  return _impl_.macs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::common::WirelessMac>*
ScenarioSettings_TransceiverModel::_internal_mutable_macs() {
  return &_impl_.macs_;
}

// -------------------------------------------------------------------

// ScenarioSettings_SequentialChannelDefinition

// optional string channel_id = 1 [json_name = "channelId"];
inline bool ScenarioSettings_SequentialChannelDefinition::has_channel_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_SequentialChannelDefinition::clear_channel_id() {
  _impl_.channel_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_SequentialChannelDefinition::channel_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_SequentialChannelDefinition::set_channel_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_id)
}
inline std::string* ScenarioSettings_SequentialChannelDefinition::mutable_channel_id() {
  std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_id)
  return _s;
}
inline const std::string& ScenarioSettings_SequentialChannelDefinition::_internal_channel_id() const {
  return _impl_.channel_id_.Get();
}
inline void ScenarioSettings_SequentialChannelDefinition::_internal_set_channel_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.channel_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_SequentialChannelDefinition::_internal_mutable_channel_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.channel_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_SequentialChannelDefinition::release_channel_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.channel_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_SequentialChannelDefinition::set_allocated_channel_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.channel_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_id_.IsDefault()) {
          _impl_.channel_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_id)
}

// optional uint32 channel_count = 2 [json_name = "channelCount"];
inline bool ScenarioSettings_SequentialChannelDefinition::has_channel_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ScenarioSettings_SequentialChannelDefinition::clear_channel_count() {
  _impl_.channel_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t ScenarioSettings_SequentialChannelDefinition::channel_count() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_count)
  return _internal_channel_count();
}
inline void ScenarioSettings_SequentialChannelDefinition::set_channel_count(::uint32_t value) {
  _internal_set_channel_count(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.channel_count)
}
inline ::uint32_t ScenarioSettings_SequentialChannelDefinition::_internal_channel_count() const {
  return _impl_.channel_count_;
}
inline void ScenarioSettings_SequentialChannelDefinition::_internal_set_channel_count(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.channel_count_ = value;
}

// optional uint64 starting_frequency_hz = 3 [json_name = "startingFrequencyHz"];
inline bool ScenarioSettings_SequentialChannelDefinition::has_starting_frequency_hz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_SequentialChannelDefinition::clear_starting_frequency_hz() {
  _impl_.starting_frequency_hz_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t ScenarioSettings_SequentialChannelDefinition::starting_frequency_hz() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.starting_frequency_hz)
  return _internal_starting_frequency_hz();
}
inline void ScenarioSettings_SequentialChannelDefinition::set_starting_frequency_hz(::uint64_t value) {
  _internal_set_starting_frequency_hz(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.starting_frequency_hz)
}
inline ::uint64_t ScenarioSettings_SequentialChannelDefinition::_internal_starting_frequency_hz() const {
  return _impl_.starting_frequency_hz_;
}
inline void ScenarioSettings_SequentialChannelDefinition::_internal_set_starting_frequency_hz(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.starting_frequency_hz_ = value;
}

// optional uint64 bandwidth_hz = 4 [json_name = "bandwidthHz"];
inline bool ScenarioSettings_SequentialChannelDefinition::has_bandwidth_hz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioSettings_SequentialChannelDefinition::clear_bandwidth_hz() {
  _impl_.bandwidth_hz_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t ScenarioSettings_SequentialChannelDefinition::bandwidth_hz() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.bandwidth_hz)
  return _internal_bandwidth_hz();
}
inline void ScenarioSettings_SequentialChannelDefinition::set_bandwidth_hz(::uint64_t value) {
  _internal_set_bandwidth_hz(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.bandwidth_hz)
}
inline ::uint64_t ScenarioSettings_SequentialChannelDefinition::_internal_bandwidth_hz() const {
  return _impl_.bandwidth_hz_;
}
inline void ScenarioSettings_SequentialChannelDefinition::_internal_set_bandwidth_hz(::uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.bandwidth_hz_ = value;
}

// optional double tx_power_w = 5 [json_name = "txPowerW"];
inline bool ScenarioSettings_SequentialChannelDefinition::has_tx_power_w() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ScenarioSettings_SequentialChannelDefinition::clear_tx_power_w() {
  _impl_.tx_power_w_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double ScenarioSettings_SequentialChannelDefinition::tx_power_w() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.tx_power_w)
  return _internal_tx_power_w();
}
inline void ScenarioSettings_SequentialChannelDefinition::set_tx_power_w(double value) {
  _internal_set_tx_power_w(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition.tx_power_w)
}
inline double ScenarioSettings_SequentialChannelDefinition::_internal_tx_power_w() const {
  return _impl_.tx_power_w_;
}
inline void ScenarioSettings_SequentialChannelDefinition::_internal_set_tx_power_w(double value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.tx_power_w_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_Gateway

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_Gateway::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Gateway::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_Gateway::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Gateway::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.name)
}
inline std::string* ScenarioSettings_Gateway::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.name)
  return _s;
}
inline const std::string& ScenarioSettings_Gateway::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_Gateway::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Gateway::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Gateway::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Gateway::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.name)
}

// optional .aalyria.spacetime.api.common.GeodeticWgs84 location = 2 [json_name = "location"];
inline bool ScenarioSettings_Gateway::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_Gateway::_internal_location() const {
  const ::aalyria::spacetime::api::common::GeodeticWgs84* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::GeodeticWgs84&>(
      ::aalyria::spacetime::api::common::_GeodeticWgs84_default_instance_);
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_Gateway::location() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location)
  return _internal_location();
}
inline void ScenarioSettings_Gateway::unsafe_arena_set_allocated_location(
    ::aalyria::spacetime::api::common::GeodeticWgs84* location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = location;
  if (location) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location)
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Gateway::release_location() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Gateway::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Gateway::_internal_mutable_location() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::GeodeticWgs84>(GetArenaForAllocation());
    _impl_.location_ = p;
  }
  return _impl_.location_;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Gateway::mutable_location() {
  ::aalyria::spacetime::api::common::GeodeticWgs84* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location)
  return _msg;
}
inline void ScenarioSettings_Gateway::set_allocated_location(::aalyria::spacetime::api::common::GeodeticWgs84* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location));
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.location_ = location;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 8 [json_name = "transceiverModels"];
inline int ScenarioSettings_Gateway::_internal_transceiver_models_size() const {
  return _impl_.transceiver_models_.size();
}
inline int ScenarioSettings_Gateway::transceiver_models_size() const {
  return _internal_transceiver_models_size();
}
inline void ScenarioSettings_Gateway::clear_transceiver_models() {
  _internal_mutable_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Gateway::mutable_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models)
  return _internal_mutable_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_Gateway::mutable_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models)
  return _internal_mutable_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_Gateway::_internal_transceiver_models(int index) const {
  return _internal_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_Gateway::transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models)
  return _internal_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Gateway::_internal_add_transceiver_models() {
  return _internal_mutable_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_Gateway::add_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_Gateway::transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models)
  return _internal_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_Gateway::_internal_transceiver_models() const {
  return _impl_.transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_Gateway::_internal_mutable_transceiver_models() {
  return &_impl_.transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 9 [json_name = "wirelessInterfaces"];
inline int ScenarioSettings_Gateway::_internal_wireless_interfaces_size() const {
  return _impl_.wireless_interfaces_.size();
}
inline int ScenarioSettings_Gateway::wireless_interfaces_size() const {
  return _internal_wireless_interfaces_size();
}
inline void ScenarioSettings_Gateway::clear_wireless_interfaces() {
  _internal_mutable_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Gateway::mutable_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces)
  return _internal_mutable_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_Gateway::mutable_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces)
  return _internal_mutable_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_Gateway::_internal_wireless_interfaces(int index) const {
  return _internal_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_Gateway::wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces)
  return _internal_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Gateway::_internal_add_wireless_interfaces() {
  return _internal_mutable_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_Gateway::add_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_Gateway::wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces)
  return _internal_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_Gateway::_internal_wireless_interfaces() const {
  return _impl_.wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_Gateway::_internal_mutable_wireless_interfaces() {
  return &_impl_.wireless_interfaces_;
}

// optional string wired_interface_id = 10 [default = "WAN", json_name = "wiredInterfaceId"];
inline bool ScenarioSettings_Gateway::has_wired_interface_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_Gateway::clear_wired_interface_id() {
  _impl_.wired_interface_id_.ClearToDefault(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway::Impl_::_i_give_permission_to_break_this_code_default_wired_interface_id_, GetArenaForAllocation());
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ScenarioSettings_Gateway::wired_interface_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wired_interface_id)
  if (_impl_.wired_interface_id_.IsDefault()) {
    return Impl_::_i_give_permission_to_break_this_code_default_wired_interface_id_.get();
  }
  return _internal_wired_interface_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Gateway::set_wired_interface_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.wired_interface_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wired_interface_id)
}
inline std::string* ScenarioSettings_Gateway::mutable_wired_interface_id() {
  std::string* _s = _internal_mutable_wired_interface_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wired_interface_id)
  return _s;
}
inline const std::string& ScenarioSettings_Gateway::_internal_wired_interface_id() const {
  return _impl_.wired_interface_id_.Get();
}
inline void ScenarioSettings_Gateway::_internal_set_wired_interface_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.wired_interface_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Gateway::_internal_mutable_wired_interface_id() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.wired_interface_id_.Mutable(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway::Impl_::_i_give_permission_to_break_this_code_default_wired_interface_id_, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Gateway::release_wired_interface_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wired_interface_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  return _impl_.wired_interface_id_.Release();
}
inline void ScenarioSettings_Gateway::set_allocated_wired_interface_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.wired_interface_id_.SetAllocated(value, GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wired_interface_id)
}

// optional double max_wired_data_rate_bps = 6 [json_name = "maxWiredDataRateBps"];
inline bool ScenarioSettings_Gateway::has_max_wired_data_rate_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ScenarioSettings_Gateway::clear_max_wired_data_rate_bps() {
  _impl_.max_wired_data_rate_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double ScenarioSettings_Gateway::max_wired_data_rate_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.max_wired_data_rate_bps)
  return _internal_max_wired_data_rate_bps();
}
inline void ScenarioSettings_Gateway::set_max_wired_data_rate_bps(double value) {
  _internal_set_max_wired_data_rate_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.max_wired_data_rate_bps)
}
inline double ScenarioSettings_Gateway::_internal_max_wired_data_rate_bps() const {
  return _impl_.max_wired_data_rate_bps_;
}
inline void ScenarioSettings_Gateway::_internal_set_max_wired_data_rate_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.max_wired_data_rate_bps_ = value;
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.SdnAgent agent = 3 [json_name = "agent"];
inline bool ScenarioSettings_Gateway::has_agent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent& ScenarioSettings_Gateway::_internal_agent() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* p = _impl_.agent_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_SdnAgent_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent& ScenarioSettings_Gateway::agent() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent)
  return _internal_agent();
}
inline void ScenarioSettings_Gateway::unsafe_arena_set_allocated_agent(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* agent) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.agent_);
  }
  _impl_.agent_ = agent;
  if (agent) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* ScenarioSettings_Gateway::release_agent() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* temp = _impl_.agent_;
  _impl_.agent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* ScenarioSettings_Gateway::unsafe_arena_release_agent() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* temp = _impl_.agent_;
  _impl_.agent_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* ScenarioSettings_Gateway::_internal_mutable_agent() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.agent_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent>(GetArenaForAllocation());
    _impl_.agent_ = p;
  }
  return _impl_.agent_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* ScenarioSettings_Gateway::mutable_agent() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* _msg = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent)
  return _msg;
}
inline void ScenarioSettings_Gateway::set_allocated_agent(::aalyria::spacetime::api::nbi::v1alpha::resources::SdnAgent* agent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.agent_);
  }
  if (agent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(agent));
    if (message_arena != submessage_arena) {
      agent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, agent, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.agent_ = agent;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent)
}

// -------------------------------------------------------------------

// ScenarioSettings_ScenarioChannelDefinition

// optional string channel_id = 1 [json_name = "channelId"];
inline bool ScenarioSettings_ScenarioChannelDefinition::has_channel_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_ScenarioChannelDefinition::clear_channel_id() {
  _impl_.channel_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_ScenarioChannelDefinition::channel_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_ScenarioChannelDefinition::set_channel_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel_id)
}
inline std::string* ScenarioSettings_ScenarioChannelDefinition::mutable_channel_id() {
  std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel_id)
  return _s;
}
inline const std::string& ScenarioSettings_ScenarioChannelDefinition::_internal_channel_id() const {
  return _impl_.channel_id_.Get();
}
inline void ScenarioSettings_ScenarioChannelDefinition::_internal_set_channel_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.channel_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ScenarioChannelDefinition::_internal_mutable_channel_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.channel_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ScenarioChannelDefinition::release_channel_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.channel_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.channel_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_ScenarioChannelDefinition::set_allocated_channel_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.channel_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_id_.IsDefault()) {
          _impl_.channel_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel_id)
}

// optional .aalyria.spacetime.api.common.BandProfile channel = 2 [json_name = "channel"];
inline bool ScenarioSettings_ScenarioChannelDefinition::has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::BandProfile& ScenarioSettings_ScenarioChannelDefinition::_internal_channel() const {
  const ::aalyria::spacetime::api::common::BandProfile* p = _impl_.channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::BandProfile&>(
      ::aalyria::spacetime::api::common::_BandProfile_default_instance_);
}
inline const ::aalyria::spacetime::api::common::BandProfile& ScenarioSettings_ScenarioChannelDefinition::channel() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel)
  return _internal_channel();
}
inline void ScenarioSettings_ScenarioChannelDefinition::unsafe_arena_set_allocated_channel(
    ::aalyria::spacetime::api::common::BandProfile* channel) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.channel_);
  }
  _impl_.channel_ = channel;
  if (channel) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel)
}
inline ::aalyria::spacetime::api::common::BandProfile* ScenarioSettings_ScenarioChannelDefinition::release_channel() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::BandProfile* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::BandProfile* ScenarioSettings_ScenarioChannelDefinition::unsafe_arena_release_channel() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::BandProfile* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::BandProfile* ScenarioSettings_ScenarioChannelDefinition::_internal_mutable_channel() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.channel_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::BandProfile>(GetArenaForAllocation());
    _impl_.channel_ = p;
  }
  return _impl_.channel_;
}
inline ::aalyria::spacetime::api::common::BandProfile* ScenarioSettings_ScenarioChannelDefinition::mutable_channel() {
  ::aalyria::spacetime::api::common::BandProfile* _msg = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel)
  return _msg;
}
inline void ScenarioSettings_ScenarioChannelDefinition::set_allocated_channel(::aalyria::spacetime::api::common::BandProfile* channel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.channel_);
  }
  if (channel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(channel));
    if (message_arena != submessage_arena) {
      channel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel)
}

// -------------------------------------------------------------------

// ScenarioSettings_AntennaPatternSettings

// optional string antenna_pattern_id = 1 [json_name = "antennaPatternId"];
inline bool ScenarioSettings_AntennaPatternSettings::has_antenna_pattern_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_AntennaPatternSettings::clear_antenna_pattern_id() {
  _impl_.antenna_pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_AntennaPatternSettings::antenna_pattern_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern_id)
  return _internal_antenna_pattern_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_AntennaPatternSettings::set_antenna_pattern_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.antenna_pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern_id)
}
inline std::string* ScenarioSettings_AntennaPatternSettings::mutable_antenna_pattern_id() {
  std::string* _s = _internal_mutable_antenna_pattern_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern_id)
  return _s;
}
inline const std::string& ScenarioSettings_AntennaPatternSettings::_internal_antenna_pattern_id() const {
  return _impl_.antenna_pattern_id_.Get();
}
inline void ScenarioSettings_AntennaPatternSettings::_internal_set_antenna_pattern_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.antenna_pattern_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AntennaPatternSettings::_internal_mutable_antenna_pattern_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.antenna_pattern_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AntennaPatternSettings::release_antenna_pattern_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.antenna_pattern_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.antenna_pattern_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_AntennaPatternSettings::set_allocated_antenna_pattern_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.antenna_pattern_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.antenna_pattern_id_.IsDefault()) {
          _impl_.antenna_pattern_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern_id)
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern antenna_pattern = 2 [json_name = "antennaPattern"];
inline bool ScenarioSettings_AntennaPatternSettings::has_antenna_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.antenna_pattern_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern& ScenarioSettings_AntennaPatternSettings::_internal_antenna_pattern() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* p = _impl_.antenna_pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_AntennaPattern_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern& ScenarioSettings_AntennaPatternSettings::antenna_pattern() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern)
  return _internal_antenna_pattern();
}
inline void ScenarioSettings_AntennaPatternSettings::unsafe_arena_set_allocated_antenna_pattern(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* antenna_pattern) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.antenna_pattern_);
  }
  _impl_.antenna_pattern_ = antenna_pattern;
  if (antenna_pattern) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* ScenarioSettings_AntennaPatternSettings::release_antenna_pattern() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* temp = _impl_.antenna_pattern_;
  _impl_.antenna_pattern_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* ScenarioSettings_AntennaPatternSettings::unsafe_arena_release_antenna_pattern() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* temp = _impl_.antenna_pattern_;
  _impl_.antenna_pattern_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* ScenarioSettings_AntennaPatternSettings::_internal_mutable_antenna_pattern() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.antenna_pattern_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern>(GetArenaForAllocation());
    _impl_.antenna_pattern_ = p;
  }
  return _impl_.antenna_pattern_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* ScenarioSettings_AntennaPatternSettings::mutable_antenna_pattern() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* _msg = _internal_mutable_antenna_pattern();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern)
  return _msg;
}
inline void ScenarioSettings_AntennaPatternSettings::set_allocated_antenna_pattern(::aalyria::spacetime::api::nbi::v1alpha::resources::AntennaPattern* antenna_pattern) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.antenna_pattern_);
  }
  if (antenna_pattern) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(antenna_pattern));
    if (message_arena != submessage_arena) {
      antenna_pattern = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, antenna_pattern, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.antenna_pattern_ = antenna_pattern;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern)
}

// -------------------------------------------------------------------

// ScenarioSettings_UserTerminal_UserTerminalGridDefinition

// optional string name = 6 [json_name = "name"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_UserTerminal_UserTerminalGridDefinition::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.name)
}
inline std::string* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.name)
  return _s;
}
inline const std::string& ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.name)
}

// optional .aalyria.spacetime.api.common.GeodeticWgs84 south_west_corner = 1 [json_name = "southWestCorner"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_south_west_corner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.south_west_corner_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_south_west_corner() const {
  const ::aalyria::spacetime::api::common::GeodeticWgs84* p = _impl_.south_west_corner_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::GeodeticWgs84&>(
      ::aalyria::spacetime::api::common::_GeodeticWgs84_default_instance_);
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_UserTerminal_UserTerminalGridDefinition::south_west_corner() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner)
  return _internal_south_west_corner();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::unsafe_arena_set_allocated_south_west_corner(
    ::aalyria::spacetime::api::common::GeodeticWgs84* south_west_corner) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.south_west_corner_);
  }
  _impl_.south_west_corner_ = south_west_corner;
  if (south_west_corner) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner)
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::release_south_west_corner() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.south_west_corner_;
  _impl_.south_west_corner_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::unsafe_arena_release_south_west_corner() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.south_west_corner_;
  _impl_.south_west_corner_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_mutable_south_west_corner() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.south_west_corner_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::GeodeticWgs84>(GetArenaForAllocation());
    _impl_.south_west_corner_ = p;
  }
  return _impl_.south_west_corner_;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_UserTerminal_UserTerminalGridDefinition::mutable_south_west_corner() {
  ::aalyria::spacetime::api::common::GeodeticWgs84* _msg = _internal_mutable_south_west_corner();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner)
  return _msg;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_allocated_south_west_corner(::aalyria::spacetime::api::common::GeodeticWgs84* south_west_corner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.south_west_corner_);
  }
  if (south_west_corner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(south_west_corner));
    if (message_arena != submessage_arena) {
      south_west_corner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, south_west_corner, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.south_west_corner_ = south_west_corner;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner)
}

// optional uint32 row_count = 2 [json_name = "rowCount"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_row_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::clear_row_count() {
  _impl_.row_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t ScenarioSettings_UserTerminal_UserTerminalGridDefinition::row_count() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.row_count)
  return _internal_row_count();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_row_count(::uint32_t value) {
  _internal_set_row_count(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.row_count)
}
inline ::uint32_t ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_row_count() const {
  return _impl_.row_count_;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_set_row_count(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.row_count_ = value;
}

// optional uint32 column_count = 3 [json_name = "columnCount"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_column_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::clear_column_count() {
  _impl_.column_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t ScenarioSettings_UserTerminal_UserTerminalGridDefinition::column_count() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.column_count)
  return _internal_column_count();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_column_count(::uint32_t value) {
  _internal_set_column_count(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.column_count)
}
inline ::uint32_t ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_column_count() const {
  return _impl_.column_count_;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_set_column_count(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.column_count_ = value;
}

// optional double grid_latitude_spacing_deg = 4 [json_name = "gridLatitudeSpacingDeg"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_grid_latitude_spacing_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::clear_grid_latitude_spacing_deg() {
  _impl_.grid_latitude_spacing_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double ScenarioSettings_UserTerminal_UserTerminalGridDefinition::grid_latitude_spacing_deg() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.grid_latitude_spacing_deg)
  return _internal_grid_latitude_spacing_deg();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_grid_latitude_spacing_deg(double value) {
  _internal_set_grid_latitude_spacing_deg(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.grid_latitude_spacing_deg)
}
inline double ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_grid_latitude_spacing_deg() const {
  return _impl_.grid_latitude_spacing_deg_;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_set_grid_latitude_spacing_deg(double value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.grid_latitude_spacing_deg_ = value;
}

// optional double grid_longitude_spacing_deg = 5 [json_name = "gridLongitudeSpacingDeg"];
inline bool ScenarioSettings_UserTerminal_UserTerminalGridDefinition::has_grid_longitude_spacing_deg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::clear_grid_longitude_spacing_deg() {
  _impl_.grid_longitude_spacing_deg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double ScenarioSettings_UserTerminal_UserTerminalGridDefinition::grid_longitude_spacing_deg() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.grid_longitude_spacing_deg)
  return _internal_grid_longitude_spacing_deg();
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::set_grid_longitude_spacing_deg(double value) {
  _internal_set_grid_longitude_spacing_deg(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.grid_longitude_spacing_deg)
}
inline double ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_grid_longitude_spacing_deg() const {
  return _impl_.grid_longitude_spacing_deg_;
}
inline void ScenarioSettings_UserTerminal_UserTerminalGridDefinition::_internal_set_grid_longitude_spacing_deg(double value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.grid_longitude_spacing_deg_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_UserTerminal

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_UserTerminal::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminal::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_UserTerminal::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_UserTerminal::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.name)
}
inline std::string* ScenarioSettings_UserTerminal::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.name)
  return _s;
}
inline const std::string& ScenarioSettings_UserTerminal::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_UserTerminal::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_UserTerminal::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_UserTerminal::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_UserTerminal::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.name)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition user_terminal_grid_definition = 2 [json_name = "userTerminalGridDefinition"];
inline int ScenarioSettings_UserTerminal::_internal_user_terminal_grid_definition_size() const {
  return _impl_.user_terminal_grid_definition_.size();
}
inline int ScenarioSettings_UserTerminal::user_terminal_grid_definition_size() const {
  return _internal_user_terminal_grid_definition_size();
}
inline void ScenarioSettings_UserTerminal::clear_user_terminal_grid_definition() {
  _internal_mutable_user_terminal_grid_definition()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* ScenarioSettings_UserTerminal::mutable_user_terminal_grid_definition(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition)
  return _internal_mutable_user_terminal_grid_definition()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition >*
ScenarioSettings_UserTerminal::mutable_user_terminal_grid_definition() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition)
  return _internal_mutable_user_terminal_grid_definition();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition& ScenarioSettings_UserTerminal::_internal_user_terminal_grid_definition(int index) const {
  return _internal_user_terminal_grid_definition().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition& ScenarioSettings_UserTerminal::user_terminal_grid_definition(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition)
  return _internal_user_terminal_grid_definition(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* ScenarioSettings_UserTerminal::_internal_add_user_terminal_grid_definition() {
  return _internal_mutable_user_terminal_grid_definition()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* ScenarioSettings_UserTerminal::add_user_terminal_grid_definition() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition* _add = _internal_add_user_terminal_grid_definition();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition >&
ScenarioSettings_UserTerminal::user_terminal_grid_definition() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition)
  return _internal_user_terminal_grid_definition();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition>&
ScenarioSettings_UserTerminal::_internal_user_terminal_grid_definition() const {
  return _impl_.user_terminal_grid_definition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal_UserTerminalGridDefinition>*
ScenarioSettings_UserTerminal::_internal_mutable_user_terminal_grid_definition() {
  return &_impl_.user_terminal_grid_definition_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 8 [json_name = "transceiverModels"];
inline int ScenarioSettings_UserTerminal::_internal_transceiver_models_size() const {
  return _impl_.transceiver_models_.size();
}
inline int ScenarioSettings_UserTerminal::transceiver_models_size() const {
  return _internal_transceiver_models_size();
}
inline void ScenarioSettings_UserTerminal::clear_transceiver_models() {
  _internal_mutable_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_UserTerminal::mutable_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models)
  return _internal_mutable_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_UserTerminal::mutable_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models)
  return _internal_mutable_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_UserTerminal::_internal_transceiver_models(int index) const {
  return _internal_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_UserTerminal::transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models)
  return _internal_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_UserTerminal::_internal_add_transceiver_models() {
  return _internal_mutable_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_UserTerminal::add_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_UserTerminal::transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models)
  return _internal_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_UserTerminal::_internal_transceiver_models() const {
  return _impl_.transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_UserTerminal::_internal_mutable_transceiver_models() {
  return &_impl_.transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 9 [json_name = "wirelessInterfaces"];
inline int ScenarioSettings_UserTerminal::_internal_wireless_interfaces_size() const {
  return _impl_.wireless_interfaces_.size();
}
inline int ScenarioSettings_UserTerminal::wireless_interfaces_size() const {
  return _internal_wireless_interfaces_size();
}
inline void ScenarioSettings_UserTerminal::clear_wireless_interfaces() {
  _internal_mutable_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_UserTerminal::mutable_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces)
  return _internal_mutable_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_UserTerminal::mutable_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces)
  return _internal_mutable_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_UserTerminal::_internal_wireless_interfaces(int index) const {
  return _internal_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_UserTerminal::wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces)
  return _internal_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_UserTerminal::_internal_add_wireless_interfaces() {
  return _internal_mutable_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_UserTerminal::add_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_UserTerminal::wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces)
  return _internal_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_UserTerminal::_internal_wireless_interfaces() const {
  return _impl_.wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_UserTerminal::_internal_mutable_wireless_interfaces() {
  return &_impl_.wireless_interfaces_;
}

// -------------------------------------------------------------------

// ScenarioSettings_UserTerminalCommonSettings

// optional double user_terminal_forward_data_rate_bps = 1 [json_name = "userTerminalForwardDataRateBps"];
inline bool ScenarioSettings_UserTerminalCommonSettings::has_user_terminal_forward_data_rate_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminalCommonSettings::clear_user_terminal_forward_data_rate_bps() {
  _impl_.user_terminal_forward_data_rate_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double ScenarioSettings_UserTerminalCommonSettings::user_terminal_forward_data_rate_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings.user_terminal_forward_data_rate_bps)
  return _internal_user_terminal_forward_data_rate_bps();
}
inline void ScenarioSettings_UserTerminalCommonSettings::set_user_terminal_forward_data_rate_bps(double value) {
  _internal_set_user_terminal_forward_data_rate_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings.user_terminal_forward_data_rate_bps)
}
inline double ScenarioSettings_UserTerminalCommonSettings::_internal_user_terminal_forward_data_rate_bps() const {
  return _impl_.user_terminal_forward_data_rate_bps_;
}
inline void ScenarioSettings_UserTerminalCommonSettings::_internal_set_user_terminal_forward_data_rate_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.user_terminal_forward_data_rate_bps_ = value;
}

// optional double user_terminal_return_data_rate_bps = 2 [json_name = "userTerminalReturnDataRateBps"];
inline bool ScenarioSettings_UserTerminalCommonSettings::has_user_terminal_return_data_rate_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_UserTerminalCommonSettings::clear_user_terminal_return_data_rate_bps() {
  _impl_.user_terminal_return_data_rate_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ScenarioSettings_UserTerminalCommonSettings::user_terminal_return_data_rate_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings.user_terminal_return_data_rate_bps)
  return _internal_user_terminal_return_data_rate_bps();
}
inline void ScenarioSettings_UserTerminalCommonSettings::set_user_terminal_return_data_rate_bps(double value) {
  _internal_set_user_terminal_return_data_rate_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings.user_terminal_return_data_rate_bps)
}
inline double ScenarioSettings_UserTerminalCommonSettings::_internal_user_terminal_return_data_rate_bps() const {
  return _impl_.user_terminal_return_data_rate_bps_;
}
inline void ScenarioSettings_UserTerminalCommonSettings::_internal_set_user_terminal_return_data_rate_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_terminal_return_data_rate_bps_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_Pop

// optional string name = 1 [json_name = "name"];
inline bool ScenarioSettings_Pop::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_Pop::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_Pop::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_Pop::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.name)
}
inline std::string* ScenarioSettings_Pop::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.name)
  return _s;
}
inline const std::string& ScenarioSettings_Pop::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_Pop::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Pop::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_Pop::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_Pop::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.name)
}

// optional .aalyria.spacetime.api.common.GeodeticWgs84 location = 2 [json_name = "location"];
inline bool ScenarioSettings_Pop::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_Pop::_internal_location() const {
  const ::aalyria::spacetime::api::common::GeodeticWgs84* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::common::GeodeticWgs84&>(
      ::aalyria::spacetime::api::common::_GeodeticWgs84_default_instance_);
}
inline const ::aalyria::spacetime::api::common::GeodeticWgs84& ScenarioSettings_Pop::location() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location)
  return _internal_location();
}
inline void ScenarioSettings_Pop::unsafe_arena_set_allocated_location(
    ::aalyria::spacetime::api::common::GeodeticWgs84* location) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = location;
  if (location) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location)
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Pop::release_location() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Pop::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::aalyria::spacetime::api::common::GeodeticWgs84* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Pop::_internal_mutable_location() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.location_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::common::GeodeticWgs84>(GetArenaForAllocation());
    _impl_.location_ = p;
  }
  return _impl_.location_;
}
inline ::aalyria::spacetime::api::common::GeodeticWgs84* ScenarioSettings_Pop::mutable_location() {
  ::aalyria::spacetime::api::common::GeodeticWgs84* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location)
  return _msg;
}
inline void ScenarioSettings_Pop::set_allocated_location(::aalyria::spacetime::api::common::GeodeticWgs84* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location));
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.location_ = location;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location)
}

// optional double max_data_rate_bps = 3 [json_name = "maxDataRateBps"];
inline bool ScenarioSettings_Pop::has_max_data_rate_bps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ScenarioSettings_Pop::clear_max_data_rate_bps() {
  _impl_.max_data_rate_bps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double ScenarioSettings_Pop::max_data_rate_bps() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.max_data_rate_bps)
  return _internal_max_data_rate_bps();
}
inline void ScenarioSettings_Pop::set_max_data_rate_bps(double value) {
  _internal_set_max_data_rate_bps(value);
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.max_data_rate_bps)
}
inline double ScenarioSettings_Pop::_internal_max_data_rate_bps() const {
  return _impl_.max_data_rate_bps_;
}
inline void ScenarioSettings_Pop::_internal_set_max_data_rate_bps(double value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.max_data_rate_bps_ = value;
}

// -------------------------------------------------------------------

// ScenarioSettings_AirFleet_Aircraft

// optional string id = 1 [json_name = "id"];
inline bool ScenarioSettings_AirFleet_Aircraft::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_AirFleet_Aircraft::clear_id() {
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_AirFleet_Aircraft::id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_AirFleet_Aircraft::set_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.id)
}
inline std::string* ScenarioSettings_AirFleet_Aircraft::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.id)
  return _s;
}
inline const std::string& ScenarioSettings_AirFleet_Aircraft::_internal_id() const {
  return _impl_.id_.Get();
}
inline void ScenarioSettings_AirFleet_Aircraft::_internal_set_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AirFleet_Aircraft::_internal_mutable_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AirFleet_Aircraft::release_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_AirFleet_Aircraft::set_allocated_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.id)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel additional_transceiver_models = 2 [json_name = "additionalTransceiverModels"];
inline int ScenarioSettings_AirFleet_Aircraft::_internal_additional_transceiver_models_size() const {
  return _impl_.additional_transceiver_models_.size();
}
inline int ScenarioSettings_AirFleet_Aircraft::additional_transceiver_models_size() const {
  return _internal_additional_transceiver_models_size();
}
inline void ScenarioSettings_AirFleet_Aircraft::clear_additional_transceiver_models() {
  _internal_mutable_additional_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet_Aircraft::mutable_additional_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models)
  return _internal_mutable_additional_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_AirFleet_Aircraft::mutable_additional_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models)
  return _internal_mutable_additional_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_AirFleet_Aircraft::_internal_additional_transceiver_models(int index) const {
  return _internal_additional_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_AirFleet_Aircraft::additional_transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models)
  return _internal_additional_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet_Aircraft::_internal_add_additional_transceiver_models() {
  return _internal_mutable_additional_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet_Aircraft::add_additional_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_additional_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_AirFleet_Aircraft::additional_transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models)
  return _internal_additional_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_AirFleet_Aircraft::_internal_additional_transceiver_models() const {
  return _impl_.additional_transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_AirFleet_Aircraft::_internal_mutable_additional_transceiver_models() {
  return &_impl_.additional_transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface additional_wireless_interfaces = 3 [json_name = "additionalWirelessInterfaces"];
inline int ScenarioSettings_AirFleet_Aircraft::_internal_additional_wireless_interfaces_size() const {
  return _impl_.additional_wireless_interfaces_.size();
}
inline int ScenarioSettings_AirFleet_Aircraft::additional_wireless_interfaces_size() const {
  return _internal_additional_wireless_interfaces_size();
}
inline void ScenarioSettings_AirFleet_Aircraft::clear_additional_wireless_interfaces() {
  _internal_mutable_additional_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet_Aircraft::mutable_additional_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces)
  return _internal_mutable_additional_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_AirFleet_Aircraft::mutable_additional_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces)
  return _internal_mutable_additional_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_AirFleet_Aircraft::_internal_additional_wireless_interfaces(int index) const {
  return _internal_additional_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_AirFleet_Aircraft::additional_wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces)
  return _internal_additional_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet_Aircraft::_internal_add_additional_wireless_interfaces() {
  return _internal_mutable_additional_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet_Aircraft::add_additional_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_additional_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_AirFleet_Aircraft::additional_wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces)
  return _internal_additional_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_AirFleet_Aircraft::_internal_additional_wireless_interfaces() const {
  return _impl_.additional_wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_AirFleet_Aircraft::_internal_mutable_additional_wireless_interfaces() {
  return &_impl_.additional_wireless_interfaces_;
}

// -------------------------------------------------------------------

// ScenarioSettings_AirFleet

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft aircraft = 1 [json_name = "aircraft"];
inline int ScenarioSettings_AirFleet::_internal_aircraft_size() const {
  return _impl_.aircraft_.size();
}
inline int ScenarioSettings_AirFleet::aircraft_size() const {
  return _internal_aircraft_size();
}
inline void ScenarioSettings_AirFleet::clear_aircraft() {
  _internal_mutable_aircraft()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* ScenarioSettings_AirFleet::mutable_aircraft(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft)
  return _internal_mutable_aircraft()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft >*
ScenarioSettings_AirFleet::mutable_aircraft() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft)
  return _internal_mutable_aircraft();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft& ScenarioSettings_AirFleet::_internal_aircraft(int index) const {
  return _internal_aircraft().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft& ScenarioSettings_AirFleet::aircraft(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft)
  return _internal_aircraft(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* ScenarioSettings_AirFleet::_internal_add_aircraft() {
  return _internal_mutable_aircraft()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* ScenarioSettings_AirFleet::add_aircraft() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft* _add = _internal_add_aircraft();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft >&
ScenarioSettings_AirFleet::aircraft() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft)
  return _internal_aircraft();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft>&
ScenarioSettings_AirFleet::_internal_aircraft() const {
  return _impl_.aircraft_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet_Aircraft>*
ScenarioSettings_AirFleet::_internal_mutable_aircraft() {
  return &_impl_.aircraft_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 2 [json_name = "transceiverModels"];
inline int ScenarioSettings_AirFleet::_internal_transceiver_models_size() const {
  return _impl_.transceiver_models_.size();
}
inline int ScenarioSettings_AirFleet::transceiver_models_size() const {
  return _internal_transceiver_models_size();
}
inline void ScenarioSettings_AirFleet::clear_transceiver_models() {
  _internal_mutable_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet::mutable_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models)
  return _internal_mutable_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_AirFleet::mutable_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models)
  return _internal_mutable_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_AirFleet::_internal_transceiver_models(int index) const {
  return _internal_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_AirFleet::transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models)
  return _internal_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet::_internal_add_transceiver_models() {
  return _internal_mutable_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_AirFleet::add_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_AirFleet::transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models)
  return _internal_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_AirFleet::_internal_transceiver_models() const {
  return _impl_.transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_AirFleet::_internal_mutable_transceiver_models() {
  return &_impl_.transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 3 [json_name = "wirelessInterfaces"];
inline int ScenarioSettings_AirFleet::_internal_wireless_interfaces_size() const {
  return _impl_.wireless_interfaces_.size();
}
inline int ScenarioSettings_AirFleet::wireless_interfaces_size() const {
  return _internal_wireless_interfaces_size();
}
inline void ScenarioSettings_AirFleet::clear_wireless_interfaces() {
  _internal_mutable_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet::mutable_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces)
  return _internal_mutable_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_AirFleet::mutable_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces)
  return _internal_mutable_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_AirFleet::_internal_wireless_interfaces(int index) const {
  return _internal_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_AirFleet::wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces)
  return _internal_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet::_internal_add_wireless_interfaces() {
  return _internal_mutable_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_AirFleet::add_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_AirFleet::wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces)
  return _internal_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_AirFleet::_internal_wireless_interfaces() const {
  return _impl_.wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_AirFleet::_internal_mutable_wireless_interfaces() {
  return &_impl_.wireless_interfaces_;
}

// optional string pop_id = 4 [json_name = "popId"];
inline bool ScenarioSettings_AirFleet::has_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_AirFleet::clear_pop_id() {
  _impl_.pop_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_AirFleet::pop_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.pop_id)
  return _internal_pop_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_AirFleet::set_pop_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pop_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.pop_id)
}
inline std::string* ScenarioSettings_AirFleet::mutable_pop_id() {
  std::string* _s = _internal_mutable_pop_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.pop_id)
  return _s;
}
inline const std::string& ScenarioSettings_AirFleet::_internal_pop_id() const {
  return _impl_.pop_id_.Get();
}
inline void ScenarioSettings_AirFleet::_internal_set_pop_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.pop_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AirFleet::_internal_mutable_pop_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pop_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_AirFleet::release_pop_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.pop_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pop_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pop_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_AirFleet::set_allocated_pop_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pop_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pop_id_.IsDefault()) {
          _impl_.pop_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.pop_id)
}

// -------------------------------------------------------------------

// ScenarioSettings_ShipFleet_Ship

// optional string id = 1 [json_name = "id"];
inline bool ScenarioSettings_ShipFleet_Ship::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_ShipFleet_Ship::clear_id() {
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_ShipFleet_Ship::id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_ShipFleet_Ship::set_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.id)
}
inline std::string* ScenarioSettings_ShipFleet_Ship::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.id)
  return _s;
}
inline const std::string& ScenarioSettings_ShipFleet_Ship::_internal_id() const {
  return _impl_.id_.Get();
}
inline void ScenarioSettings_ShipFleet_Ship::_internal_set_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet_Ship::_internal_mutable_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet_Ship::release_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_ShipFleet_Ship::set_allocated_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.id)
}

// optional string name = 2 [json_name = "name"];
inline bool ScenarioSettings_ShipFleet_Ship::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ScenarioSettings_ShipFleet_Ship::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ScenarioSettings_ShipFleet_Ship::name() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_ShipFleet_Ship::set_name(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.name)
}
inline std::string* ScenarioSettings_ShipFleet_Ship::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.name)
  return _s;
}
inline const std::string& ScenarioSettings_ShipFleet_Ship::_internal_name() const {
  return _impl_.name_.Get();
}
inline void ScenarioSettings_ShipFleet_Ship::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;


  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet_Ship::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet_Ship::release_name() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_ShipFleet_Ship::set_allocated_name(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.name)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel additional_transceiver_models = 4 [json_name = "additionalTransceiverModels"];
inline int ScenarioSettings_ShipFleet_Ship::_internal_additional_transceiver_models_size() const {
  return _impl_.additional_transceiver_models_.size();
}
inline int ScenarioSettings_ShipFleet_Ship::additional_transceiver_models_size() const {
  return _internal_additional_transceiver_models_size();
}
inline void ScenarioSettings_ShipFleet_Ship::clear_additional_transceiver_models() {
  _internal_mutable_additional_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet_Ship::mutable_additional_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models)
  return _internal_mutable_additional_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_ShipFleet_Ship::mutable_additional_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models)
  return _internal_mutable_additional_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_ShipFleet_Ship::_internal_additional_transceiver_models(int index) const {
  return _internal_additional_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_ShipFleet_Ship::additional_transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models)
  return _internal_additional_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet_Ship::_internal_add_additional_transceiver_models() {
  return _internal_mutable_additional_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet_Ship::add_additional_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_additional_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_ShipFleet_Ship::additional_transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models)
  return _internal_additional_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_ShipFleet_Ship::_internal_additional_transceiver_models() const {
  return _impl_.additional_transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_ShipFleet_Ship::_internal_mutable_additional_transceiver_models() {
  return &_impl_.additional_transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface additional_wireless_interfaces = 5 [json_name = "additionalWirelessInterfaces"];
inline int ScenarioSettings_ShipFleet_Ship::_internal_additional_wireless_interfaces_size() const {
  return _impl_.additional_wireless_interfaces_.size();
}
inline int ScenarioSettings_ShipFleet_Ship::additional_wireless_interfaces_size() const {
  return _internal_additional_wireless_interfaces_size();
}
inline void ScenarioSettings_ShipFleet_Ship::clear_additional_wireless_interfaces() {
  _internal_mutable_additional_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet_Ship::mutable_additional_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces)
  return _internal_mutable_additional_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_ShipFleet_Ship::mutable_additional_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces)
  return _internal_mutable_additional_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_ShipFleet_Ship::_internal_additional_wireless_interfaces(int index) const {
  return _internal_additional_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_ShipFleet_Ship::additional_wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces)
  return _internal_additional_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet_Ship::_internal_add_additional_wireless_interfaces() {
  return _internal_mutable_additional_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet_Ship::add_additional_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_additional_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_ShipFleet_Ship::additional_wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces)
  return _internal_additional_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_ShipFleet_Ship::_internal_additional_wireless_interfaces() const {
  return _impl_.additional_wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_ShipFleet_Ship::_internal_mutable_additional_wireless_interfaces() {
  return &_impl_.additional_wireless_interfaces_;
}

// -------------------------------------------------------------------

// ScenarioSettings_ShipFleet

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship ship = 1 [json_name = "ship"];
inline int ScenarioSettings_ShipFleet::_internal_ship_size() const {
  return _impl_.ship_.size();
}
inline int ScenarioSettings_ShipFleet::ship_size() const {
  return _internal_ship_size();
}
inline void ScenarioSettings_ShipFleet::clear_ship() {
  _internal_mutable_ship()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* ScenarioSettings_ShipFleet::mutable_ship(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship)
  return _internal_mutable_ship()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship >*
ScenarioSettings_ShipFleet::mutable_ship() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship)
  return _internal_mutable_ship();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship& ScenarioSettings_ShipFleet::_internal_ship(int index) const {
  return _internal_ship().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship& ScenarioSettings_ShipFleet::ship(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship)
  return _internal_ship(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* ScenarioSettings_ShipFleet::_internal_add_ship() {
  return _internal_mutable_ship()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* ScenarioSettings_ShipFleet::add_ship() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship* _add = _internal_add_ship();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship >&
ScenarioSettings_ShipFleet::ship() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship)
  return _internal_ship();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship>&
ScenarioSettings_ShipFleet::_internal_ship() const {
  return _impl_.ship_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet_Ship>*
ScenarioSettings_ShipFleet::_internal_mutable_ship() {
  return &_impl_.ship_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel transceiver_models = 2 [json_name = "transceiverModels"];
inline int ScenarioSettings_ShipFleet::_internal_transceiver_models_size() const {
  return _impl_.transceiver_models_.size();
}
inline int ScenarioSettings_ShipFleet::transceiver_models_size() const {
  return _internal_transceiver_models_size();
}
inline void ScenarioSettings_ShipFleet::clear_transceiver_models() {
  _internal_mutable_transceiver_models()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet::mutable_transceiver_models(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models)
  return _internal_mutable_transceiver_models()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >*
ScenarioSettings_ShipFleet::mutable_transceiver_models() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models)
  return _internal_mutable_transceiver_models();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_ShipFleet::_internal_transceiver_models(int index) const {
  return _internal_transceiver_models().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel& ScenarioSettings_ShipFleet::transceiver_models(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models)
  return _internal_transceiver_models(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet::_internal_add_transceiver_models() {
  return _internal_mutable_transceiver_models()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* ScenarioSettings_ShipFleet::add_transceiver_models() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel* _add = _internal_add_transceiver_models();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel >&
ScenarioSettings_ShipFleet::transceiver_models() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models)
  return _internal_transceiver_models();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>&
ScenarioSettings_ShipFleet::_internal_transceiver_models() const {
  return _impl_.transceiver_models_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_TransceiverModel>*
ScenarioSettings_ShipFleet::_internal_mutable_transceiver_models() {
  return &_impl_.transceiver_models_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface wireless_interfaces = 3 [json_name = "wirelessInterfaces"];
inline int ScenarioSettings_ShipFleet::_internal_wireless_interfaces_size() const {
  return _impl_.wireless_interfaces_.size();
}
inline int ScenarioSettings_ShipFleet::wireless_interfaces_size() const {
  return _internal_wireless_interfaces_size();
}
inline void ScenarioSettings_ShipFleet::clear_wireless_interfaces() {
  _internal_mutable_wireless_interfaces()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet::mutable_wireless_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces)
  return _internal_mutable_wireless_interfaces()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >*
ScenarioSettings_ShipFleet::mutable_wireless_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces)
  return _internal_mutable_wireless_interfaces();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_ShipFleet::_internal_wireless_interfaces(int index) const {
  return _internal_wireless_interfaces().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface& ScenarioSettings_ShipFleet::wireless_interfaces(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces)
  return _internal_wireless_interfaces(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet::_internal_add_wireless_interfaces() {
  return _internal_mutable_wireless_interfaces()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* ScenarioSettings_ShipFleet::add_wireless_interfaces() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface* _add = _internal_add_wireless_interfaces();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface >&
ScenarioSettings_ShipFleet::wireless_interfaces() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces)
  return _internal_wireless_interfaces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>&
ScenarioSettings_ShipFleet::_internal_wireless_interfaces() const {
  return _impl_.wireless_interfaces_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_WirelessInterface>*
ScenarioSettings_ShipFleet::_internal_mutable_wireless_interfaces() {
  return &_impl_.wireless_interfaces_;
}

// optional string pop_id = 4 [json_name = "popId"];
inline bool ScenarioSettings_ShipFleet::has_pop_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ScenarioSettings_ShipFleet::clear_pop_id() {
  _impl_.pop_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ScenarioSettings_ShipFleet::pop_id() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.pop_id)
  return _internal_pop_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScenarioSettings_ShipFleet::set_pop_id(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pop_id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.pop_id)
}
inline std::string* ScenarioSettings_ShipFleet::mutable_pop_id() {
  std::string* _s = _internal_mutable_pop_id();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.pop_id)
  return _s;
}
inline const std::string& ScenarioSettings_ShipFleet::_internal_pop_id() const {
  return _impl_.pop_id_.Get();
}
inline void ScenarioSettings_ShipFleet::_internal_set_pop_id(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.pop_id_.Set(value, GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet::_internal_mutable_pop_id() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pop_id_.Mutable( GetArenaForAllocation());
}
inline std::string* ScenarioSettings_ShipFleet::release_pop_id() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.pop_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pop_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pop_id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ScenarioSettings_ShipFleet::set_allocated_pop_id(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pop_id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pop_id_.IsDefault()) {
          _impl_.pop_id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.pop_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScenarioSettings

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation constellation = 1 [json_name = "constellation"];
inline int ScenarioSettings::_internal_constellation_size() const {
  return _impl_.constellation_.size();
}
inline int ScenarioSettings::constellation_size() const {
  return _internal_constellation_size();
}
inline void ScenarioSettings::clear_constellation() {
  _internal_mutable_constellation()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* ScenarioSettings::mutable_constellation(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation)
  return _internal_mutable_constellation()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation >*
ScenarioSettings::mutable_constellation() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation)
  return _internal_mutable_constellation();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation& ScenarioSettings::_internal_constellation(int index) const {
  return _internal_constellation().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation& ScenarioSettings::constellation(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation)
  return _internal_constellation(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* ScenarioSettings::_internal_add_constellation() {
  return _internal_mutable_constellation()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* ScenarioSettings::add_constellation() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation* _add = _internal_add_constellation();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation >&
ScenarioSettings::constellation() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation)
  return _internal_constellation();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation>&
ScenarioSettings::_internal_constellation() const {
  return _impl_.constellation_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation>*
ScenarioSettings::_internal_mutable_constellation() {
  return &_impl_.constellation_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway gateways = 2 [json_name = "gateways"];
inline int ScenarioSettings::_internal_gateways_size() const {
  return _impl_.gateways_.size();
}
inline int ScenarioSettings::gateways_size() const {
  return _internal_gateways_size();
}
inline void ScenarioSettings::clear_gateways() {
  _internal_mutable_gateways()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* ScenarioSettings::mutable_gateways(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways)
  return _internal_mutable_gateways()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway >*
ScenarioSettings::mutable_gateways() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways)
  return _internal_mutable_gateways();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway& ScenarioSettings::_internal_gateways(int index) const {
  return _internal_gateways().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway& ScenarioSettings::gateways(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways)
  return _internal_gateways(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* ScenarioSettings::_internal_add_gateways() {
  return _internal_mutable_gateways()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* ScenarioSettings::add_gateways() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway* _add = _internal_add_gateways();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway >&
ScenarioSettings::gateways() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways)
  return _internal_gateways();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway>&
ScenarioSettings::_internal_gateways() const {
  return _impl_.gateways_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Gateway>*
ScenarioSettings::_internal_mutable_gateways() {
  return &_impl_.gateways_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition scenario_channel_definition = 3 [json_name = "scenarioChannelDefinition"];
inline int ScenarioSettings::_internal_scenario_channel_definition_size() const {
  return _impl_.scenario_channel_definition_.size();
}
inline int ScenarioSettings::scenario_channel_definition_size() const {
  return _internal_scenario_channel_definition_size();
}
inline void ScenarioSettings::clear_scenario_channel_definition() {
  _internal_mutable_scenario_channel_definition()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* ScenarioSettings::mutable_scenario_channel_definition(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition)
  return _internal_mutable_scenario_channel_definition()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition >*
ScenarioSettings::mutable_scenario_channel_definition() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition)
  return _internal_mutable_scenario_channel_definition();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition& ScenarioSettings::_internal_scenario_channel_definition(int index) const {
  return _internal_scenario_channel_definition().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition& ScenarioSettings::scenario_channel_definition(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition)
  return _internal_scenario_channel_definition(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* ScenarioSettings::_internal_add_scenario_channel_definition() {
  return _internal_mutable_scenario_channel_definition()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* ScenarioSettings::add_scenario_channel_definition() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition* _add = _internal_add_scenario_channel_definition();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition >&
ScenarioSettings::scenario_channel_definition() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition)
  return _internal_scenario_channel_definition();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition>&
ScenarioSettings::_internal_scenario_channel_definition() const {
  return _impl_.scenario_channel_definition_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ScenarioChannelDefinition>*
ScenarioSettings::_internal_mutable_scenario_channel_definition() {
  return &_impl_.scenario_channel_definition_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings antenna_pattern_settings = 4 [json_name = "antennaPatternSettings"];
inline int ScenarioSettings::_internal_antenna_pattern_settings_size() const {
  return _impl_.antenna_pattern_settings_.size();
}
inline int ScenarioSettings::antenna_pattern_settings_size() const {
  return _internal_antenna_pattern_settings_size();
}
inline void ScenarioSettings::clear_antenna_pattern_settings() {
  _internal_mutable_antenna_pattern_settings()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* ScenarioSettings::mutable_antenna_pattern_settings(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings)
  return _internal_mutable_antenna_pattern_settings()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings >*
ScenarioSettings::mutable_antenna_pattern_settings() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings)
  return _internal_mutable_antenna_pattern_settings();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings& ScenarioSettings::_internal_antenna_pattern_settings(int index) const {
  return _internal_antenna_pattern_settings().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings& ScenarioSettings::antenna_pattern_settings(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings)
  return _internal_antenna_pattern_settings(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* ScenarioSettings::_internal_add_antenna_pattern_settings() {
  return _internal_mutable_antenna_pattern_settings()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* ScenarioSettings::add_antenna_pattern_settings() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings* _add = _internal_add_antenna_pattern_settings();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings >&
ScenarioSettings::antenna_pattern_settings() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings)
  return _internal_antenna_pattern_settings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings>&
ScenarioSettings::_internal_antenna_pattern_settings() const {
  return _impl_.antenna_pattern_settings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AntennaPatternSettings>*
ScenarioSettings::_internal_mutable_antenna_pattern_settings() {
  return &_impl_.antenna_pattern_settings_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal user_terminal = 5 [json_name = "userTerminal"];
inline int ScenarioSettings::_internal_user_terminal_size() const {
  return _impl_.user_terminal_.size();
}
inline int ScenarioSettings::user_terminal_size() const {
  return _internal_user_terminal_size();
}
inline void ScenarioSettings::clear_user_terminal() {
  _internal_mutable_user_terminal()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* ScenarioSettings::mutable_user_terminal(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal)
  return _internal_mutable_user_terminal()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal >*
ScenarioSettings::mutable_user_terminal() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal)
  return _internal_mutable_user_terminal();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal& ScenarioSettings::_internal_user_terminal(int index) const {
  return _internal_user_terminal().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal& ScenarioSettings::user_terminal(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal)
  return _internal_user_terminal(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* ScenarioSettings::_internal_add_user_terminal() {
  return _internal_mutable_user_terminal()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* ScenarioSettings::add_user_terminal() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal* _add = _internal_add_user_terminal();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal >&
ScenarioSettings::user_terminal() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal)
  return _internal_user_terminal();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal>&
ScenarioSettings::_internal_user_terminal() const {
  return _impl_.user_terminal_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminal>*
ScenarioSettings::_internal_mutable_user_terminal() {
  return &_impl_.user_terminal_;
}

// optional .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings user_terminal_common_settings = 6 [json_name = "userTerminalCommonSettings"];
inline bool ScenarioSettings::has_user_terminal_common_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.user_terminal_common_settings_ != nullptr);
  return value;
}
inline void ScenarioSettings::clear_user_terminal_common_settings() {
  if (_impl_.user_terminal_common_settings_ != nullptr) _impl_.user_terminal_common_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings& ScenarioSettings::_internal_user_terminal_common_settings() const {
  const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* p = _impl_.user_terminal_common_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings&>(
      ::aalyria::spacetime::api::nbi::v1alpha::resources::_ScenarioSettings_UserTerminalCommonSettings_default_instance_);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings& ScenarioSettings::user_terminal_common_settings() const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings)
  return _internal_user_terminal_common_settings();
}
inline void ScenarioSettings::unsafe_arena_set_allocated_user_terminal_common_settings(
    ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* user_terminal_common_settings) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.user_terminal_common_settings_);
  }
  _impl_.user_terminal_common_settings_ = user_terminal_common_settings;
  if (user_terminal_common_settings) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings)
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* ScenarioSettings::release_user_terminal_common_settings() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* temp = _impl_.user_terminal_common_settings_;
  _impl_.user_terminal_common_settings_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* ScenarioSettings::unsafe_arena_release_user_terminal_common_settings() {
  // @@protoc_insertion_point(field_release:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* temp = _impl_.user_terminal_common_settings_;
  _impl_.user_terminal_common_settings_ = nullptr;
  return temp;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* ScenarioSettings::_internal_mutable_user_terminal_common_settings() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.user_terminal_common_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings>(GetArenaForAllocation());
    _impl_.user_terminal_common_settings_ = p;
  }
  return _impl_.user_terminal_common_settings_;
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* ScenarioSettings::mutable_user_terminal_common_settings() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* _msg = _internal_mutable_user_terminal_common_settings();
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings)
  return _msg;
}
inline void ScenarioSettings::set_allocated_user_terminal_common_settings(::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_UserTerminalCommonSettings* user_terminal_common_settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.user_terminal_common_settings_;
  }
  if (user_terminal_common_settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(user_terminal_common_settings);
    if (message_arena != submessage_arena) {
      user_terminal_common_settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_terminal_common_settings, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.user_terminal_common_settings_ = user_terminal_common_settings;
  // @@protoc_insertion_point(field_set_allocated:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings)
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop pop = 7 [json_name = "pop"];
inline int ScenarioSettings::_internal_pop_size() const {
  return _impl_.pop_.size();
}
inline int ScenarioSettings::pop_size() const {
  return _internal_pop_size();
}
inline void ScenarioSettings::clear_pop() {
  _internal_mutable_pop()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* ScenarioSettings::mutable_pop(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop)
  return _internal_mutable_pop()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop >*
ScenarioSettings::mutable_pop() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop)
  return _internal_mutable_pop();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop& ScenarioSettings::_internal_pop(int index) const {
  return _internal_pop().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop& ScenarioSettings::pop(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop)
  return _internal_pop(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* ScenarioSettings::_internal_add_pop() {
  return _internal_mutable_pop()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* ScenarioSettings::add_pop() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop* _add = _internal_add_pop();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop >&
ScenarioSettings::pop() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop)
  return _internal_pop();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop>&
ScenarioSettings::_internal_pop() const {
  return _impl_.pop_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Pop>*
ScenarioSettings::_internal_mutable_pop() {
  return &_impl_.pop_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet airfleets = 8 [json_name = "airfleets"];
inline int ScenarioSettings::_internal_airfleets_size() const {
  return _impl_.airfleets_.size();
}
inline int ScenarioSettings::airfleets_size() const {
  return _internal_airfleets_size();
}
inline void ScenarioSettings::clear_airfleets() {
  _internal_mutable_airfleets()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* ScenarioSettings::mutable_airfleets(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets)
  return _internal_mutable_airfleets()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet >*
ScenarioSettings::mutable_airfleets() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets)
  return _internal_mutable_airfleets();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet& ScenarioSettings::_internal_airfleets(int index) const {
  return _internal_airfleets().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet& ScenarioSettings::airfleets(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets)
  return _internal_airfleets(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* ScenarioSettings::_internal_add_airfleets() {
  return _internal_mutable_airfleets()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* ScenarioSettings::add_airfleets() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet* _add = _internal_add_airfleets();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet >&
ScenarioSettings::airfleets() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets)
  return _internal_airfleets();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet>&
ScenarioSettings::_internal_airfleets() const {
  return _impl_.airfleets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_AirFleet>*
ScenarioSettings::_internal_mutable_airfleets() {
  return &_impl_.airfleets_;
}

// repeated .aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet shipfleets = 9 [json_name = "shipfleets"];
inline int ScenarioSettings::_internal_shipfleets_size() const {
  return _impl_.shipfleets_.size();
}
inline int ScenarioSettings::shipfleets_size() const {
  return _internal_shipfleets_size();
}
inline void ScenarioSettings::clear_shipfleets() {
  _internal_mutable_shipfleets()->Clear();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* ScenarioSettings::mutable_shipfleets(int index) {
  // @@protoc_insertion_point(field_mutable:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets)
  return _internal_mutable_shipfleets()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet >*
ScenarioSettings::mutable_shipfleets() {
  // @@protoc_insertion_point(field_mutable_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets)
  return _internal_mutable_shipfleets();
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet& ScenarioSettings::_internal_shipfleets(int index) const {
  return _internal_shipfleets().Get(index);
}
inline const ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet& ScenarioSettings::shipfleets(int index) const {
  // @@protoc_insertion_point(field_get:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets)
  return _internal_shipfleets(index);
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* ScenarioSettings::_internal_add_shipfleets() {
  return _internal_mutable_shipfleets()->Add();
}
inline ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* ScenarioSettings::add_shipfleets() {
  ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet* _add = _internal_add_shipfleets();
  // @@protoc_insertion_point(field_add:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet >&
ScenarioSettings::shipfleets() const {
  // @@protoc_insertion_point(field_list:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets)
  return _internal_shipfleets();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet>&
ScenarioSettings::_internal_shipfleets() const {
  return _impl_.shipfleets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_ShipFleet>*
ScenarioSettings::_internal_mutable_shipfleets() {
  return &_impl_.shipfleets_;
}

// map<string, string> gateway_to_permitted_pops = 10 [json_name = "gatewayToPermittedPops"];
inline int ScenarioSettings::_internal_gateway_to_permitted_pops_size() const {
  return _impl_.gateway_to_permitted_pops_.size();
}
inline int ScenarioSettings::gateway_to_permitted_pops_size() const {
  return _internal_gateway_to_permitted_pops_size();
}
inline void ScenarioSettings::clear_gateway_to_permitted_pops() {
  _impl_.gateway_to_permitted_pops_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ScenarioSettings::_internal_gateway_to_permitted_pops() const {
  return _impl_.gateway_to_permitted_pops_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ScenarioSettings::gateway_to_permitted_pops() const {
  // @@protoc_insertion_point(field_map:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateway_to_permitted_pops)
  return _internal_gateway_to_permitted_pops();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ScenarioSettings::_internal_mutable_gateway_to_permitted_pops() {
  return _impl_.gateway_to_permitted_pops_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ScenarioSettings::mutable_gateway_to_permitted_pops() {
  // @@protoc_insertion_point(field_mutable_map:aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateway_to_permitted_pops)
  return _internal_mutable_gateway_to_permitted_pops();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace v1alpha
}  // namespace nbi
}  // namespace api
}  // namespace spacetime
}  // namespace aalyria


PROTOBUF_NAMESPACE_OPEN

template <>
struct is_proto_enum<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern>() {
  return ::aalyria::spacetime::api::nbi::v1alpha::resources::ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fnbi_2fv1alpha_2fresources_2fscenario_5fsettings_2eproto_2epb_2eh
