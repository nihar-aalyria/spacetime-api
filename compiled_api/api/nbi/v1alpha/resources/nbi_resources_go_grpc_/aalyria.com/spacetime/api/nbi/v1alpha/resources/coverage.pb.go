// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/resources/coverage.proto

package resources

import (
	common "aalyria.com/spacetime/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransceiverSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransceiverIds []*common.TransceiverModelId `protobuf:"bytes,1,rep,name=transceiver_ids,json=transceiverIds" json:"transceiver_ids,omitempty"`
}

func (x *TransceiverSet) Reset() {
	*x = TransceiverSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransceiverSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransceiverSet) ProtoMessage() {}

func (x *TransceiverSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransceiverSet.ProtoReflect.Descriptor instead.
func (*TransceiverSet) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{0}
}

func (x *TransceiverSet) GetTransceiverIds() []*common.TransceiverModelId {
	if x != nil {
		return x.TransceiverIds
	}
	return nil
}

type PlatformSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformIds []string `protobuf:"bytes,1,rep,name=platform_ids,json=platformIds" json:"platform_ids,omitempty"`
}

func (x *PlatformSet) Reset() {
	*x = PlatformSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformSet) ProtoMessage() {}

func (x *PlatformSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformSet.ProtoReflect.Descriptor instead.
func (*PlatformSet) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{1}
}

func (x *PlatformSet) GetPlatformIds() []string {
	if x != nil {
		return x.PlatformIds
	}
	return nil
}

type StationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StationSetType:
	//
	//	*StationSet_Transceivers
	//	*StationSet_Platforms
	StationSetType isStationSet_StationSetType `protobuf_oneof:"station_set_type"`
}

func (x *StationSet) Reset() {
	*x = StationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationSet) ProtoMessage() {}

func (x *StationSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationSet.ProtoReflect.Descriptor instead.
func (*StationSet) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{2}
}

func (m *StationSet) GetStationSetType() isStationSet_StationSetType {
	if m != nil {
		return m.StationSetType
	}
	return nil
}

func (x *StationSet) GetTransceivers() *TransceiverSet {
	if x, ok := x.GetStationSetType().(*StationSet_Transceivers); ok {
		return x.Transceivers
	}
	return nil
}

func (x *StationSet) GetPlatforms() *PlatformSet {
	if x, ok := x.GetStationSetType().(*StationSet_Platforms); ok {
		return x.Platforms
	}
	return nil
}

type isStationSet_StationSetType interface {
	isStationSet_StationSetType()
}

type StationSet_Transceivers struct {
	Transceivers *TransceiverSet `protobuf:"bytes,1,opt,name=transceivers,oneof"`
}

type StationSet_Platforms struct {
	Platforms *PlatformSet `protobuf:"bytes,2,opt,name=platforms,oneof"`
}

func (*StationSet_Transceivers) isStationSet_StationSetType() {}

func (*StationSet_Platforms) isStationSet_StationSetType() {}

type StationSubset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationSetId *string `protobuf:"bytes,1,opt,name=station_set_id,json=stationSetId" json:"station_set_id,omitempty"`
	RegionId     *string `protobuf:"bytes,2,opt,name=region_id,json=regionId" json:"region_id,omitempty"`
}

func (x *StationSubset) Reset() {
	*x = StationSubset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationSubset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationSubset) ProtoMessage() {}

func (x *StationSubset) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationSubset.ProtoReflect.Descriptor instead.
func (*StationSubset) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{3}
}

func (x *StationSubset) GetStationSetId() string {
	if x != nil && x.StationSetId != nil {
		return *x.StationSetId
	}
	return ""
}

func (x *StationSubset) GetRegionId() string {
	if x != nil && x.RegionId != nil {
		return *x.RegionId
	}
	return ""
}

type CoordinateArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Derivation:
	//
	//	*CoordinateArray_Surface
	//	*CoordinateArray_GeoArc
	//	*CoordinateArray_Stations
	Derivation isCoordinateArray_Derivation `protobuf_oneof:"derivation"`
}

func (x *CoordinateArray) Reset() {
	*x = CoordinateArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinateArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinateArray) ProtoMessage() {}

func (x *CoordinateArray) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinateArray.ProtoReflect.Descriptor instead.
func (*CoordinateArray) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{4}
}

func (m *CoordinateArray) GetDerivation() isCoordinateArray_Derivation {
	if m != nil {
		return m.Derivation
	}
	return nil
}

func (x *CoordinateArray) GetSurface() *S2CoverageGrid {
	if x, ok := x.GetDerivation().(*CoordinateArray_Surface); ok {
		return x.Surface
	}
	return nil
}

func (x *CoordinateArray) GetGeoArc() *GeostationaryArc {
	if x, ok := x.GetDerivation().(*CoordinateArray_GeoArc); ok {
		return x.GeoArc
	}
	return nil
}

func (x *CoordinateArray) GetStations() *StationSubset {
	if x, ok := x.GetDerivation().(*CoordinateArray_Stations); ok {
		return x.Stations
	}
	return nil
}

type isCoordinateArray_Derivation interface {
	isCoordinateArray_Derivation()
}

type CoordinateArray_Surface struct {
	Surface *S2CoverageGrid `protobuf:"bytes,1,opt,name=surface,oneof"`
}

type CoordinateArray_GeoArc struct {
	GeoArc *GeostationaryArc `protobuf:"bytes,2,opt,name=geo_arc,json=geoArc,oneof"`
}

type CoordinateArray_Stations struct {
	Stations *StationSubset `protobuf:"bytes,3,opt,name=stations,oneof"`
}

func (*CoordinateArray_Surface) isCoordinateArray_Derivation() {}

func (*CoordinateArray_GeoArc) isCoordinateArray_Derivation() {}

func (*CoordinateArray_Stations) isCoordinateArray_Derivation() {}

type SignalPowerCoverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*SignalPowerCoverage_Surface
	//	*SignalPowerCoverage_GeoArc
	//	*SignalPowerCoverage_Constellation
	Type isSignalPowerCoverage_Type `protobuf_oneof:"type"`
}

func (x *SignalPowerCoverage) Reset() {
	*x = SignalPowerCoverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalPowerCoverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalPowerCoverage) ProtoMessage() {}

func (x *SignalPowerCoverage) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalPowerCoverage.ProtoReflect.Descriptor instead.
func (*SignalPowerCoverage) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{5}
}

func (m *SignalPowerCoverage) GetType() isSignalPowerCoverage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SignalPowerCoverage) GetSurface() *SurfacePfdRegions {
	if x, ok := x.GetType().(*SignalPowerCoverage_Surface); ok {
		return x.Surface
	}
	return nil
}

func (x *SignalPowerCoverage) GetGeoArc() *GeostationaryArcPfd {
	if x, ok := x.GetType().(*SignalPowerCoverage_GeoArc); ok {
		return x.GeoArc
	}
	return nil
}

func (x *SignalPowerCoverage) GetConstellation() *PfdOverConstellation {
	if x, ok := x.GetType().(*SignalPowerCoverage_Constellation); ok {
		return x.Constellation
	}
	return nil
}

type isSignalPowerCoverage_Type interface {
	isSignalPowerCoverage_Type()
}

type SignalPowerCoverage_Surface struct {
	Surface *SurfacePfdRegions `protobuf:"bytes,1,opt,name=surface,oneof"`
}

type SignalPowerCoverage_GeoArc struct {
	GeoArc *GeostationaryArcPfd `protobuf:"bytes,2,opt,name=geo_arc,json=geoArc,oneof"`
}

type SignalPowerCoverage_Constellation struct {
	Constellation *PfdOverConstellation `protobuf:"bytes,3,opt,name=constellation,oneof"`
}

func (*SignalPowerCoverage_Surface) isSignalPowerCoverage_Type() {}

func (*SignalPowerCoverage_GeoArc) isSignalPowerCoverage_Type() {}

func (*SignalPowerCoverage_Constellation) isSignalPowerCoverage_Type() {}

type GeoJsonRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	EncodedGeoBuffer [][]byte `protobuf:"bytes,2,rep,name=encoded_geo_buffer,json=encodedGeoBuffer" json:"encoded_geo_buffer,omitempty"`
}

func (x *GeoJsonRegion) Reset() {
	*x = GeoJsonRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoJsonRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoJsonRegion) ProtoMessage() {}

func (x *GeoJsonRegion) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoJsonRegion.ProtoReflect.Descriptor instead.
func (*GeoJsonRegion) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{6}
}

func (x *GeoJsonRegion) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GeoJsonRegion) GetEncodedGeoBuffer() [][]byte {
	if x != nil {
		return x.EncodedGeoBuffer
	}
	return nil
}

type SurfaceRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S2CellIds []int64 `protobuf:"varint,1,rep,name=s2_cell_ids,json=s2CellIds" json:"s2_cell_ids,omitempty"`
	Name      *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *SurfaceRegion) Reset() {
	*x = SurfaceRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurfaceRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfaceRegion) ProtoMessage() {}

func (x *SurfaceRegion) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfaceRegion.ProtoReflect.Descriptor instead.
func (*SurfaceRegion) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{7}
}

func (x *SurfaceRegion) GetS2CellIds() []int64 {
	if x != nil {
		return x.S2CellIds
	}
	return nil
}

func (x *SurfaceRegion) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type S2CoverageGrid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RegionDescription:
	//
	//	*S2CoverageGrid_Region
	//	*S2CoverageGrid_RegionId
	RegionDescription isS2CoverageGrid_RegionDescription `protobuf_oneof:"region_description"`
	S2Level           *uint32                            `protobuf:"varint,2,opt,name=s2_level,json=s2Level,def=6" json:"s2_level,omitempty"`
}

// Default values for S2CoverageGrid fields.
const (
	Default_S2CoverageGrid_S2Level = uint32(6)
)

func (x *S2CoverageGrid) Reset() {
	*x = S2CoverageGrid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CoverageGrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CoverageGrid) ProtoMessage() {}

func (x *S2CoverageGrid) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CoverageGrid.ProtoReflect.Descriptor instead.
func (*S2CoverageGrid) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{8}
}

func (m *S2CoverageGrid) GetRegionDescription() isS2CoverageGrid_RegionDescription {
	if m != nil {
		return m.RegionDescription
	}
	return nil
}

func (x *S2CoverageGrid) GetRegion() *common.S2Cells {
	if x, ok := x.GetRegionDescription().(*S2CoverageGrid_Region); ok {
		return x.Region
	}
	return nil
}

func (x *S2CoverageGrid) GetRegionId() string {
	if x, ok := x.GetRegionDescription().(*S2CoverageGrid_RegionId); ok {
		return x.RegionId
	}
	return ""
}

func (x *S2CoverageGrid) GetS2Level() uint32 {
	if x != nil && x.S2Level != nil {
		return *x.S2Level
	}
	return Default_S2CoverageGrid_S2Level
}

type isS2CoverageGrid_RegionDescription interface {
	isS2CoverageGrid_RegionDescription()
}

type S2CoverageGrid_Region struct {
	Region *common.S2Cells `protobuf:"bytes,1,opt,name=region,oneof"`
}

type S2CoverageGrid_RegionId struct {
	RegionId string `protobuf:"bytes,3,opt,name=region_id,json=regionId,oneof"`
}

func (*S2CoverageGrid_Region) isS2CoverageGrid_RegionDescription() {}

func (*S2CoverageGrid_RegionId) isS2CoverageGrid_RegionDescription() {}

type PfdOverS2Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region                           *common.S2Cells `protobuf:"bytes,1,opt,name=region" json:"region,omitempty"`
	ReceivedPowerFluxDensityDbWPerM2 *float64        `protobuf:"fixed64,2,opt,name=received_power_flux_density_db_w_per_m2,json=receivedPowerFluxDensityDbWPerM2" json:"received_power_flux_density_db_w_per_m2,omitempty"`
}

func (x *PfdOverS2Region) Reset() {
	*x = PfdOverS2Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PfdOverS2Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PfdOverS2Region) ProtoMessage() {}

func (x *PfdOverS2Region) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PfdOverS2Region.ProtoReflect.Descriptor instead.
func (*PfdOverS2Region) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{9}
}

func (x *PfdOverS2Region) GetRegion() *common.S2Cells {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *PfdOverS2Region) GetReceivedPowerFluxDensityDbWPerM2() float64 {
	if x != nil && x.ReceivedPowerFluxDensityDbWPerM2 != nil {
		return *x.ReceivedPowerFluxDensityDbWPerM2
	}
	return 0
}

type SurfacePfdRegions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PfdRegion []*PfdOverS2Region `protobuf:"bytes,1,rep,name=pfd_region,json=pfdRegion" json:"pfd_region,omitempty"`
}

func (x *SurfacePfdRegions) Reset() {
	*x = SurfacePfdRegions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurfacePfdRegions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfacePfdRegions) ProtoMessage() {}

func (x *SurfacePfdRegions) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfacePfdRegions.ProtoReflect.Descriptor instead.
func (*SurfacePfdRegions) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{10}
}

func (x *SurfacePfdRegions) GetPfdRegion() []*PfdOverS2Region {
	if x != nil {
		return x.PfdRegion
	}
	return nil
}

type GeostationaryArc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatitudeBoundDeg *float64 `protobuf:"fixed64,1,opt,name=latitude_bound_deg,json=latitudeBoundDeg" json:"latitude_bound_deg,omitempty"`
	ResolutionDeg    *float64 `protobuf:"fixed64,2,opt,name=resolution_deg,json=resolutionDeg" json:"resolution_deg,omitempty"`
}

func (x *GeostationaryArc) Reset() {
	*x = GeostationaryArc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeostationaryArc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeostationaryArc) ProtoMessage() {}

func (x *GeostationaryArc) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeostationaryArc.ProtoReflect.Descriptor instead.
func (*GeostationaryArc) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{11}
}

func (x *GeostationaryArc) GetLatitudeBoundDeg() float64 {
	if x != nil && x.LatitudeBoundDeg != nil {
		return *x.LatitudeBoundDeg
	}
	return 0
}

func (x *GeostationaryArc) GetResolutionDeg() float64 {
	if x != nil && x.ResolutionDeg != nil {
		return *x.ResolutionDeg
	}
	return 0
}

type PfdOverGeoArcCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongitudeDeg                     *float64 `protobuf:"fixed64,1,opt,name=longitude_deg,json=longitudeDeg" json:"longitude_deg,omitempty"`
	LatitudeDeg                      *float64 `protobuf:"fixed64,2,opt,name=latitude_deg,json=latitudeDeg" json:"latitude_deg,omitempty"`
	ReceivedPowerFluxDensityDbWPerM2 *float64 `protobuf:"fixed64,3,opt,name=received_power_flux_density_db_w_per_m2,json=receivedPowerFluxDensityDbWPerM2" json:"received_power_flux_density_db_w_per_m2,omitempty"`
}

func (x *PfdOverGeoArcCell) Reset() {
	*x = PfdOverGeoArcCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PfdOverGeoArcCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PfdOverGeoArcCell) ProtoMessage() {}

func (x *PfdOverGeoArcCell) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PfdOverGeoArcCell.ProtoReflect.Descriptor instead.
func (*PfdOverGeoArcCell) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{12}
}

func (x *PfdOverGeoArcCell) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *PfdOverGeoArcCell) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *PfdOverGeoArcCell) GetReceivedPowerFluxDensityDbWPerM2() float64 {
	if x != nil && x.ReceivedPowerFluxDensityDbWPerM2 != nil {
		return *x.ReceivedPowerFluxDensityDbWPerM2
	}
	return 0
}

type GeostationaryArcPfd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cell []*PfdOverGeoArcCell `protobuf:"bytes,1,rep,name=cell" json:"cell,omitempty"`
}

func (x *GeostationaryArcPfd) Reset() {
	*x = GeostationaryArcPfd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeostationaryArcPfd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeostationaryArcPfd) ProtoMessage() {}

func (x *GeostationaryArcPfd) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeostationaryArcPfd.ProtoReflect.Descriptor instead.
func (*GeostationaryArcPfd) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{13}
}

func (x *GeostationaryArcPfd) GetCell() []*PfdOverGeoArcCell {
	if x != nil {
		return x.Cell
	}
	return nil
}

type PfdAtAntenna struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransceiverModelId               *common.TransceiverModelId `protobuf:"bytes,3,opt,name=transceiver_model_id,json=transceiverModelId" json:"transceiver_model_id,omitempty"`
	ReceivedPowerFluxDensityDbWPerM2 *float64                   `protobuf:"fixed64,2,opt,name=received_power_flux_density_db_w_per_m2,json=receivedPowerFluxDensityDbWPerM2" json:"received_power_flux_density_db_w_per_m2,omitempty"`
}

func (x *PfdAtAntenna) Reset() {
	*x = PfdAtAntenna{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PfdAtAntenna) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PfdAtAntenna) ProtoMessage() {}

func (x *PfdAtAntenna) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PfdAtAntenna.ProtoReflect.Descriptor instead.
func (*PfdAtAntenna) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{14}
}

func (x *PfdAtAntenna) GetTransceiverModelId() *common.TransceiverModelId {
	if x != nil {
		return x.TransceiverModelId
	}
	return nil
}

func (x *PfdAtAntenna) GetReceivedPowerFluxDensityDbWPerM2() float64 {
	if x != nil && x.ReceivedPowerFluxDensityDbWPerM2 != nil {
		return *x.ReceivedPowerFluxDensityDbWPerM2
	}
	return 0
}

type PfdOverConstellation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Victim []*PfdAtAntenna `protobuf:"bytes,1,rep,name=victim" json:"victim,omitempty"`
}

func (x *PfdOverConstellation) Reset() {
	*x = PfdOverConstellation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PfdOverConstellation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PfdOverConstellation) ProtoMessage() {}

func (x *PfdOverConstellation) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PfdOverConstellation.ProtoReflect.Descriptor instead.
func (*PfdOverConstellation) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP(), []int{15}
}

func (x *PfdOverConstellation) GetVictim() []*PfdAtAntenna {
	if x != nil {
		return x.Victim
	}
	return nil
}

var File_api_nbi_v1alpha_resources_coverage_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_resources_coverage_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x59,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x61, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xac, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x12, 0x57, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x32, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x69,
	0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x07,
	0x67, 0x65, 0x6f, 0x5f, 0x61, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x63, 0x48, 0x00, 0x52, 0x06,
	0x67, 0x65, 0x6f, 0x41, 0x72, 0x63, 0x12, 0x58, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x62, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1,
	0x02, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x66, 0x64,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x07, 0x67, 0x65, 0x6f, 0x5f, 0x61, 0x72, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x41,
	0x72, 0x63, 0x50, 0x66, 0x64, 0x48, 0x00, 0x52, 0x06, 0x67, 0x65, 0x6f, 0x41, 0x72, 0x63, 0x12,
	0x69, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x5f, 0x67, 0x65, 0x6f, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x47, 0x65, 0x6f, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x0d, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x32, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x32, 0x43,
	0x65, 0x6c, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x53,
	0x32, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x69, 0x64, 0x12, 0x3f, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x32, 0x43,
	0x65, 0x6c, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x08, 0x73, 0x32, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x36, 0x52, 0x07, 0x73, 0x32, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x50, 0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x32, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x27, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x78, 0x5f, 0x64, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x62, 0x5f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x78, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44,
	0x62, 0x57, 0x50, 0x65, 0x72, 0x4d, 0x32, 0x22, 0x70, 0x0a, 0x11, 0x53, 0x75, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x50, 0x66, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5b, 0x0a, 0x0a,
	0x70, 0x66, 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x32, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x70, 0x66, 0x64, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x63, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x50, 0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x47, 0x65,
	0x6f, 0x41, 0x72, 0x63, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67,
	0x12, 0x51, 0x0a, 0x27, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x78, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x62, 0x5f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x46, 0x6c, 0x75, 0x78, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44, 0x62, 0x57, 0x50, 0x65,
	0x72, 0x4d, 0x32, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x65, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x63, 0x50, 0x66, 0x64, 0x12, 0x52, 0x0a, 0x04, 0x63, 0x65,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x47, 0x65,
	0x6f, 0x41, 0x72, 0x63, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x22, 0xcb,
	0x01, 0x0a, 0x0c, 0x50, 0x66, 0x64, 0x41, 0x74, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12,
	0x62, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x52,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x27, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x78, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x5f, 0x64, 0x62, 0x5f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x78, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44, 0x62,
	0x57, 0x50, 0x65, 0x72, 0x4d, 0x32, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x69, 0x0a, 0x14,
	0x50, 0x66, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x06, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x66, 0x64, 0x41, 0x74, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x52,
	0x06, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x42, 0x62, 0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5a, 0x2f, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
}

var (
	file_api_nbi_v1alpha_resources_coverage_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_resources_coverage_proto_rawDescData = file_api_nbi_v1alpha_resources_coverage_proto_rawDesc
)

func file_api_nbi_v1alpha_resources_coverage_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_resources_coverage_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_resources_coverage_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_resources_coverage_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_resources_coverage_proto_rawDescData
}

var file_api_nbi_v1alpha_resources_coverage_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_nbi_v1alpha_resources_coverage_proto_goTypes = []interface{}{
	(*TransceiverSet)(nil),            // 0: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverSet
	(*PlatformSet)(nil),               // 1: aalyria.spacetime.api.nbi.v1alpha.resources.PlatformSet
	(*StationSet)(nil),                // 2: aalyria.spacetime.api.nbi.v1alpha.resources.StationSet
	(*StationSubset)(nil),             // 3: aalyria.spacetime.api.nbi.v1alpha.resources.StationSubset
	(*CoordinateArray)(nil),           // 4: aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray
	(*SignalPowerCoverage)(nil),       // 5: aalyria.spacetime.api.nbi.v1alpha.resources.SignalPowerCoverage
	(*GeoJsonRegion)(nil),             // 6: aalyria.spacetime.api.nbi.v1alpha.resources.GeoJsonRegion
	(*SurfaceRegion)(nil),             // 7: aalyria.spacetime.api.nbi.v1alpha.resources.SurfaceRegion
	(*S2CoverageGrid)(nil),            // 8: aalyria.spacetime.api.nbi.v1alpha.resources.S2CoverageGrid
	(*PfdOverS2Region)(nil),           // 9: aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverS2Region
	(*SurfacePfdRegions)(nil),         // 10: aalyria.spacetime.api.nbi.v1alpha.resources.SurfacePfdRegions
	(*GeostationaryArc)(nil),          // 11: aalyria.spacetime.api.nbi.v1alpha.resources.GeostationaryArc
	(*PfdOverGeoArcCell)(nil),         // 12: aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverGeoArcCell
	(*GeostationaryArcPfd)(nil),       // 13: aalyria.spacetime.api.nbi.v1alpha.resources.GeostationaryArcPfd
	(*PfdAtAntenna)(nil),              // 14: aalyria.spacetime.api.nbi.v1alpha.resources.PfdAtAntenna
	(*PfdOverConstellation)(nil),      // 15: aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverConstellation
	(*common.TransceiverModelId)(nil), // 16: aalyria.spacetime.api.common.TransceiverModelId
	(*common.S2Cells)(nil),            // 17: aalyria.spacetime.api.common.S2Cells
}
var file_api_nbi_v1alpha_resources_coverage_proto_depIdxs = []int32{
	16, // 0: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverSet.transceiver_ids:type_name -> aalyria.spacetime.api.common.TransceiverModelId
	0,  // 1: aalyria.spacetime.api.nbi.v1alpha.resources.StationSet.transceivers:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverSet
	1,  // 2: aalyria.spacetime.api.nbi.v1alpha.resources.StationSet.platforms:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.PlatformSet
	8,  // 3: aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray.surface:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.S2CoverageGrid
	11, // 4: aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray.geo_arc:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.GeostationaryArc
	3,  // 5: aalyria.spacetime.api.nbi.v1alpha.resources.CoordinateArray.stations:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.StationSubset
	10, // 6: aalyria.spacetime.api.nbi.v1alpha.resources.SignalPowerCoverage.surface:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.SurfacePfdRegions
	13, // 7: aalyria.spacetime.api.nbi.v1alpha.resources.SignalPowerCoverage.geo_arc:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.GeostationaryArcPfd
	15, // 8: aalyria.spacetime.api.nbi.v1alpha.resources.SignalPowerCoverage.constellation:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverConstellation
	17, // 9: aalyria.spacetime.api.nbi.v1alpha.resources.S2CoverageGrid.region:type_name -> aalyria.spacetime.api.common.S2Cells
	17, // 10: aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverS2Region.region:type_name -> aalyria.spacetime.api.common.S2Cells
	9,  // 11: aalyria.spacetime.api.nbi.v1alpha.resources.SurfacePfdRegions.pfd_region:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverS2Region
	12, // 12: aalyria.spacetime.api.nbi.v1alpha.resources.GeostationaryArcPfd.cell:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverGeoArcCell
	16, // 13: aalyria.spacetime.api.nbi.v1alpha.resources.PfdAtAntenna.transceiver_model_id:type_name -> aalyria.spacetime.api.common.TransceiverModelId
	14, // 14: aalyria.spacetime.api.nbi.v1alpha.resources.PfdOverConstellation.victim:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.PfdAtAntenna
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_resources_coverage_proto_init() }
func file_api_nbi_v1alpha_resources_coverage_proto_init() {
	if File_api_nbi_v1alpha_resources_coverage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransceiverSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationSubset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinateArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalPowerCoverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoJsonRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurfaceRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CoverageGrid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PfdOverS2Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurfacePfdRegions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeostationaryArc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PfdOverGeoArcCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeostationaryArcPfd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PfdAtAntenna); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PfdOverConstellation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StationSet_Transceivers)(nil),
		(*StationSet_Platforms)(nil),
	}
	file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CoordinateArray_Surface)(nil),
		(*CoordinateArray_GeoArc)(nil),
		(*CoordinateArray_Stations)(nil),
	}
	file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SignalPowerCoverage_Surface)(nil),
		(*SignalPowerCoverage_GeoArc)(nil),
		(*SignalPowerCoverage_Constellation)(nil),
	}
	file_api_nbi_v1alpha_resources_coverage_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*S2CoverageGrid_Region)(nil),
		(*S2CoverageGrid_RegionId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_resources_coverage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_nbi_v1alpha_resources_coverage_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_resources_coverage_proto_depIdxs,
		MessageInfos:      file_api_nbi_v1alpha_resources_coverage_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_resources_coverage_proto = out.File
	file_api_nbi_v1alpha_resources_coverage_proto_rawDesc = nil
	file_api_nbi_v1alpha_resources_coverage_proto_goTypes = nil
	file_api_nbi_v1alpha_resources_coverage_proto_depIdxs = nil
}
