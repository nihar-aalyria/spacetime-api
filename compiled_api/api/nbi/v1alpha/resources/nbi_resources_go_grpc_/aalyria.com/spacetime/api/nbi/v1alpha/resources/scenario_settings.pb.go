// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/resources/scenario_settings.proto

package resources

import (
	common "aalyria.com/spacetime/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern int32

const (
	ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_ISL_PATTERN_NONE ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern = 0
	ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_ISL_PATTERN_NSEW ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern = 1
	ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_ISL_PATTERN_NS   ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern = 2
)

// Enum value maps for ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern.
var (
	ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_name = map[int32]string{
		0: "ISL_PATTERN_NONE",
		1: "ISL_PATTERN_NSEW",
		2: "ISL_PATTERN_NS",
	}
	ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern_value = map[string]int32{
		"ISL_PATTERN_NONE": 0,
		"ISL_PATTERN_NSEW": 1,
		"ISL_PATTERN_NS":   2,
	}
)

func (x ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) Enum() *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern {
	p := new(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern)
	*p = x
	return p
}

func (x ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_enumTypes[0].Descriptor()
}

func (ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_resources_scenario_settings_proto_enumTypes[0]
}

func (x ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern(num)
	return nil
}

// Deprecated: Use ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern.Descriptor instead.
func (ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

type ScenarioSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constellation              []*ScenarioSettings_Constellation             `protobuf:"bytes,1,rep,name=constellation" json:"constellation,omitempty"`
	Gateways                   []*ScenarioSettings_Gateway                   `protobuf:"bytes,2,rep,name=gateways" json:"gateways,omitempty"`
	ScenarioChannelDefinition  []*ScenarioSettings_ScenarioChannelDefinition `protobuf:"bytes,3,rep,name=scenario_channel_definition,json=scenarioChannelDefinition" json:"scenario_channel_definition,omitempty"`
	AntennaPatternSettings     []*ScenarioSettings_AntennaPatternSettings    `protobuf:"bytes,4,rep,name=antenna_pattern_settings,json=antennaPatternSettings" json:"antenna_pattern_settings,omitempty"`
	UserTerminal               []*ScenarioSettings_UserTerminal              `protobuf:"bytes,5,rep,name=user_terminal,json=userTerminal" json:"user_terminal,omitempty"`
	UserTerminalCommonSettings *ScenarioSettings_UserTerminalCommonSettings  `protobuf:"bytes,6,opt,name=user_terminal_common_settings,json=userTerminalCommonSettings" json:"user_terminal_common_settings,omitempty"`
	Pop                        []*ScenarioSettings_Pop                       `protobuf:"bytes,7,rep,name=pop" json:"pop,omitempty"`
	Airfleets                  []*ScenarioSettings_AirFleet                  `protobuf:"bytes,8,rep,name=airfleets" json:"airfleets,omitempty"`
	Shipfleets                 []*ScenarioSettings_ShipFleet                 `protobuf:"bytes,9,rep,name=shipfleets" json:"shipfleets,omitempty"`
	GatewayToPermittedPops     map[string]string                             `protobuf:"bytes,10,rep,name=gateway_to_permitted_pops,json=gatewayToPermittedPops" json:"gateway_to_permitted_pops,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *ScenarioSettings) Reset() {
	*x = ScenarioSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings) ProtoMessage() {}

func (x *ScenarioSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings.ProtoReflect.Descriptor instead.
func (*ScenarioSettings) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0}
}

func (x *ScenarioSettings) GetConstellation() []*ScenarioSettings_Constellation {
	if x != nil {
		return x.Constellation
	}
	return nil
}

func (x *ScenarioSettings) GetGateways() []*ScenarioSettings_Gateway {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *ScenarioSettings) GetScenarioChannelDefinition() []*ScenarioSettings_ScenarioChannelDefinition {
	if x != nil {
		return x.ScenarioChannelDefinition
	}
	return nil
}

func (x *ScenarioSettings) GetAntennaPatternSettings() []*ScenarioSettings_AntennaPatternSettings {
	if x != nil {
		return x.AntennaPatternSettings
	}
	return nil
}

func (x *ScenarioSettings) GetUserTerminal() []*ScenarioSettings_UserTerminal {
	if x != nil {
		return x.UserTerminal
	}
	return nil
}

func (x *ScenarioSettings) GetUserTerminalCommonSettings() *ScenarioSettings_UserTerminalCommonSettings {
	if x != nil {
		return x.UserTerminalCommonSettings
	}
	return nil
}

func (x *ScenarioSettings) GetPop() []*ScenarioSettings_Pop {
	if x != nil {
		return x.Pop
	}
	return nil
}

func (x *ScenarioSettings) GetAirfleets() []*ScenarioSettings_AirFleet {
	if x != nil {
		return x.Airfleets
	}
	return nil
}

func (x *ScenarioSettings) GetShipfleets() []*ScenarioSettings_ShipFleet {
	if x != nil {
		return x.Shipfleets
	}
	return nil
}

func (x *ScenarioSettings) GetGatewayToPermittedPops() map[string]string {
	if x != nil {
		return x.GatewayToPermittedPops
	}
	return nil
}

type ScenarioSettings_Constellation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               *string                                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type               *string                                           `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	OrbitalParameters  *ScenarioSettings_Constellation_OrbitalParameters `protobuf:"bytes,2,opt,name=orbital_parameters,json=orbitalParameters" json:"orbital_parameters,omitempty"`
	TransceiverModels  []*ScenarioSettings_TransceiverModel              `protobuf:"bytes,3,rep,name=transceiver_models,json=transceiverModels" json:"transceiver_models,omitempty"`
	WirelessInterfaces []*ScenarioSettings_WirelessInterface             `protobuf:"bytes,4,rep,name=wireless_interfaces,json=wirelessInterfaces" json:"wireless_interfaces,omitempty"`
	Storage            *NetworkNode_Storage                              `protobuf:"bytes,6,opt,name=storage" json:"storage,omitempty"`
	ServiceRequest     []*ScenarioSettings_Constellation_ServiceRequest  `protobuf:"bytes,7,rep,name=service_request,json=serviceRequest" json:"service_request,omitempty"`
}

func (x *ScenarioSettings_Constellation) Reset() {
	*x = ScenarioSettings_Constellation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Constellation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Constellation) ProtoMessage() {}

func (x *ScenarioSettings_Constellation) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Constellation.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Constellation) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ScenarioSettings_Constellation) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_Constellation) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ScenarioSettings_Constellation) GetOrbitalParameters() *ScenarioSettings_Constellation_OrbitalParameters {
	if x != nil {
		return x.OrbitalParameters
	}
	return nil
}

func (x *ScenarioSettings_Constellation) GetTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.TransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_Constellation) GetWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.WirelessInterfaces
	}
	return nil
}

func (x *ScenarioSettings_Constellation) GetStorage() *NetworkNode_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *ScenarioSettings_Constellation) GetServiceRequest() []*ScenarioSettings_Constellation_ServiceRequest {
	if x != nil {
		return x.ServiceRequest
	}
	return nil
}

type ScenarioSettings_WirelessInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TransceiverModelId *string `protobuf:"bytes,3,opt,name=transceiver_model_id,json=transceiverModelId" json:"transceiver_model_id,omitempty"`
}

func (x *ScenarioSettings_WirelessInterface) Reset() {
	*x = ScenarioSettings_WirelessInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_WirelessInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_WirelessInterface) ProtoMessage() {}

func (x *ScenarioSettings_WirelessInterface) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_WirelessInterface.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_WirelessInterface) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ScenarioSettings_WirelessInterface) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ScenarioSettings_WirelessInterface) GetTransceiverModelId() string {
	if x != nil && x.TransceiverModelId != nil {
		return *x.TransceiverModelId
	}
	return ""
}

type ScenarioSettings_TransmitterDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SequentialChannelDefinition []*ScenarioSettings_SequentialChannelDefinition `protobuf:"bytes,2,rep,name=sequential_channel_definition,json=sequentialChannelDefinition" json:"sequential_channel_definition,omitempty"`
	ChannelSelectionMethod      *common.ChannelSelectionMethod                  `protobuf:"varint,3,opt,name=channel_selection_method,json=channelSelectionMethod,enum=aalyria.spacetime.api.common.ChannelSelectionMethod" json:"channel_selection_method,omitempty"`
	SignalProcessingStep        []*common.TransmitSignalProcessor               `protobuf:"bytes,4,rep,name=signal_processing_step,json=signalProcessingStep" json:"signal_processing_step,omitempty"`
}

func (x *ScenarioSettings_TransmitterDefinition) Reset() {
	*x = ScenarioSettings_TransmitterDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_TransmitterDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_TransmitterDefinition) ProtoMessage() {}

func (x *ScenarioSettings_TransmitterDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_TransmitterDefinition.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_TransmitterDefinition) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ScenarioSettings_TransmitterDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_TransmitterDefinition) GetSequentialChannelDefinition() []*ScenarioSettings_SequentialChannelDefinition {
	if x != nil {
		return x.SequentialChannelDefinition
	}
	return nil
}

func (x *ScenarioSettings_TransmitterDefinition) GetChannelSelectionMethod() common.ChannelSelectionMethod {
	if x != nil && x.ChannelSelectionMethod != nil {
		return *x.ChannelSelectionMethod
	}
	return common.ChannelSelectionMethod(0)
}

func (x *ScenarioSettings_TransmitterDefinition) GetSignalProcessingStep() []*common.TransmitSignalProcessor {
	if x != nil {
		return x.SignalProcessingStep
	}
	return nil
}

type ScenarioSettings_ReceiverDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        *string                                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SequentialChannelDefinition []*ScenarioSettings_SequentialChannelDefinition `protobuf:"bytes,2,rep,name=sequential_channel_definition,json=sequentialChannelDefinition" json:"sequential_channel_definition,omitempty"`
	ChannelSelectionMethod      *common.ChannelSelectionMethod                  `protobuf:"varint,3,opt,name=channel_selection_method,json=channelSelectionMethod,enum=aalyria.spacetime.api.common.ChannelSelectionMethod" json:"channel_selection_method,omitempty"`
	SignalProcessingStep        []*common.ReceiveSignalProcessor                `protobuf:"bytes,4,rep,name=signal_processing_step,json=signalProcessingStep" json:"signal_processing_step,omitempty"`
}

func (x *ScenarioSettings_ReceiverDefinition) Reset() {
	*x = ScenarioSettings_ReceiverDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_ReceiverDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_ReceiverDefinition) ProtoMessage() {}

func (x *ScenarioSettings_ReceiverDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_ReceiverDefinition.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_ReceiverDefinition) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ScenarioSettings_ReceiverDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_ReceiverDefinition) GetSequentialChannelDefinition() []*ScenarioSettings_SequentialChannelDefinition {
	if x != nil {
		return x.SequentialChannelDefinition
	}
	return nil
}

func (x *ScenarioSettings_ReceiverDefinition) GetChannelSelectionMethod() common.ChannelSelectionMethod {
	if x != nil && x.ChannelSelectionMethod != nil {
		return *x.ChannelSelectionMethod
	}
	return common.ChannelSelectionMethod(0)
}

func (x *ScenarioSettings_ReceiverDefinition) GetSignalProcessingStep() []*common.ReceiveSignalProcessor {
	if x != nil {
		return x.SignalProcessingStep
	}
	return nil
}

type ScenarioSettings_TransceiverModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *string                                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Transmitter       *ScenarioSettings_TransmitterDefinition `protobuf:"bytes,2,opt,name=transmitter" json:"transmitter,omitempty"`
	Receiver          *ScenarioSettings_ReceiverDefinition    `protobuf:"bytes,3,opt,name=receiver" json:"receiver,omitempty"`
	AntennaDefinition *common.AntennaDefinition               `protobuf:"bytes,4,opt,name=antenna_definition,json=antennaDefinition" json:"antenna_definition,omitempty"`
	Macs              []*common.WirelessMac                   `protobuf:"bytes,5,rep,name=macs" json:"macs,omitempty"`
}

func (x *ScenarioSettings_TransceiverModel) Reset() {
	*x = ScenarioSettings_TransceiverModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_TransceiverModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_TransceiverModel) ProtoMessage() {}

func (x *ScenarioSettings_TransceiverModel) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_TransceiverModel.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_TransceiverModel) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ScenarioSettings_TransceiverModel) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ScenarioSettings_TransceiverModel) GetTransmitter() *ScenarioSettings_TransmitterDefinition {
	if x != nil {
		return x.Transmitter
	}
	return nil
}

func (x *ScenarioSettings_TransceiverModel) GetReceiver() *ScenarioSettings_ReceiverDefinition {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *ScenarioSettings_TransceiverModel) GetAntennaDefinition() *common.AntennaDefinition {
	if x != nil {
		return x.AntennaDefinition
	}
	return nil
}

func (x *ScenarioSettings_TransceiverModel) GetMacs() []*common.WirelessMac {
	if x != nil {
		return x.Macs
	}
	return nil
}

type ScenarioSettings_SequentialChannelDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId           *string  `protobuf:"bytes,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ChannelCount        *uint32  `protobuf:"varint,2,opt,name=channel_count,json=channelCount" json:"channel_count,omitempty"`
	StartingFrequencyHz *uint64  `protobuf:"varint,3,opt,name=starting_frequency_hz,json=startingFrequencyHz" json:"starting_frequency_hz,omitempty"`
	BandwidthHz         *uint64  `protobuf:"varint,4,opt,name=bandwidth_hz,json=bandwidthHz" json:"bandwidth_hz,omitempty"`
	TxPowerW            *float64 `protobuf:"fixed64,5,opt,name=tx_power_w,json=txPowerW" json:"tx_power_w,omitempty"`
}

func (x *ScenarioSettings_SequentialChannelDefinition) Reset() {
	*x = ScenarioSettings_SequentialChannelDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_SequentialChannelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_SequentialChannelDefinition) ProtoMessage() {}

func (x *ScenarioSettings_SequentialChannelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_SequentialChannelDefinition.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_SequentialChannelDefinition) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ScenarioSettings_SequentialChannelDefinition) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

func (x *ScenarioSettings_SequentialChannelDefinition) GetChannelCount() uint32 {
	if x != nil && x.ChannelCount != nil {
		return *x.ChannelCount
	}
	return 0
}

func (x *ScenarioSettings_SequentialChannelDefinition) GetStartingFrequencyHz() uint64 {
	if x != nil && x.StartingFrequencyHz != nil {
		return *x.StartingFrequencyHz
	}
	return 0
}

func (x *ScenarioSettings_SequentialChannelDefinition) GetBandwidthHz() uint64 {
	if x != nil && x.BandwidthHz != nil {
		return *x.BandwidthHz
	}
	return 0
}

func (x *ScenarioSettings_SequentialChannelDefinition) GetTxPowerW() float64 {
	if x != nil && x.TxPowerW != nil {
		return *x.TxPowerW
	}
	return 0
}

type ScenarioSettings_Gateway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                *string                               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Location            *common.GeodeticWgs84                 `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	TransceiverModels   []*ScenarioSettings_TransceiverModel  `protobuf:"bytes,8,rep,name=transceiver_models,json=transceiverModels" json:"transceiver_models,omitempty"`
	WirelessInterfaces  []*ScenarioSettings_WirelessInterface `protobuf:"bytes,9,rep,name=wireless_interfaces,json=wirelessInterfaces" json:"wireless_interfaces,omitempty"`
	WiredInterfaceId    *string                               `protobuf:"bytes,10,opt,name=wired_interface_id,json=wiredInterfaceId,def=WAN" json:"wired_interface_id,omitempty"`
	MaxWiredDataRateBps *float64                              `protobuf:"fixed64,6,opt,name=max_wired_data_rate_bps,json=maxWiredDataRateBps" json:"max_wired_data_rate_bps,omitempty"`
	Agent               *SdnAgent                             `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
}

// Default values for ScenarioSettings_Gateway fields.
const (
	Default_ScenarioSettings_Gateway_WiredInterfaceId = string("WAN")
)

func (x *ScenarioSettings_Gateway) Reset() {
	*x = ScenarioSettings_Gateway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Gateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Gateway) ProtoMessage() {}

func (x *ScenarioSettings_Gateway) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Gateway.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Gateway) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ScenarioSettings_Gateway) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_Gateway) GetLocation() *common.GeodeticWgs84 {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ScenarioSettings_Gateway) GetTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.TransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_Gateway) GetWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.WirelessInterfaces
	}
	return nil
}

func (x *ScenarioSettings_Gateway) GetWiredInterfaceId() string {
	if x != nil && x.WiredInterfaceId != nil {
		return *x.WiredInterfaceId
	}
	return Default_ScenarioSettings_Gateway_WiredInterfaceId
}

func (x *ScenarioSettings_Gateway) GetMaxWiredDataRateBps() float64 {
	if x != nil && x.MaxWiredDataRateBps != nil {
		return *x.MaxWiredDataRateBps
	}
	return 0
}

func (x *ScenarioSettings_Gateway) GetAgent() *SdnAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type ScenarioSettings_ScenarioChannelDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId *string             `protobuf:"bytes,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Channel   *common.BandProfile `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
}

func (x *ScenarioSettings_ScenarioChannelDefinition) Reset() {
	*x = ScenarioSettings_ScenarioChannelDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_ScenarioChannelDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_ScenarioChannelDefinition) ProtoMessage() {}

func (x *ScenarioSettings_ScenarioChannelDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_ScenarioChannelDefinition.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_ScenarioChannelDefinition) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ScenarioSettings_ScenarioChannelDefinition) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

func (x *ScenarioSettings_ScenarioChannelDefinition) GetChannel() *common.BandProfile {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ScenarioSettings_AntennaPatternSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AntennaPatternId *string         `protobuf:"bytes,1,opt,name=antenna_pattern_id,json=antennaPatternId" json:"antenna_pattern_id,omitempty"`
	AntennaPattern   *AntennaPattern `protobuf:"bytes,2,opt,name=antenna_pattern,json=antennaPattern" json:"antenna_pattern,omitempty"`
}

func (x *ScenarioSettings_AntennaPatternSettings) Reset() {
	*x = ScenarioSettings_AntennaPatternSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_AntennaPatternSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_AntennaPatternSettings) ProtoMessage() {}

func (x *ScenarioSettings_AntennaPatternSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_AntennaPatternSettings.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_AntennaPatternSettings) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 8}
}

func (x *ScenarioSettings_AntennaPatternSettings) GetAntennaPatternId() string {
	if x != nil && x.AntennaPatternId != nil {
		return *x.AntennaPatternId
	}
	return ""
}

func (x *ScenarioSettings_AntennaPatternSettings) GetAntennaPattern() *AntennaPattern {
	if x != nil {
		return x.AntennaPattern
	}
	return nil
}

type ScenarioSettings_UserTerminal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *string                                                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UserTerminalGridDefinition []*ScenarioSettings_UserTerminal_UserTerminalGridDefinition `protobuf:"bytes,2,rep,name=user_terminal_grid_definition,json=userTerminalGridDefinition" json:"user_terminal_grid_definition,omitempty"`
	TransceiverModels          []*ScenarioSettings_TransceiverModel                        `protobuf:"bytes,8,rep,name=transceiver_models,json=transceiverModels" json:"transceiver_models,omitempty"`
	WirelessInterfaces         []*ScenarioSettings_WirelessInterface                       `protobuf:"bytes,9,rep,name=wireless_interfaces,json=wirelessInterfaces" json:"wireless_interfaces,omitempty"`
}

func (x *ScenarioSettings_UserTerminal) Reset() {
	*x = ScenarioSettings_UserTerminal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_UserTerminal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_UserTerminal) ProtoMessage() {}

func (x *ScenarioSettings_UserTerminal) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_UserTerminal.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_UserTerminal) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 9}
}

func (x *ScenarioSettings_UserTerminal) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_UserTerminal) GetUserTerminalGridDefinition() []*ScenarioSettings_UserTerminal_UserTerminalGridDefinition {
	if x != nil {
		return x.UserTerminalGridDefinition
	}
	return nil
}

func (x *ScenarioSettings_UserTerminal) GetTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.TransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_UserTerminal) GetWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.WirelessInterfaces
	}
	return nil
}

type ScenarioSettings_UserTerminalCommonSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTerminalForwardDataRateBps *float64 `protobuf:"fixed64,1,opt,name=user_terminal_forward_data_rate_bps,json=userTerminalForwardDataRateBps" json:"user_terminal_forward_data_rate_bps,omitempty"`
	UserTerminalReturnDataRateBps  *float64 `protobuf:"fixed64,2,opt,name=user_terminal_return_data_rate_bps,json=userTerminalReturnDataRateBps" json:"user_terminal_return_data_rate_bps,omitempty"`
}

func (x *ScenarioSettings_UserTerminalCommonSettings) Reset() {
	*x = ScenarioSettings_UserTerminalCommonSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_UserTerminalCommonSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_UserTerminalCommonSettings) ProtoMessage() {}

func (x *ScenarioSettings_UserTerminalCommonSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_UserTerminalCommonSettings.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_UserTerminalCommonSettings) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 10}
}

func (x *ScenarioSettings_UserTerminalCommonSettings) GetUserTerminalForwardDataRateBps() float64 {
	if x != nil && x.UserTerminalForwardDataRateBps != nil {
		return *x.UserTerminalForwardDataRateBps
	}
	return 0
}

func (x *ScenarioSettings_UserTerminalCommonSettings) GetUserTerminalReturnDataRateBps() float64 {
	if x != nil && x.UserTerminalReturnDataRateBps != nil {
		return *x.UserTerminalReturnDataRateBps
	}
	return 0
}

type ScenarioSettings_Pop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *string               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Location       *common.GeodeticWgs84 `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	MaxDataRateBps *float64              `protobuf:"fixed64,3,opt,name=max_data_rate_bps,json=maxDataRateBps" json:"max_data_rate_bps,omitempty"`
}

func (x *ScenarioSettings_Pop) Reset() {
	*x = ScenarioSettings_Pop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Pop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Pop) ProtoMessage() {}

func (x *ScenarioSettings_Pop) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Pop.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Pop) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 11}
}

func (x *ScenarioSettings_Pop) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_Pop) GetLocation() *common.GeodeticWgs84 {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ScenarioSettings_Pop) GetMaxDataRateBps() float64 {
	if x != nil && x.MaxDataRateBps != nil {
		return *x.MaxDataRateBps
	}
	return 0
}

type ScenarioSettings_AirFleet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aircraft           []*ScenarioSettings_AirFleet_Aircraft `protobuf:"bytes,1,rep,name=aircraft" json:"aircraft,omitempty"`
	TransceiverModels  []*ScenarioSettings_TransceiverModel  `protobuf:"bytes,2,rep,name=transceiver_models,json=transceiverModels" json:"transceiver_models,omitempty"`
	WirelessInterfaces []*ScenarioSettings_WirelessInterface `protobuf:"bytes,3,rep,name=wireless_interfaces,json=wirelessInterfaces" json:"wireless_interfaces,omitempty"`
	PopId              *string                               `protobuf:"bytes,4,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
}

func (x *ScenarioSettings_AirFleet) Reset() {
	*x = ScenarioSettings_AirFleet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_AirFleet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_AirFleet) ProtoMessage() {}

func (x *ScenarioSettings_AirFleet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_AirFleet.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_AirFleet) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 12}
}

func (x *ScenarioSettings_AirFleet) GetAircraft() []*ScenarioSettings_AirFleet_Aircraft {
	if x != nil {
		return x.Aircraft
	}
	return nil
}

func (x *ScenarioSettings_AirFleet) GetTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.TransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_AirFleet) GetWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.WirelessInterfaces
	}
	return nil
}

func (x *ScenarioSettings_AirFleet) GetPopId() string {
	if x != nil && x.PopId != nil {
		return *x.PopId
	}
	return ""
}

type ScenarioSettings_ShipFleet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ship               []*ScenarioSettings_ShipFleet_Ship    `protobuf:"bytes,1,rep,name=ship" json:"ship,omitempty"`
	TransceiverModels  []*ScenarioSettings_TransceiverModel  `protobuf:"bytes,2,rep,name=transceiver_models,json=transceiverModels" json:"transceiver_models,omitempty"`
	WirelessInterfaces []*ScenarioSettings_WirelessInterface `protobuf:"bytes,3,rep,name=wireless_interfaces,json=wirelessInterfaces" json:"wireless_interfaces,omitempty"`
	PopId              *string                               `protobuf:"bytes,4,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
}

func (x *ScenarioSettings_ShipFleet) Reset() {
	*x = ScenarioSettings_ShipFleet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_ShipFleet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_ShipFleet) ProtoMessage() {}

func (x *ScenarioSettings_ShipFleet) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_ShipFleet.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_ShipFleet) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 13}
}

func (x *ScenarioSettings_ShipFleet) GetShip() []*ScenarioSettings_ShipFleet_Ship {
	if x != nil {
		return x.Ship
	}
	return nil
}

func (x *ScenarioSettings_ShipFleet) GetTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.TransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_ShipFleet) GetWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.WirelessInterfaces
	}
	return nil
}

func (x *ScenarioSettings_ShipFleet) GetPopId() string {
	if x != nil && x.PopId != nil {
		return *x.PopId
	}
	return ""
}

type ScenarioSettings_Constellation_OrbitalParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalkerDeltaParameters     *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters       `protobuf:"bytes,2,opt,name=walker_delta_parameters,json=walkerDeltaParameters" json:"walker_delta_parameters,omitempty"`
	ArbitraryMotionParameters []*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters `protobuf:"bytes,3,rep,name=arbitrary_motion_parameters,json=arbitraryMotionParameters" json:"arbitrary_motion_parameters,omitempty"`
}

func (x *ScenarioSettings_Constellation_OrbitalParameters) Reset() {
	*x = ScenarioSettings_Constellation_OrbitalParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Constellation_OrbitalParameters) ProtoMessage() {}

func (x *ScenarioSettings_Constellation_OrbitalParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Constellation_OrbitalParameters.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Constellation_OrbitalParameters) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters) GetWalkerDeltaParameters() *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters {
	if x != nil {
		return x.WalkerDeltaParameters
	}
	return nil
}

func (x *ScenarioSettings_Constellation_OrbitalParameters) GetArbitraryMotionParameters() []*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters {
	if x != nil {
		return x.ArbitraryMotionParameters
	}
	return nil
}

type ScenarioSettings_Constellation_ServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PopId               *string  `protobuf:"bytes,1,opt,name=pop_id,json=popId" json:"pop_id,omitempty"`
	UplinkCapacityBps   *float64 `protobuf:"fixed64,2,opt,name=uplink_capacity_bps,json=uplinkCapacityBps" json:"uplink_capacity_bps,omitempty"`
	DownlinkCapacityBps *float64 `protobuf:"fixed64,3,opt,name=downlink_capacity_bps,json=downlinkCapacityBps" json:"downlink_capacity_bps,omitempty"`
	Priority            *float64 `protobuf:"fixed64,4,opt,name=priority" json:"priority,omitempty"`
}

func (x *ScenarioSettings_Constellation_ServiceRequest) Reset() {
	*x = ScenarioSettings_Constellation_ServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Constellation_ServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Constellation_ServiceRequest) ProtoMessage() {}

func (x *ScenarioSettings_Constellation_ServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Constellation_ServiceRequest.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Constellation_ServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *ScenarioSettings_Constellation_ServiceRequest) GetPopId() string {
	if x != nil && x.PopId != nil {
		return *x.PopId
	}
	return ""
}

func (x *ScenarioSettings_Constellation_ServiceRequest) GetUplinkCapacityBps() float64 {
	if x != nil && x.UplinkCapacityBps != nil {
		return *x.UplinkCapacityBps
	}
	return 0
}

func (x *ScenarioSettings_Constellation_ServiceRequest) GetDownlinkCapacityBps() float64 {
	if x != nil && x.DownlinkCapacityBps != nil {
		return *x.DownlinkCapacityBps
	}
	return 0
}

func (x *ScenarioSettings_Constellation_ServiceRequest) GetPriority() float64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

type ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemimajorAxisKm    *float64                                                                           `protobuf:"fixed64,1,opt,name=semimajor_axis_km,json=semimajorAxisKm" json:"semimajor_axis_km,omitempty"`
	Eccentricity       *float64                                                                           `protobuf:"fixed64,7,opt,name=eccentricity,def=0" json:"eccentricity,omitempty"`
	InclinationDeg     *float64                                                                           `protobuf:"fixed64,2,opt,name=inclination_deg,json=inclinationDeg" json:"inclination_deg,omitempty"`
	NumberOfPlanes     *uint32                                                                            `protobuf:"varint,3,opt,name=number_of_planes,json=numberOfPlanes" json:"number_of_planes,omitempty"`
	SatellitesPerPlane *uint32                                                                            `protobuf:"varint,4,opt,name=satellites_per_plane,json=satellitesPerPlane" json:"satellites_per_plane,omitempty"`
	InterPlaneSpacing  *uint32                                                                            `protobuf:"varint,5,opt,name=inter_plane_spacing,json=interPlaneSpacing" json:"inter_plane_spacing,omitempty"`
	RaanOffsetDeg      *float64                                                                           `protobuf:"fixed64,8,opt,name=raan_offset_deg,json=raanOffsetDeg" json:"raan_offset_deg,omitempty"`
	IslPattern         *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern `protobuf:"varint,6,opt,name=isl_pattern,json=islPattern,enum=aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern,def=0" json:"isl_pattern,omitempty"`
}

// Default values for ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters fields.
const (
	Default_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_Eccentricity = float64(0)
	Default_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern   = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_ISL_PATTERN_NONE
)

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) Reset() {
	*x = ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) ProtoMessage() {}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetSemimajorAxisKm() float64 {
	if x != nil && x.SemimajorAxisKm != nil {
		return *x.SemimajorAxisKm
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetEccentricity() float64 {
	if x != nil && x.Eccentricity != nil {
		return *x.Eccentricity
	}
	return Default_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_Eccentricity
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetInclinationDeg() float64 {
	if x != nil && x.InclinationDeg != nil {
		return *x.InclinationDeg
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetNumberOfPlanes() uint32 {
	if x != nil && x.NumberOfPlanes != nil {
		return *x.NumberOfPlanes
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetSatellitesPerPlane() uint32 {
	if x != nil && x.SatellitesPerPlane != nil {
		return *x.SatellitesPerPlane
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetInterPlaneSpacing() uint32 {
	if x != nil && x.InterPlaneSpacing != nil {
		return *x.InterPlaneSpacing
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetRaanOffsetDeg() float64 {
	if x != nil && x.RaanOffsetDeg != nil {
		return *x.RaanOffsetDeg
	}
	return 0
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters) GetIslPattern() ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern {
	if x != nil && x.IslPattern != nil {
		return *x.IslPattern
	}
	return Default_ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern
}

type ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string        `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Motion *common.Motion `protobuf:"bytes,2,req,name=motion" json:"motion,omitempty"`
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) Reset() {
	*x = ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) ProtoMessage() {}

func (x *ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters) GetMotion() *common.Motion {
	if x != nil {
		return x.Motion
	}
	return nil
}

type ScenarioSettings_UserTerminal_UserTerminalGridDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    *string               `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	SouthWestCorner         *common.GeodeticWgs84 `protobuf:"bytes,1,opt,name=south_west_corner,json=southWestCorner" json:"south_west_corner,omitempty"`
	RowCount                *uint32               `protobuf:"varint,2,opt,name=row_count,json=rowCount" json:"row_count,omitempty"`
	ColumnCount             *uint32               `protobuf:"varint,3,opt,name=column_count,json=columnCount" json:"column_count,omitempty"`
	GridLatitudeSpacingDeg  *float64              `protobuf:"fixed64,4,opt,name=grid_latitude_spacing_deg,json=gridLatitudeSpacingDeg" json:"grid_latitude_spacing_deg,omitempty"`
	GridLongitudeSpacingDeg *float64              `protobuf:"fixed64,5,opt,name=grid_longitude_spacing_deg,json=gridLongitudeSpacingDeg" json:"grid_longitude_spacing_deg,omitempty"`
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) Reset() {
	*x = ScenarioSettings_UserTerminal_UserTerminalGridDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_UserTerminal_UserTerminalGridDefinition) ProtoMessage() {}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_UserTerminal_UserTerminalGridDefinition.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_UserTerminal_UserTerminalGridDefinition) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 9, 0}
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetSouthWestCorner() *common.GeodeticWgs84 {
	if x != nil {
		return x.SouthWestCorner
	}
	return nil
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetRowCount() uint32 {
	if x != nil && x.RowCount != nil {
		return *x.RowCount
	}
	return 0
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetColumnCount() uint32 {
	if x != nil && x.ColumnCount != nil {
		return *x.ColumnCount
	}
	return 0
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetGridLatitudeSpacingDeg() float64 {
	if x != nil && x.GridLatitudeSpacingDeg != nil {
		return *x.GridLatitudeSpacingDeg
	}
	return 0
}

func (x *ScenarioSettings_UserTerminal_UserTerminalGridDefinition) GetGridLongitudeSpacingDeg() float64 {
	if x != nil && x.GridLongitudeSpacingDeg != nil {
		return *x.GridLongitudeSpacingDeg
	}
	return 0
}

type ScenarioSettings_AirFleet_Aircraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           *string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	AdditionalTransceiverModels  []*ScenarioSettings_TransceiverModel  `protobuf:"bytes,2,rep,name=additional_transceiver_models,json=additionalTransceiverModels" json:"additional_transceiver_models,omitempty"`
	AdditionalWirelessInterfaces []*ScenarioSettings_WirelessInterface `protobuf:"bytes,3,rep,name=additional_wireless_interfaces,json=additionalWirelessInterfaces" json:"additional_wireless_interfaces,omitempty"`
}

func (x *ScenarioSettings_AirFleet_Aircraft) Reset() {
	*x = ScenarioSettings_AirFleet_Aircraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_AirFleet_Aircraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_AirFleet_Aircraft) ProtoMessage() {}

func (x *ScenarioSettings_AirFleet_Aircraft) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_AirFleet_Aircraft.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_AirFleet_Aircraft) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 12, 0}
}

func (x *ScenarioSettings_AirFleet_Aircraft) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ScenarioSettings_AirFleet_Aircraft) GetAdditionalTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.AdditionalTransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_AirFleet_Aircraft) GetAdditionalWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.AdditionalWirelessInterfaces
	}
	return nil
}

type ScenarioSettings_ShipFleet_Ship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           *string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                         *string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AdditionalTransceiverModels  []*ScenarioSettings_TransceiverModel  `protobuf:"bytes,4,rep,name=additional_transceiver_models,json=additionalTransceiverModels" json:"additional_transceiver_models,omitempty"`
	AdditionalWirelessInterfaces []*ScenarioSettings_WirelessInterface `protobuf:"bytes,5,rep,name=additional_wireless_interfaces,json=additionalWirelessInterfaces" json:"additional_wireless_interfaces,omitempty"`
}

func (x *ScenarioSettings_ShipFleet_Ship) Reset() {
	*x = ScenarioSettings_ShipFleet_Ship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScenarioSettings_ShipFleet_Ship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenarioSettings_ShipFleet_Ship) ProtoMessage() {}

func (x *ScenarioSettings_ShipFleet_Ship) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenarioSettings_ShipFleet_Ship.ProtoReflect.Descriptor instead.
func (*ScenarioSettings_ShipFleet_Ship) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP(), []int{0, 13, 0}
}

func (x *ScenarioSettings_ShipFleet_Ship) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ScenarioSettings_ShipFleet_Ship) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ScenarioSettings_ShipFleet_Ship) GetAdditionalTransceiverModels() []*ScenarioSettings_TransceiverModel {
	if x != nil {
		return x.AdditionalTransceiverModels
	}
	return nil
}

func (x *ScenarioSettings_ShipFleet_Ship) GetAdditionalWirelessInterfaces() []*ScenarioSettings_WirelessInterface {
	if x != nil {
		return x.AdditionalWirelessInterfaces
	}
	return nil
}

var File_api_nbi_v1alpha_resources_scenario_settings_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDesc = []byte{
	0x0a, 0x31, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x61, 0x6e,
	0x74, 0x65, 0x6e, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xdb, 0x40, 0x0a, 0x10, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x71, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x52, 0x08, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x1b, 0x73,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x57, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x73, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8e, 0x01, 0x0a, 0x18, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x16, 0x61,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x6f, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x9b, 0x01, 0x0a, 0x1d, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x53, 0x0a, 0x03, 0x70, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x50, 0x6f, 0x70, 0x52, 0x03, 0x70, 0x6f, 0x70, 0x12, 0x64, 0x0a, 0x09, 0x61, 0x69, 0x72,
	0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41, 0x69, 0x72, 0x46,
	0x6c, 0x65, 0x65, 0x74, 0x52, 0x09, 0x61, 0x69, 0x72, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12,
	0x67, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x52, 0x0a, 0x73, 0x68,
	0x69, 0x70, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x19, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x54, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x50, 0x6f,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x54, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x73, 0x1a,
	0x8d, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x6f, 0x72,
	0x62, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x7d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x77, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x12, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x5a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xb6, 0x08, 0x0a,
	0x11, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0xab, 0x01, 0x0a, 0x17, 0x77, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x73, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x15, 0x77, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0xb7, 0x01, 0x0a, 0x1b, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x77, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x19, 0x61, 0x72, 0x62, 0x69, 0x74, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xc9, 0x04, 0x0a, 0x15, 0x57,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6d, 0x69, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x6b, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x73, 0x65, 0x6d, 0x69, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x41, 0x78, 0x69, 0x73, 0x4b, 0x6d,
	0x12, 0x25, 0x0a, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x01, 0x30, 0x52, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x61,
	0x74, 0x65, 0x6c, 0x6c, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x61, 0x74, 0x65, 0x6c, 0x6c,
	0x69, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x61, 0x61, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x61, 0x61, 0x6e, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x67, 0x12, 0xb1, 0x01, 0x0a, 0x0b, 0x69, 0x73, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x7e, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x62, 0x69, 0x74, 0x61, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x49, 0x73, 0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x3a, 0x10, 0x49, 0x53, 0x4c, 0x5f,
	0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x52, 0x0a, 0x69, 0x73,
	0x6c, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0x4c, 0x0a, 0x0a, 0x49, 0x73, 0x6c, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x53, 0x4c, 0x5f, 0x50, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x49, 0x53, 0x4c, 0x5f, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52, 0x4e, 0x5f, 0x4e, 0x53, 0x45, 0x57,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x53, 0x4c, 0x5f, 0x50, 0x41, 0x54, 0x54, 0x45, 0x52,
	0x4e, 0x5f, 0x4e, 0x53, 0x10, 0x02, 0x1a, 0x6d, 0x0a, 0x19, 0x41, 0x72, 0x62, 0x69, 0x74, 0x72,
	0x61, 0x72, 0x79, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa7, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x75, 0x70,
	0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42, 0x70, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x42, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a,
	0x55, 0x0a, 0x11, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0xa8, 0x03, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x1d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x18, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x16, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x6b, 0x0a, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x14, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65,
	0x70, 0x1a, 0xa4, 0x03, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x9d, 0x01, 0x0a,
	0x1d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x1b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x18,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x6a, 0x0a, 0x16,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x1a, 0xa6, 0x03, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x75, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x53, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x5e, 0x0a, 0x12, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e,
	0x74, 0x65, 0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x04, 0x6d, 0x61, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4d, 0x61, 0x63, 0x52, 0x04, 0x6d, 0x61, 0x63,
	0x73, 0x1a, 0xd6, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x68, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x48, 0x7a, 0x12, 0x1c, 0x0a, 0x0a,
	0x74, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x74, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x57, 0x1a, 0x9e, 0x04, 0x0a, 0x07, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64,
	0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38, 0x34, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x12, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x12, 0x77, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x3a, 0x03, 0x57, 0x41, 0x4e, 0x52, 0x10, 0x77, 0x69, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f,
	0x77, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x57, 0x69,
	0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42, 0x70, 0x73, 0x12, 0x4b,
	0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x64, 0x6e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x7f, 0x0a, 0x19, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0xac, 0x01, 0x0a,
	0x16, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x64, 0x0a, 0x0f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x74,
	0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x52, 0x0e, 0x61, 0x6e, 0x74,
	0x65, 0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x1a, 0x9d, 0x06, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0xa8, 0x01, 0x0a, 0x1d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x65, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x47, 0x72, 0x69, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x1a, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x72, 0x69,
	0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x12, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x77,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x12, 0x77, 0x69, 0x72, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x1a, 0xcb, 0x02,
	0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x47, 0x72,
	0x69, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x57, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x5f, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x65,
	0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38, 0x34, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x74, 0x68, 0x57,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x67, 0x72, 0x69,
	0x64, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x67, 0x72,
	0x69, 0x64, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x67, 0x12, 0x3b, 0x0a, 0x1a, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x65, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x67, 0x72, 0x69, 0x64, 0x4c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x67, 0x4a, 0x08, 0x08, 0x07, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x1a, 0xb4, 0x01, 0x0a, 0x1a,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4b, 0x0a, 0x23, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x61, 0x74, 0x65, 0x42, 0x70, 0x73, 0x12, 0x49, 0x0a, 0x22, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x1d, 0x75, 0x73, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x70, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x03, 0x50, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38, 0x34, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x70, 0x73, 0x1a, 0xda, 0x05, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x12,
	0x6b, 0x0a, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x2e, 0x41, 0x69, 0x72, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x52, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x7d, 0x0a, 0x12,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x13,
	0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x12, 0x77, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x70, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x6f, 0x70, 0x49, 0x64, 0x1a, 0xc7, 0x02, 0x0a, 0x08, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x92, 0x01, 0x0a, 0x1d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69,
	0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x1b, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1e, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x1c, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x69, 0x72,
	0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x1a,
	0xe0, 0x05, 0x0a, 0x09, 0x53, 0x68, 0x69, 0x70, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x12, 0x60, 0x0a,
	0x04, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x46,
	0x6c, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x52, 0x04, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x7d, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72,
	0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x80,
	0x01, 0x0a, 0x13, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61,
	0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x12, 0x77,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x70, 0x49, 0x64, 0x1a, 0xd7, 0x02, 0x0a, 0x04, 0x53, 0x68, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x1d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e,
	0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x1b, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1e, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x61, 0x72, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x52, 0x1c, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x1a, 0x49, 0x0a, 0x1b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x6f, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x62, 0x0a,
	0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x5a, 0x2f, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73,
}

var (
	file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescData = file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDesc
)

func file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDescData
}

var file_api_nbi_v1alpha_resources_scenario_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_nbi_v1alpha_resources_scenario_settings_proto_goTypes = []interface{}{
	(ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters_IslPattern)(0), // 0: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.IslPattern
	(*ScenarioSettings)(nil),                                                           // 1: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings
	(*ScenarioSettings_Constellation)(nil),                                             // 2: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation
	(*ScenarioSettings_WirelessInterface)(nil),                                         // 3: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	(*ScenarioSettings_TransmitterDefinition)(nil),                                     // 4: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition
	(*ScenarioSettings_ReceiverDefinition)(nil),                                        // 5: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition
	(*ScenarioSettings_TransceiverModel)(nil),                                          // 6: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	(*ScenarioSettings_SequentialChannelDefinition)(nil),                               // 7: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition
	(*ScenarioSettings_Gateway)(nil),                                                   // 8: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway
	(*ScenarioSettings_ScenarioChannelDefinition)(nil),                                 // 9: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition
	(*ScenarioSettings_AntennaPatternSettings)(nil),                                    // 10: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings
	(*ScenarioSettings_UserTerminal)(nil),                                              // 11: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal
	(*ScenarioSettings_UserTerminalCommonSettings)(nil),                                // 12: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings
	(*ScenarioSettings_Pop)(nil),                                                       // 13: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop
	(*ScenarioSettings_AirFleet)(nil),                                                  // 14: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet
	(*ScenarioSettings_ShipFleet)(nil),                                                 // 15: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet
	nil,                                                                                // 16: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.GatewayToPermittedPopsEntry
	(*ScenarioSettings_Constellation_OrbitalParameters)(nil),                           // 17: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters
	(*ScenarioSettings_Constellation_ServiceRequest)(nil),                              // 18: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest
	(*ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters)(nil),     // 19: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters
	(*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters)(nil), // 20: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters
	(*ScenarioSettings_UserTerminal_UserTerminalGridDefinition)(nil),                   // 21: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition
	(*ScenarioSettings_AirFleet_Aircraft)(nil),                                         // 22: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft
	(*ScenarioSettings_ShipFleet_Ship)(nil),                                            // 23: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship
	(*NetworkNode_Storage)(nil),                                                        // 24: aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode.Storage
	(common.ChannelSelectionMethod)(0),                                                 // 25: aalyria.spacetime.api.common.ChannelSelectionMethod
	(*common.TransmitSignalProcessor)(nil),                                             // 26: aalyria.spacetime.api.common.TransmitSignalProcessor
	(*common.ReceiveSignalProcessor)(nil),                                              // 27: aalyria.spacetime.api.common.ReceiveSignalProcessor
	(*common.AntennaDefinition)(nil),                                                   // 28: aalyria.spacetime.api.common.AntennaDefinition
	(*common.WirelessMac)(nil),                                                         // 29: aalyria.spacetime.api.common.WirelessMac
	(*common.GeodeticWgs84)(nil),                                                       // 30: aalyria.spacetime.api.common.GeodeticWgs84
	(*SdnAgent)(nil),                                                                   // 31: aalyria.spacetime.api.nbi.v1alpha.resources.SdnAgent
	(*common.BandProfile)(nil),                                                         // 32: aalyria.spacetime.api.common.BandProfile
	(*AntennaPattern)(nil),                                                             // 33: aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern
	(*common.Motion)(nil),                                                              // 34: aalyria.spacetime.api.common.Motion
}
var file_api_nbi_v1alpha_resources_scenario_settings_proto_depIdxs = []int32{
	2,  // 0: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.constellation:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation
	8,  // 1: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateways:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway
	9,  // 2: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.scenario_channel_definition:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition
	10, // 3: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.antenna_pattern_settings:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings
	11, // 4: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal
	12, // 5: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.user_terminal_common_settings:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminalCommonSettings
	13, // 6: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.pop:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop
	14, // 7: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.airfleets:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet
	15, // 8: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.shipfleets:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet
	16, // 9: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.gateway_to_permitted_pops:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.GatewayToPermittedPopsEntry
	17, // 10: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.orbital_parameters:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters
	6,  // 11: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 12: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	24, // 13: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.storage:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.NetworkNode.Storage
	18, // 14: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.service_request:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.ServiceRequest
	7,  // 15: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.sequential_channel_definition:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition
	25, // 16: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.channel_selection_method:type_name -> aalyria.spacetime.api.common.ChannelSelectionMethod
	26, // 17: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition.signal_processing_step:type_name -> aalyria.spacetime.api.common.TransmitSignalProcessor
	7,  // 18: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.sequential_channel_definition:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.SequentialChannelDefinition
	25, // 19: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.channel_selection_method:type_name -> aalyria.spacetime.api.common.ChannelSelectionMethod
	27, // 20: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition.signal_processing_step:type_name -> aalyria.spacetime.api.common.ReceiveSignalProcessor
	4,  // 21: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.transmitter:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransmitterDefinition
	5,  // 22: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.receiver:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ReceiverDefinition
	28, // 23: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.antenna_definition:type_name -> aalyria.spacetime.api.common.AntennaDefinition
	29, // 24: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel.macs:type_name -> aalyria.spacetime.api.common.WirelessMac
	30, // 25: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.location:type_name -> aalyria.spacetime.api.common.GeodeticWgs84
	6,  // 26: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 27: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	31, // 28: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Gateway.agent:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.SdnAgent
	32, // 29: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ScenarioChannelDefinition.channel:type_name -> aalyria.spacetime.api.common.BandProfile
	33, // 30: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AntennaPatternSettings.antenna_pattern:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.AntennaPattern
	21, // 31: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.user_terminal_grid_definition:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition
	6,  // 32: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 33: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	30, // 34: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Pop.location:type_name -> aalyria.spacetime.api.common.GeodeticWgs84
	22, // 35: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.aircraft:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft
	6,  // 36: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 37: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	23, // 38: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.ship:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship
	6,  // 39: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 40: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	19, // 41: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.walker_delta_parameters:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters
	20, // 42: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.arbitrary_motion_parameters:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters
	0,  // 43: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.isl_pattern:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.WalkerDeltaParameters.IslPattern
	34, // 44: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.Constellation.OrbitalParameters.ArbitraryMotionParameters.motion:type_name -> aalyria.spacetime.api.common.Motion
	30, // 45: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.UserTerminal.UserTerminalGridDefinition.south_west_corner:type_name -> aalyria.spacetime.api.common.GeodeticWgs84
	6,  // 46: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 47: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.AirFleet.Aircraft.additional_wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	6,  // 48: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_transceiver_models:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.TransceiverModel
	3,  // 49: aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.ShipFleet.Ship.additional_wireless_interfaces:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ScenarioSettings.WirelessInterface
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_resources_scenario_settings_proto_init() }
func file_api_nbi_v1alpha_resources_scenario_settings_proto_init() {
	if File_api_nbi_v1alpha_resources_scenario_settings_proto != nil {
		return
	}
	file_api_nbi_v1alpha_resources_antenna_pattern_proto_init()
	file_api_nbi_v1alpha_resources_network_element_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Constellation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_WirelessInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_TransmitterDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_ReceiverDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_TransceiverModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_SequentialChannelDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Gateway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_ScenarioChannelDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_AntennaPatternSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_UserTerminal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_UserTerminalCommonSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Pop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_AirFleet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_ShipFleet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Constellation_OrbitalParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Constellation_ServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Constellation_OrbitalParameters_WalkerDeltaParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_Constellation_OrbitalParameters_ArbitraryMotionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_UserTerminal_UserTerminalGridDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_AirFleet_Aircraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScenarioSettings_ShipFleet_Ship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_nbi_v1alpha_resources_scenario_settings_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_resources_scenario_settings_proto_depIdxs,
		EnumInfos:         file_api_nbi_v1alpha_resources_scenario_settings_proto_enumTypes,
		MessageInfos:      file_api_nbi_v1alpha_resources_scenario_settings_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_resources_scenario_settings_proto = out.File
	file_api_nbi_v1alpha_resources_scenario_settings_proto_rawDesc = nil
	file_api_nbi_v1alpha_resources_scenario_settings_proto_goTypes = nil
	file_api_nbi_v1alpha_resources_scenario_settings_proto_depIdxs = nil
}
