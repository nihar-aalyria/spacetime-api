// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/resources/network_link.proto

package resources

import (
	common "aalyria.com/spacetime/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Accessibility int32

const (
	Accessibility_ACCESS_UNKNOWN  Accessibility = 0
	Accessibility_ACCESS_EXISTS   Accessibility = 1
	Accessibility_ACCESS_MARGINAL Accessibility = 3
	Accessibility_NO_ACCESS       Accessibility = 2
)

// Enum value maps for Accessibility.
var (
	Accessibility_name = map[int32]string{
		0: "ACCESS_UNKNOWN",
		1: "ACCESS_EXISTS",
		3: "ACCESS_MARGINAL",
		2: "NO_ACCESS",
	}
	Accessibility_value = map[string]int32{
		"ACCESS_UNKNOWN":  0,
		"ACCESS_EXISTS":   1,
		"ACCESS_MARGINAL": 3,
		"NO_ACCESS":       2,
	}
)

func (x Accessibility) Enum() *Accessibility {
	p := new(Accessibility)
	*p = x
	return p
}

func (x Accessibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Accessibility) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_resources_network_link_proto_enumTypes[0].Descriptor()
}

func (Accessibility) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_resources_network_link_proto_enumTypes[0]
}

func (x Accessibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Accessibility) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Accessibility(num)
	return nil
}

// Deprecated: Use Accessibility.Descriptor instead.
func (Accessibility) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{0}
}

type NetworkLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src *common.NetworkInterfaceId `protobuf:"bytes,3,opt,name=src" json:"src,omitempty"`
	Dst *common.NetworkInterfaceId `protobuf:"bytes,4,opt,name=dst" json:"dst,omitempty"`
}

func (x *NetworkLink) Reset() {
	*x = NetworkLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkLink) ProtoMessage() {}

func (x *NetworkLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkLink.ProtoReflect.Descriptor instead.
func (*NetworkLink) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkLink) GetSrc() *common.NetworkInterfaceId {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *NetworkLink) GetDst() *common.NetworkInterfaceId {
	if x != nil {
		return x.Dst
	}
	return nil
}

type RadioConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceId  *common.NetworkInterfaceId `protobuf:"bytes,1,opt,name=interface_id,json=interfaceId" json:"interface_id,omitempty"`
	TxState      *common.TransmitterState   `protobuf:"bytes,2,opt,name=tx_state,json=txState" json:"tx_state,omitempty"`
	RxState      *common.ReceiverState      `protobuf:"bytes,3,opt,name=rx_state,json=rxState" json:"rx_state,omitempty"`
	RateTableId  *string                    `protobuf:"bytes,5,opt,name=rate_table_id,json=rateTableId" json:"rate_table_id,omitempty"`
	TdmaSchedule *common.TdmaSchedule       `protobuf:"bytes,4,opt,name=tdma_schedule,json=tdmaSchedule" json:"tdma_schedule,omitempty"`
}

func (x *RadioConfiguration) Reset() {
	*x = RadioConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioConfiguration) ProtoMessage() {}

func (x *RadioConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioConfiguration.ProtoReflect.Descriptor instead.
func (*RadioConfiguration) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{1}
}

func (x *RadioConfiguration) GetInterfaceId() *common.NetworkInterfaceId {
	if x != nil {
		return x.InterfaceId
	}
	return nil
}

func (x *RadioConfiguration) GetTxState() *common.TransmitterState {
	if x != nil {
		return x.TxState
	}
	return nil
}

func (x *RadioConfiguration) GetRxState() *common.ReceiverState {
	if x != nil {
		return x.RxState
	}
	return nil
}

func (x *RadioConfiguration) GetRateTableId() string {
	if x != nil && x.RateTableId != nil {
		return *x.RateTableId
	}
	return ""
}

func (x *RadioConfiguration) GetTdmaSchedule() *common.TdmaSchedule {
	if x != nil {
		return x.TdmaSchedule
	}
	return nil
}

type Radio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterFrequencyHz *uint64 `protobuf:"varint,1,opt,name=center_frequency_hz,json=centerFrequencyHz" json:"center_frequency_hz,omitempty"`
	BandProfileId     *string `protobuf:"bytes,2,opt,name=band_profile_id,json=bandProfileId" json:"band_profile_id,omitempty"`
}

func (x *Radio) Reset() {
	*x = Radio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Radio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radio) ProtoMessage() {}

func (x *Radio) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radio.ProtoReflect.Descriptor instead.
func (*Radio) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{2}
}

func (x *Radio) GetCenterFrequencyHz() uint64 {
	if x != nil && x.CenterFrequencyHz != nil {
		return *x.CenterFrequencyHz
	}
	return 0
}

func (x *Radio) GetBandProfileId() string {
	if x != nil && x.BandProfileId != nil {
		return *x.BandProfileId
	}
	return ""
}

type LinkEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *common.NetworkInterfaceId `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (x *LinkEnd) Reset() {
	*x = LinkEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEnd) ProtoMessage() {}

func (x *LinkEnd) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEnd.ProtoReflect.Descriptor instead.
func (*LinkEnd) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{3}
}

func (x *LinkEnd) GetId() *common.NetworkInterfaceId {
	if x != nil {
		return x.Id
	}
	return nil
}

type BeamTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*BeamTarget_TransceiverId
	//	*BeamTarget_Coordinates
	Type isBeamTarget_Type `protobuf_oneof:"type"`
}

func (x *BeamTarget) Reset() {
	*x = BeamTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeamTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeamTarget) ProtoMessage() {}

func (x *BeamTarget) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeamTarget.ProtoReflect.Descriptor instead.
func (*BeamTarget) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{4}
}

func (m *BeamTarget) GetType() isBeamTarget_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *BeamTarget) GetTransceiverId() *common.TransceiverModelId {
	if x, ok := x.GetType().(*BeamTarget_TransceiverId); ok {
		return x.TransceiverId
	}
	return nil
}

func (x *BeamTarget) GetCoordinates() *common.Motion {
	if x, ok := x.GetType().(*BeamTarget_Coordinates); ok {
		return x.Coordinates
	}
	return nil
}

type isBeamTarget_Type interface {
	isBeamTarget_Type()
}

type BeamTarget_TransceiverId struct {
	TransceiverId *common.TransceiverModelId `protobuf:"bytes,1,opt,name=transceiver_id,json=transceiverId,oneof"`
}

type BeamTarget_Coordinates struct {
	Coordinates *common.Motion `protobuf:"bytes,2,opt,name=coordinates,oneof"`
}

func (*BeamTarget_TransceiverId) isBeamTarget_Type() {}

func (*BeamTarget_Coordinates) isBeamTarget_Type() {}

type BidirectionalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A         *LinkEnd `protobuf:"bytes,1,opt,name=a" json:"a,omitempty"`
	B         *LinkEnd `protobuf:"bytes,2,opt,name=b" json:"b,omitempty"`
	AToBRadio *Radio   `protobuf:"bytes,3,opt,name=a_to_b_radio,json=aToBRadio" json:"a_to_b_radio,omitempty"`
	BToARadio *Radio   `protobuf:"bytes,4,opt,name=b_to_a_radio,json=bToARadio" json:"b_to_a_radio,omitempty"`
}

func (x *BidirectionalLink) Reset() {
	*x = BidirectionalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidirectionalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidirectionalLink) ProtoMessage() {}

func (x *BidirectionalLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidirectionalLink.ProtoReflect.Descriptor instead.
func (*BidirectionalLink) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{5}
}

func (x *BidirectionalLink) GetA() *LinkEnd {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *BidirectionalLink) GetB() *LinkEnd {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *BidirectionalLink) GetAToBRadio() *Radio {
	if x != nil {
		return x.AToBRadio
	}
	return nil
}

func (x *BidirectionalLink) GetBToARadio() *Radio {
	if x != nil {
		return x.BToARadio
	}
	return nil
}

type DirectionalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *common.NetworkInterfaceId `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	RadioConfiguration *Radio                     `protobuf:"bytes,2,opt,name=radio_configuration,json=radioConfiguration" json:"radio_configuration,omitempty"`
	Target             *BeamTarget                `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
}

func (x *DirectionalLink) Reset() {
	*x = DirectionalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectionalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectionalLink) ProtoMessage() {}

func (x *DirectionalLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectionalLink.ProtoReflect.Descriptor instead.
func (*DirectionalLink) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{6}
}

func (x *DirectionalLink) GetId() *common.NetworkInterfaceId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DirectionalLink) GetRadioConfiguration() *Radio {
	if x != nil {
		return x.RadioConfiguration
	}
	return nil
}

func (x *DirectionalLink) GetTarget() *BeamTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

type WirelessLinkBudget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransmitterAntennaGainInLinkDirectionDb *float64           `protobuf:"fixed64,1,opt,name=transmitter_antenna_gain_in_link_direction_db,json=transmitterAntennaGainInLinkDirectionDb" json:"transmitter_antenna_gain_in_link_direction_db,omitempty"`
	EffectiveIsotropicRadiatedPowerDbw      *float64           `protobuf:"fixed64,2,opt,name=effective_isotropic_radiated_power_dbw,json=effectiveIsotropicRadiatedPowerDbw" json:"effective_isotropic_radiated_power_dbw,omitempty"`
	ComponentPropagationLossDb              map[string]float64 `protobuf:"bytes,15,rep,name=component_propagation_loss_db,json=componentPropagationLossDb" json:"component_propagation_loss_db,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	PropagationLossDb                       *float64           `protobuf:"fixed64,3,opt,name=propagation_loss_db,json=propagationLossDb" json:"propagation_loss_db,omitempty"`
	ReceivedIsotropicPowerDbw               *float64           `protobuf:"fixed64,4,opt,name=received_isotropic_power_dbw,json=receivedIsotropicPowerDbw" json:"received_isotropic_power_dbw,omitempty"`
	ReceivedPowerFluxDensityDbWPerM2        *float64           `protobuf:"fixed64,5,opt,name=received_power_flux_density_db_w_per_m2,json=receivedPowerFluxDensityDbWPerM2" json:"received_power_flux_density_db_w_per_m2,omitempty"`
	ReceiverAntennaGainInLinkDirectionDb    *float64           `protobuf:"fixed64,6,opt,name=receiver_antenna_gain_in_link_direction_db,json=receiverAntennaGainInLinkDirectionDb" json:"receiver_antenna_gain_in_link_direction_db,omitempty"`
	PowerAtReceiverOutputDbw                *float64           `protobuf:"fixed64,7,opt,name=power_at_receiver_output_dbw,json=powerAtReceiverOutputDbw" json:"power_at_receiver_output_dbw,omitempty"`
	CarrierToNoiseDb                        *float64           `protobuf:"fixed64,8,opt,name=carrier_to_noise_db,json=carrierToNoiseDb" json:"carrier_to_noise_db,omitempty"`
	CarrierToNoisePlusInterferenceDb        *float64           `protobuf:"fixed64,16,opt,name=carrier_to_noise_plus_interference_db,json=carrierToNoisePlusInterferenceDb" json:"carrier_to_noise_plus_interference_db,omitempty"`
	CarrierToNoiseDensityDbPerHz            *float64           `protobuf:"fixed64,9,opt,name=carrier_to_noise_density_db_per_hz,json=carrierToNoiseDensityDbPerHz" json:"carrier_to_noise_density_db_per_hz,omitempty"`
}

func (x *WirelessLinkBudget) Reset() {
	*x = WirelessLinkBudget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirelessLinkBudget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirelessLinkBudget) ProtoMessage() {}

func (x *WirelessLinkBudget) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirelessLinkBudget.ProtoReflect.Descriptor instead.
func (*WirelessLinkBudget) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{7}
}

func (x *WirelessLinkBudget) GetTransmitterAntennaGainInLinkDirectionDb() float64 {
	if x != nil && x.TransmitterAntennaGainInLinkDirectionDb != nil {
		return *x.TransmitterAntennaGainInLinkDirectionDb
	}
	return 0
}

func (x *WirelessLinkBudget) GetEffectiveIsotropicRadiatedPowerDbw() float64 {
	if x != nil && x.EffectiveIsotropicRadiatedPowerDbw != nil {
		return *x.EffectiveIsotropicRadiatedPowerDbw
	}
	return 0
}

func (x *WirelessLinkBudget) GetComponentPropagationLossDb() map[string]float64 {
	if x != nil {
		return x.ComponentPropagationLossDb
	}
	return nil
}

func (x *WirelessLinkBudget) GetPropagationLossDb() float64 {
	if x != nil && x.PropagationLossDb != nil {
		return *x.PropagationLossDb
	}
	return 0
}

func (x *WirelessLinkBudget) GetReceivedIsotropicPowerDbw() float64 {
	if x != nil && x.ReceivedIsotropicPowerDbw != nil {
		return *x.ReceivedIsotropicPowerDbw
	}
	return 0
}

func (x *WirelessLinkBudget) GetReceivedPowerFluxDensityDbWPerM2() float64 {
	if x != nil && x.ReceivedPowerFluxDensityDbWPerM2 != nil {
		return *x.ReceivedPowerFluxDensityDbWPerM2
	}
	return 0
}

func (x *WirelessLinkBudget) GetReceiverAntennaGainInLinkDirectionDb() float64 {
	if x != nil && x.ReceiverAntennaGainInLinkDirectionDb != nil {
		return *x.ReceiverAntennaGainInLinkDirectionDb
	}
	return 0
}

func (x *WirelessLinkBudget) GetPowerAtReceiverOutputDbw() float64 {
	if x != nil && x.PowerAtReceiverOutputDbw != nil {
		return *x.PowerAtReceiverOutputDbw
	}
	return 0
}

func (x *WirelessLinkBudget) GetCarrierToNoiseDb() float64 {
	if x != nil && x.CarrierToNoiseDb != nil {
		return *x.CarrierToNoiseDb
	}
	return 0
}

func (x *WirelessLinkBudget) GetCarrierToNoisePlusInterferenceDb() float64 {
	if x != nil && x.CarrierToNoisePlusInterferenceDb != nil {
		return *x.CarrierToNoisePlusInterferenceDb
	}
	return 0
}

func (x *WirelessLinkBudget) GetCarrierToNoiseDensityDbPerHz() float64 {
	if x != nil && x.CarrierToNoiseDensityDbPerHz != nil {
		return *x.CarrierToNoiseDensityDbPerHz
	}
	return 0
}

type WirelessLinkReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dst                 *common.TransceiverModelId                   `protobuf:"bytes,1,opt,name=dst" json:"dst,omitempty"`
	BandProfileId       *string                                      `protobuf:"bytes,2,opt,name=band_profile_id,json=bandProfileId" json:"band_profile_id,omitempty"`
	CenterFrequenciesHz []uint64                                     `protobuf:"varint,3,rep,name=center_frequencies_hz,json=centerFrequenciesHz" json:"center_frequencies_hz,omitempty"`
	AccessIntervals     []*WirelessLinkReport_WirelessAccessInterval `protobuf:"bytes,4,rep,name=access_intervals,json=accessIntervals" json:"access_intervals,omitempty"`
}

func (x *WirelessLinkReport) Reset() {
	*x = WirelessLinkReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirelessLinkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirelessLinkReport) ProtoMessage() {}

func (x *WirelessLinkReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirelessLinkReport.ProtoReflect.Descriptor instead.
func (*WirelessLinkReport) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{8}
}

func (x *WirelessLinkReport) GetDst() *common.TransceiverModelId {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *WirelessLinkReport) GetBandProfileId() string {
	if x != nil && x.BandProfileId != nil {
		return *x.BandProfileId
	}
	return ""
}

func (x *WirelessLinkReport) GetCenterFrequenciesHz() []uint64 {
	if x != nil {
		return x.CenterFrequenciesHz
	}
	return nil
}

func (x *WirelessLinkReport) GetAccessIntervals() []*WirelessLinkReport_WirelessAccessInterval {
	if x != nil {
		return x.AccessIntervals
	}
	return nil
}

type InterfaceLinkReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src             *common.NetworkInterfaceId            `protobuf:"bytes,4,opt,name=src" json:"src,omitempty"`
	Dst             *common.NetworkInterfaceId            `protobuf:"bytes,5,opt,name=dst" json:"dst,omitempty"`
	AccessIntervals []*InterfaceLinkReport_AccessInterval `protobuf:"bytes,6,rep,name=access_intervals,json=accessIntervals" json:"access_intervals,omitempty"`
}

func (x *InterfaceLinkReport) Reset() {
	*x = InterfaceLinkReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceLinkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceLinkReport) ProtoMessage() {}

func (x *InterfaceLinkReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceLinkReport.ProtoReflect.Descriptor instead.
func (*InterfaceLinkReport) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{9}
}

func (x *InterfaceLinkReport) GetSrc() *common.NetworkInterfaceId {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *InterfaceLinkReport) GetDst() *common.NetworkInterfaceId {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *InterfaceLinkReport) GetAccessIntervals() []*InterfaceLinkReport_AccessInterval {
	if x != nil {
		return x.AccessIntervals
	}
	return nil
}

type TransceiverLinkReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src   *common.TransceiverModelId `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Links []*WirelessLinkReport      `protobuf:"bytes,2,rep,name=links" json:"links,omitempty"`
}

func (x *TransceiverLinkReport) Reset() {
	*x = TransceiverLinkReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransceiverLinkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransceiverLinkReport) ProtoMessage() {}

func (x *TransceiverLinkReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransceiverLinkReport.ProtoReflect.Descriptor instead.
func (*TransceiverLinkReport) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{10}
}

func (x *TransceiverLinkReport) GetSrc() *common.TransceiverModelId {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *TransceiverLinkReport) GetLinks() []*WirelessLinkReport {
	if x != nil {
		return x.Links
	}
	return nil
}

type WirelessLinkReport_WirelessAccessInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval       *common.TimeInterval                                             `protobuf:"bytes,1,opt,name=interval" json:"interval,omitempty"`
	Accessibility  *Accessibility                                                   `protobuf:"varint,2,opt,name=accessibility,enum=aalyria.spacetime.api.nbi.v1alpha.resources.Accessibility" json:"accessibility,omitempty"`
	NoAccessReason []string                                                         `protobuf:"bytes,3,rep,name=no_access_reason,json=noAccessReason" json:"no_access_reason,omitempty"`
	SampledMetrics []*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics `protobuf:"bytes,4,rep,name=sampled_metrics,json=sampledMetrics" json:"sampled_metrics,omitempty"`
}

func (x *WirelessLinkReport_WirelessAccessInterval) Reset() {
	*x = WirelessLinkReport_WirelessAccessInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirelessLinkReport_WirelessAccessInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirelessLinkReport_WirelessAccessInterval) ProtoMessage() {}

func (x *WirelessLinkReport_WirelessAccessInterval) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirelessLinkReport_WirelessAccessInterval.ProtoReflect.Descriptor instead.
func (*WirelessLinkReport_WirelessAccessInterval) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{8, 0}
}

func (x *WirelessLinkReport_WirelessAccessInterval) GetInterval() *common.TimeInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *WirelessLinkReport_WirelessAccessInterval) GetAccessibility() Accessibility {
	if x != nil && x.Accessibility != nil {
		return *x.Accessibility
	}
	return Accessibility_ACCESS_UNKNOWN
}

func (x *WirelessLinkReport_WirelessAccessInterval) GetNoAccessReason() []string {
	if x != nil {
		return x.NoAccessReason
	}
	return nil
}

func (x *WirelessLinkReport_WirelessAccessInterval) GetSampledMetrics() []*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics {
	if x != nil {
		return x.SampledMetrics
	}
	return nil
}

type WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp                               *common.DateTime       `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	PropagationDelay                        *common.Duration       `protobuf:"bytes,2,opt,name=propagation_delay,json=propagationDelay" json:"propagation_delay,omitempty"`
	PointingVector                          *common.PointingVector `protobuf:"bytes,3,opt,name=pointing_vector,json=pointingVector" json:"pointing_vector,omitempty"`
	RangeM                                  *float64               `protobuf:"fixed64,4,opt,name=range_m,json=rangeM" json:"range_m,omitempty"`
	DataRateBps                             *float64               `protobuf:"fixed64,6,opt,name=data_rate_bps,json=dataRateBps" json:"data_rate_bps,omitempty"`
	TransmitterAntennaGainInLinkDirectionDb *float64               `protobuf:"fixed64,7,opt,name=transmitter_antenna_gain_in_link_direction_db,json=transmitterAntennaGainInLinkDirectionDb" json:"transmitter_antenna_gain_in_link_direction_db,omitempty"`
	ReceiverAntennaGainInLinkDirectionDb    *float64               `protobuf:"fixed64,8,opt,name=receiver_antenna_gain_in_link_direction_db,json=receiverAntennaGainInLinkDirectionDb" json:"receiver_antenna_gain_in_link_direction_db,omitempty"`
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) Reset() {
	*x = WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) ProtoMessage() {}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics.ProtoReflect.Descriptor instead.
func (*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetTimestamp() *common.DateTime {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetPropagationDelay() *common.Duration {
	if x != nil {
		return x.PropagationDelay
	}
	return nil
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetPointingVector() *common.PointingVector {
	if x != nil {
		return x.PointingVector
	}
	return nil
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetRangeM() float64 {
	if x != nil && x.RangeM != nil {
		return *x.RangeM
	}
	return 0
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetDataRateBps() float64 {
	if x != nil && x.DataRateBps != nil {
		return *x.DataRateBps
	}
	return 0
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetTransmitterAntennaGainInLinkDirectionDb() float64 {
	if x != nil && x.TransmitterAntennaGainInLinkDirectionDb != nil {
		return *x.TransmitterAntennaGainInLinkDirectionDb
	}
	return 0
}

func (x *WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics) GetReceiverAntennaGainInLinkDirectionDb() float64 {
	if x != nil && x.ReceiverAntennaGainInLinkDirectionDb != nil {
		return *x.ReceiverAntennaGainInLinkDirectionDb
	}
	return 0
}

type InterfaceLinkReport_AccessInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval      *common.TimeInterval `protobuf:"bytes,1,opt,name=interval" json:"interval,omitempty"`
	Accessibility *Accessibility       `protobuf:"varint,2,opt,name=accessibility,enum=aalyria.spacetime.api.nbi.v1alpha.resources.Accessibility" json:"accessibility,omitempty"`
	FrameDelay    *common.Duration     `protobuf:"bytes,3,opt,name=frame_delay,json=frameDelay" json:"frame_delay,omitempty"`
	DataRateBps   *float64             `protobuf:"fixed64,4,opt,name=data_rate_bps,json=dataRateBps" json:"data_rate_bps,omitempty"`
}

func (x *InterfaceLinkReport_AccessInterval) Reset() {
	*x = InterfaceLinkReport_AccessInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceLinkReport_AccessInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceLinkReport_AccessInterval) ProtoMessage() {}

func (x *InterfaceLinkReport_AccessInterval) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceLinkReport_AccessInterval.ProtoReflect.Descriptor instead.
func (*InterfaceLinkReport_AccessInterval) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP(), []int{9, 0}
}

func (x *InterfaceLinkReport_AccessInterval) GetInterval() *common.TimeInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *InterfaceLinkReport_AccessInterval) GetAccessibility() Accessibility {
	if x != nil && x.Accessibility != nil {
		return *x.Accessibility
	}
	return Accessibility_ACCESS_UNKNOWN
}

func (x *InterfaceLinkReport_AccessInterval) GetFrameDelay() *common.Duration {
	if x != nil {
		return x.FrameDelay
	}
	return nil
}

func (x *InterfaceLinkReport_AccessInterval) GetDataRateBps() float64 {
	if x != nil && x.DataRateBps != nil {
		return *x.DataRateBps
	}
	return 0
}

var File_api_nbi_v1alpha_resources_network_link_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_resources_network_link_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x1e, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x72, 0x61, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x42, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x42, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x03, 0x64, 0x73, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xfb, 0x02, 0x0a, 0x12, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x49, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x07, 0x74, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x08,
	0x72, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x72, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x64, 0x6d, 0x61,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x64, 0x6d, 0x61, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x0c, 0x74, 0x64, 0x6d,
	0x61, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4a, 0x08, 0x08, 0x06, 0x10, 0x80, 0x80,
	0x80, 0x80, 0x02, 0x22, 0x5f, 0x0a, 0x05, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x26, 0x0a, 0x0f,
	0x62, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x07, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x64, 0x12,
	0x40, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08,
	0x04, 0x10, 0x05, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x42, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x59, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x48, 0x0a,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xc5, 0x02, 0x0a, 0x11, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x42, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x01, 0x61, 0x12, 0x42, 0x0a, 0x01, 0x62, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x6e, 0x64, 0x52, 0x01, 0x62, 0x12, 0x53, 0x0a,
	0x0c, 0x61, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x52, 0x09, 0x61, 0x54, 0x6f, 0x42, 0x52, 0x61, 0x64,
	0x69, 0x6f, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x5f, 0x72, 0x61, 0x64,
	0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x52, 0x09, 0x62, 0x54,
	0x6f, 0x41, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x22, 0x89, 0x02, 0x0a, 0x0f, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x40, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x63, 0x0a,
	0x13, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x52, 0x12,
	0x72, 0x61, 0x64, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x42, 0x65, 0x61, 0x6d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0xf4, 0x07, 0x0a, 0x12, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x2d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e,
	0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x27, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41, 0x6e,
	0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x62, 0x12, 0x52, 0x0a, 0x26, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x73, 0x6f, 0x74, 0x72, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x64, 0x62, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x22, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x73, 0x6f, 0x74, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x61,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x62, 0x77, 0x12, 0xa2,
	0x01, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x64, 0x62,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e,
	0x6b, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x73, 0x73,
	0x44, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x73,
	0x73, 0x44, 0x62, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x73,
	0x73, 0x44, 0x62, 0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x69, 0x73, 0x6f, 0x74, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x64, 0x62, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x49, 0x73, 0x6f, 0x74, 0x72, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x44, 0x62, 0x77, 0x12, 0x51, 0x0a, 0x27, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x78, 0x5f, 0x64, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x62, 0x5f, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x78, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44,
	0x62, 0x57, 0x50, 0x65, 0x72, 0x4d, 0x32, 0x12, 0x58, 0x0a, 0x2a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x24, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x62, 0x12, 0x3e, 0x0a, 0x1c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x62,
	0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x62,
	0x77, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f,
	0x6e, 0x6f, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44, 0x62,
	0x12, 0x4f, 0x0a, 0x25, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x6e,
	0x6f, 0x69, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x20, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x50,
	0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x44,
	0x62, 0x12, 0x48, 0x0a, 0x22, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f,
	0x6e, 0x6f, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x62,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1c, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73, 0x65, 0x44, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x44, 0x62, 0x50, 0x65, 0x72, 0x48, 0x7a, 0x1a, 0x4d, 0x0a, 0x1f, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x44, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0f,
	0x4a, 0x08, 0x08, 0x11, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0xbe, 0x09, 0x0a, 0x12, 0x57,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x42, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64,
	0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x5f, 0x68, 0x7a, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x13, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x48,
	0x7a, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57, 0x69,
	0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x73, 0x1a, 0x83, 0x07, 0x0a, 0x16, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x46, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x60, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x93, 0x01, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6a,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x72,
	0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0xfe, 0x03, 0x0a, 0x13, 0x57,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x53, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x55, 0x0a,
	0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x12, 0x22, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42, 0x70,
	0x73, 0x12, 0x5e, 0x0a, 0x2d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x27, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x62, 0x12, 0x58, 0x0a, 0x2a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6e,
	0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x62, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x24, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x47, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x62, 0x22, 0xd5, 0x04, 0x0a, 0x13,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x42, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x10, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x1a, 0xa7, 0x02, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x60, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42, 0x70,
	0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a,
	0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x52, 0x03, 0x73, 0x72,
	0x63, 0x12, 0x55, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2a, 0x5a, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4d, 0x41, 0x52, 0x47, 0x49,
	0x4e, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x42, 0x62, 0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5a, 0x2f, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
}

var (
	file_api_nbi_v1alpha_resources_network_link_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_resources_network_link_proto_rawDescData = file_api_nbi_v1alpha_resources_network_link_proto_rawDesc
)

func file_api_nbi_v1alpha_resources_network_link_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_resources_network_link_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_resources_network_link_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_resources_network_link_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_resources_network_link_proto_rawDescData
}

var file_api_nbi_v1alpha_resources_network_link_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_nbi_v1alpha_resources_network_link_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_nbi_v1alpha_resources_network_link_proto_goTypes = []interface{}{
	(Accessibility)(0),            // 0: aalyria.spacetime.api.nbi.v1alpha.resources.Accessibility
	(*NetworkLink)(nil),           // 1: aalyria.spacetime.api.nbi.v1alpha.resources.NetworkLink
	(*RadioConfiguration)(nil),    // 2: aalyria.spacetime.api.nbi.v1alpha.resources.RadioConfiguration
	(*Radio)(nil),                 // 3: aalyria.spacetime.api.nbi.v1alpha.resources.Radio
	(*LinkEnd)(nil),               // 4: aalyria.spacetime.api.nbi.v1alpha.resources.LinkEnd
	(*BeamTarget)(nil),            // 5: aalyria.spacetime.api.nbi.v1alpha.resources.BeamTarget
	(*BidirectionalLink)(nil),     // 6: aalyria.spacetime.api.nbi.v1alpha.resources.BidirectionalLink
	(*DirectionalLink)(nil),       // 7: aalyria.spacetime.api.nbi.v1alpha.resources.DirectionalLink
	(*WirelessLinkBudget)(nil),    // 8: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkBudget
	(*WirelessLinkReport)(nil),    // 9: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport
	(*InterfaceLinkReport)(nil),   // 10: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport
	(*TransceiverLinkReport)(nil), // 11: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverLinkReport
	nil,                           // 12: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkBudget.ComponentPropagationLossDbEntry
	(*WirelessLinkReport_WirelessAccessInterval)(nil),                     // 13: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval
	(*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics)(nil), // 14: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.WirelessLinkMetrics
	(*InterfaceLinkReport_AccessInterval)(nil),                            // 15: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.AccessInterval
	(*common.NetworkInterfaceId)(nil),                                     // 16: aalyria.spacetime.api.common.NetworkInterfaceId
	(*common.TransmitterState)(nil),                                       // 17: aalyria.spacetime.api.common.TransmitterState
	(*common.ReceiverState)(nil),                                          // 18: aalyria.spacetime.api.common.ReceiverState
	(*common.TdmaSchedule)(nil),                                           // 19: aalyria.spacetime.api.common.TdmaSchedule
	(*common.TransceiverModelId)(nil),                                     // 20: aalyria.spacetime.api.common.TransceiverModelId
	(*common.Motion)(nil),                                                 // 21: aalyria.spacetime.api.common.Motion
	(*common.TimeInterval)(nil),                                           // 22: aalyria.spacetime.api.common.TimeInterval
	(*common.DateTime)(nil),                                               // 23: aalyria.spacetime.api.common.DateTime
	(*common.Duration)(nil),                                               // 24: aalyria.spacetime.api.common.Duration
	(*common.PointingVector)(nil),                                         // 25: aalyria.spacetime.api.common.PointingVector
}
var file_api_nbi_v1alpha_resources_network_link_proto_depIdxs = []int32{
	16, // 0: aalyria.spacetime.api.nbi.v1alpha.resources.NetworkLink.src:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	16, // 1: aalyria.spacetime.api.nbi.v1alpha.resources.NetworkLink.dst:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	16, // 2: aalyria.spacetime.api.nbi.v1alpha.resources.RadioConfiguration.interface_id:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	17, // 3: aalyria.spacetime.api.nbi.v1alpha.resources.RadioConfiguration.tx_state:type_name -> aalyria.spacetime.api.common.TransmitterState
	18, // 4: aalyria.spacetime.api.nbi.v1alpha.resources.RadioConfiguration.rx_state:type_name -> aalyria.spacetime.api.common.ReceiverState
	19, // 5: aalyria.spacetime.api.nbi.v1alpha.resources.RadioConfiguration.tdma_schedule:type_name -> aalyria.spacetime.api.common.TdmaSchedule
	16, // 6: aalyria.spacetime.api.nbi.v1alpha.resources.LinkEnd.id:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	20, // 7: aalyria.spacetime.api.nbi.v1alpha.resources.BeamTarget.transceiver_id:type_name -> aalyria.spacetime.api.common.TransceiverModelId
	21, // 8: aalyria.spacetime.api.nbi.v1alpha.resources.BeamTarget.coordinates:type_name -> aalyria.spacetime.api.common.Motion
	4,  // 9: aalyria.spacetime.api.nbi.v1alpha.resources.BidirectionalLink.a:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.LinkEnd
	4,  // 10: aalyria.spacetime.api.nbi.v1alpha.resources.BidirectionalLink.b:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.LinkEnd
	3,  // 11: aalyria.spacetime.api.nbi.v1alpha.resources.BidirectionalLink.a_to_b_radio:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Radio
	3,  // 12: aalyria.spacetime.api.nbi.v1alpha.resources.BidirectionalLink.b_to_a_radio:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Radio
	16, // 13: aalyria.spacetime.api.nbi.v1alpha.resources.DirectionalLink.id:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	3,  // 14: aalyria.spacetime.api.nbi.v1alpha.resources.DirectionalLink.radio_configuration:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Radio
	5,  // 15: aalyria.spacetime.api.nbi.v1alpha.resources.DirectionalLink.target:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.BeamTarget
	12, // 16: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkBudget.component_propagation_loss_db:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkBudget.ComponentPropagationLossDbEntry
	20, // 17: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.dst:type_name -> aalyria.spacetime.api.common.TransceiverModelId
	13, // 18: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.access_intervals:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval
	16, // 19: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.src:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	16, // 20: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.dst:type_name -> aalyria.spacetime.api.common.NetworkInterfaceId
	15, // 21: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.access_intervals:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.AccessInterval
	20, // 22: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverLinkReport.src:type_name -> aalyria.spacetime.api.common.TransceiverModelId
	9,  // 23: aalyria.spacetime.api.nbi.v1alpha.resources.TransceiverLinkReport.links:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport
	22, // 24: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.interval:type_name -> aalyria.spacetime.api.common.TimeInterval
	0,  // 25: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.accessibility:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Accessibility
	14, // 26: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.sampled_metrics:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.WirelessLinkMetrics
	23, // 27: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.WirelessLinkMetrics.timestamp:type_name -> aalyria.spacetime.api.common.DateTime
	24, // 28: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.WirelessLinkMetrics.propagation_delay:type_name -> aalyria.spacetime.api.common.Duration
	25, // 29: aalyria.spacetime.api.nbi.v1alpha.resources.WirelessLinkReport.WirelessAccessInterval.WirelessLinkMetrics.pointing_vector:type_name -> aalyria.spacetime.api.common.PointingVector
	22, // 30: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.AccessInterval.interval:type_name -> aalyria.spacetime.api.common.TimeInterval
	0,  // 31: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.AccessInterval.accessibility:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.Accessibility
	24, // 32: aalyria.spacetime.api.nbi.v1alpha.resources.InterfaceLinkReport.AccessInterval.frame_delay:type_name -> aalyria.spacetime.api.common.Duration
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_resources_network_link_proto_init() }
func file_api_nbi_v1alpha_resources_network_link_proto_init() {
	if File_api_nbi_v1alpha_resources_network_link_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Radio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeamTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidirectionalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectionalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirelessLinkBudget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirelessLinkReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceLinkReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransceiverLinkReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirelessLinkReport_WirelessAccessInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WirelessLinkReport_WirelessAccessInterval_WirelessLinkMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceLinkReport_AccessInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_nbi_v1alpha_resources_network_link_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*BeamTarget_TransceiverId)(nil),
		(*BeamTarget_Coordinates)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_resources_network_link_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_nbi_v1alpha_resources_network_link_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_resources_network_link_proto_depIdxs,
		EnumInfos:         file_api_nbi_v1alpha_resources_network_link_proto_enumTypes,
		MessageInfos:      file_api_nbi_v1alpha_resources_network_link_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_resources_network_link_proto = out.File
	file_api_nbi_v1alpha_resources_network_link_proto_rawDesc = nil
	file_api_nbi_v1alpha_resources_network_link_proto_goTypes = nil
	file_api_nbi_v1alpha_resources_network_link_proto_depIdxs = nil
}
