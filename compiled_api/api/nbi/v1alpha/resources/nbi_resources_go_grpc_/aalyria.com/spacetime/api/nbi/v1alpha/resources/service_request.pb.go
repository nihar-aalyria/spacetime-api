// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/nbi/v1alpha/resources/service_request.proto

package resources

import (
	common "aalyria.com/spacetime/api/common"
	interval "google.golang.org/genproto/googleapis/type/interval"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceRequest_FlowType int32

const (
	ServiceRequest_FLOW_TYPE_UNSPECIFIED  ServiceRequest_FlowType = 0
	ServiceRequest_SDN_CONTROL_MANAGEMENT ServiceRequest_FlowType = 1
	ServiceRequest_SDN_FORWARDING         ServiceRequest_FlowType = 2
)

// Enum value maps for ServiceRequest_FlowType.
var (
	ServiceRequest_FlowType_name = map[int32]string{
		0: "FLOW_TYPE_UNSPECIFIED",
		1: "SDN_CONTROL_MANAGEMENT",
		2: "SDN_FORWARDING",
	}
	ServiceRequest_FlowType_value = map[string]int32{
		"FLOW_TYPE_UNSPECIFIED":  0,
		"SDN_CONTROL_MANAGEMENT": 1,
		"SDN_FORWARDING":         2,
	}
)

func (x ServiceRequest_FlowType) Enum() *ServiceRequest_FlowType {
	p := new(ServiceRequest_FlowType)
	*p = x
	return p
}

func (x ServiceRequest_FlowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceRequest_FlowType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[0].Descriptor()
}

func (ServiceRequest_FlowType) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[0]
}

func (x ServiceRequest_FlowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ServiceRequest_FlowType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ServiceRequest_FlowType(num)
	return nil
}

// Deprecated: Use ServiceRequest_FlowType.Descriptor instead.
func (ServiceRequest_FlowType) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{1, 0}
}

type DrainProvision_State int32

const (
	DrainProvision_STATE_UNSPECIFIED DrainProvision_State = 0
	DrainProvision_PENDING           DrainProvision_State = 1
	DrainProvision_UNSATISFIED       DrainProvision_State = 2
	DrainProvision_ENACTING          DrainProvision_State = 3
	DrainProvision_ENACTED           DrainProvision_State = 4
	DrainProvision_DELETING          DrainProvision_State = 5
	DrainProvision_DELETED           DrainProvision_State = 6
)

// Enum value maps for DrainProvision_State.
var (
	DrainProvision_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "PENDING",
		2: "UNSATISFIED",
		3: "ENACTING",
		4: "ENACTED",
		5: "DELETING",
		6: "DELETED",
	}
	DrainProvision_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"PENDING":           1,
		"UNSATISFIED":       2,
		"ENACTING":          3,
		"ENACTED":           4,
		"DELETING":          5,
		"DELETED":           6,
	}
)

func (x DrainProvision_State) Enum() *DrainProvision_State {
	p := new(DrainProvision_State)
	*p = x
	return p
}

func (x DrainProvision_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrainProvision_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[1].Descriptor()
}

func (DrainProvision_State) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[1]
}

func (x DrainProvision_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DrainProvision_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DrainProvision_State(num)
	return nil
}

// Deprecated: Use DrainProvision_State.Descriptor instead.
func (DrainProvision_State) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{2, 0}
}

type DrainProvision_Method int32

const (
	DrainProvision_METHOD_UNSPECIFIED DrainProvision_Method = 0
	DrainProvision_WAIT               DrainProvision_Method = 1
	DrainProvision_FORCE              DrainProvision_Method = 2
)

// Enum value maps for DrainProvision_Method.
var (
	DrainProvision_Method_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "WAIT",
		2: "FORCE",
	}
	DrainProvision_Method_value = map[string]int32{
		"METHOD_UNSPECIFIED": 0,
		"WAIT":               1,
		"FORCE":              2,
	}
)

func (x DrainProvision_Method) Enum() *DrainProvision_Method {
	p := new(DrainProvision_Method)
	*p = x
	return p
}

func (x DrainProvision_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrainProvision_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[2].Descriptor()
}

func (DrainProvision_Method) Type() protoreflect.EnumType {
	return &file_api_nbi_v1alpha_resources_service_request_proto_enumTypes[2]
}

func (x DrainProvision_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DrainProvision_Method) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DrainProvision_Method(num)
	return nil
}

// Deprecated: Use DrainProvision_Method.Descriptor instead.
func (DrainProvision_Method) EnumDescriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{2, 1}
}

type TunnelConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcInterfaceId *string                `protobuf:"bytes,1,opt,name=src_interface_id,json=srcInterfaceId" json:"src_interface_id,omitempty"`
	DstInterfaceId *string                `protobuf:"bytes,2,opt,name=dst_interface_id,json=dstInterfaceId" json:"dst_interface_id,omitempty"`
	Method         *common.TunnelMethod   `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	Classifier     *common.FlowClassifier `protobuf:"bytes,4,opt,name=classifier" json:"classifier,omitempty"`
}

func (x *TunnelConfiguration) Reset() {
	*x = TunnelConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelConfiguration) ProtoMessage() {}

func (x *TunnelConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelConfiguration.ProtoReflect.Descriptor instead.
func (*TunnelConfiguration) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{0}
}

func (x *TunnelConfiguration) GetSrcInterfaceId() string {
	if x != nil && x.SrcInterfaceId != nil {
		return *x.SrcInterfaceId
	}
	return ""
}

func (x *TunnelConfiguration) GetDstInterfaceId() string {
	if x != nil && x.DstInterfaceId != nil {
		return *x.DstInterfaceId
	}
	return ""
}

func (x *TunnelConfiguration) GetMethod() *common.TunnelMethod {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *TunnelConfiguration) GetClassifier() *common.FlowClassifier {
	if x != nil {
		return x.Classifier
	}
	return nil
}

type ServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *string `protobuf:"bytes,13,opt,name=type" json:"type,omitempty"`
	// Types that are assignable to SrcType:
	//
	//	*ServiceRequest_SrcNodeId
	//	*ServiceRequest_SrcDevicesInRegionId
	SrcType isServiceRequest_SrcType `protobuf_oneof:"src_type"`
	// Types that are assignable to DstType:
	//
	//	*ServiceRequest_DstNodeId
	//	*ServiceRequest_DstDevicesInRegionId
	DstType              isServiceRequest_DstType             `protobuf_oneof:"dst_type"`
	Classifier           *common.FlowClassifier               `protobuf:"bytes,9,opt,name=classifier" json:"classifier,omitempty"`
	Tunnels              []*TunnelConfiguration               `protobuf:"bytes,10,rep,name=tunnels" json:"tunnels,omitempty"`
	Priority             *float64                             `protobuf:"fixed64,6,opt,name=priority" json:"priority,omitempty"`
	FlowType             *ServiceRequest_FlowType             `protobuf:"varint,11,opt,name=flow_type,json=flowType,enum=aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest_FlowType" json:"flow_type,omitempty"`
	Requirements         []*ServiceRequest_FlowRequirements   `protobuf:"bytes,4,rep,name=requirements" json:"requirements,omitempty"`
	RedundancyGroup      *ServiceRequest_RedundancyGroup      `protobuf:"bytes,12,opt,name=redundancy_group,json=redundancyGroup" json:"redundancy_group,omitempty"`
	IsProvisionedNow     *bool                                `protobuf:"varint,5,opt,name=is_provisioned_now,json=isProvisionedNow" json:"is_provisioned_now,omitempty"`
	ProvisionedIntervals []*interval.Interval                 `protobuf:"bytes,15,rep,name=provisioned_intervals,json=provisionedIntervals" json:"provisioned_intervals,omitempty"`
	IntentDependencies   []*ServiceRequest_IntentAndIntervals `protobuf:"bytes,14,rep,name=intent_dependencies,json=intentDependencies" json:"intent_dependencies,omitempty"`
}

func (x *ServiceRequest) Reset() {
	*x = ServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRequest) ProtoMessage() {}

func (x *ServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRequest.ProtoReflect.Descriptor instead.
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (m *ServiceRequest) GetSrcType() isServiceRequest_SrcType {
	if m != nil {
		return m.SrcType
	}
	return nil
}

func (x *ServiceRequest) GetSrcNodeId() string {
	if x, ok := x.GetSrcType().(*ServiceRequest_SrcNodeId); ok {
		return x.SrcNodeId
	}
	return ""
}

func (x *ServiceRequest) GetSrcDevicesInRegionId() string {
	if x, ok := x.GetSrcType().(*ServiceRequest_SrcDevicesInRegionId); ok {
		return x.SrcDevicesInRegionId
	}
	return ""
}

func (m *ServiceRequest) GetDstType() isServiceRequest_DstType {
	if m != nil {
		return m.DstType
	}
	return nil
}

func (x *ServiceRequest) GetDstNodeId() string {
	if x, ok := x.GetDstType().(*ServiceRequest_DstNodeId); ok {
		return x.DstNodeId
	}
	return ""
}

func (x *ServiceRequest) GetDstDevicesInRegionId() string {
	if x, ok := x.GetDstType().(*ServiceRequest_DstDevicesInRegionId); ok {
		return x.DstDevicesInRegionId
	}
	return ""
}

func (x *ServiceRequest) GetClassifier() *common.FlowClassifier {
	if x != nil {
		return x.Classifier
	}
	return nil
}

func (x *ServiceRequest) GetTunnels() []*TunnelConfiguration {
	if x != nil {
		return x.Tunnels
	}
	return nil
}

func (x *ServiceRequest) GetPriority() float64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *ServiceRequest) GetFlowType() ServiceRequest_FlowType {
	if x != nil && x.FlowType != nil {
		return *x.FlowType
	}
	return ServiceRequest_FLOW_TYPE_UNSPECIFIED
}

func (x *ServiceRequest) GetRequirements() []*ServiceRequest_FlowRequirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *ServiceRequest) GetRedundancyGroup() *ServiceRequest_RedundancyGroup {
	if x != nil {
		return x.RedundancyGroup
	}
	return nil
}

func (x *ServiceRequest) GetIsProvisionedNow() bool {
	if x != nil && x.IsProvisionedNow != nil {
		return *x.IsProvisionedNow
	}
	return false
}

func (x *ServiceRequest) GetProvisionedIntervals() []*interval.Interval {
	if x != nil {
		return x.ProvisionedIntervals
	}
	return nil
}

func (x *ServiceRequest) GetIntentDependencies() []*ServiceRequest_IntentAndIntervals {
	if x != nil {
		return x.IntentDependencies
	}
	return nil
}

type isServiceRequest_SrcType interface {
	isServiceRequest_SrcType()
}

type ServiceRequest_SrcNodeId struct {
	SrcNodeId string `protobuf:"bytes,2,opt,name=src_node_id,json=srcNodeId,oneof"`
}

type ServiceRequest_SrcDevicesInRegionId struct {
	SrcDevicesInRegionId string `protobuf:"bytes,8,opt,name=src_devices_in_region_id,json=srcDevicesInRegionId,oneof"`
}

func (*ServiceRequest_SrcNodeId) isServiceRequest_SrcType() {}

func (*ServiceRequest_SrcDevicesInRegionId) isServiceRequest_SrcType() {}

type isServiceRequest_DstType interface {
	isServiceRequest_DstType()
}

type ServiceRequest_DstNodeId struct {
	DstNodeId string `protobuf:"bytes,16,opt,name=dst_node_id,json=dstNodeId,oneof"`
}

type ServiceRequest_DstDevicesInRegionId struct {
	DstDevicesInRegionId string `protobuf:"bytes,18,opt,name=dst_devices_in_region_id,json=dstDevicesInRegionId,oneof"`
}

func (*ServiceRequest_DstNodeId) isServiceRequest_DstType() {}

func (*ServiceRequest_DstDevicesInRegionId) isServiceRequest_DstType() {}

type DrainProvision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId                        *string                `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Reason                        *string                `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	State                         *DrainProvision_State  `protobuf:"varint,3,opt,name=state,enum=aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision_State" json:"state,omitempty"`
	OpportunisticStartTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=opportunistic_start_time,json=opportunisticStartTime" json:"opportunistic_start_time,omitempty"`
	DeterStartTime                *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deter_start_time,json=deterStartTime" json:"deter_start_time,omitempty"`
	ForceTime                     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=force_time,json=forceTime" json:"force_time,omitempty"`
	AllowControlManagementForNode *bool                  `protobuf:"varint,8,opt,name=allow_control_management_for_node,json=allowControlManagementForNode" json:"allow_control_management_for_node,omitempty"`
	Method                        *DrainProvision_Method `protobuf:"varint,7,opt,name=method,enum=aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision_Method" json:"method,omitempty"`
	CreateTime                    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	SolverSatisfactionTime        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=solver_satisfaction_time,json=solverSatisfactionTime" json:"solver_satisfaction_time,omitempty"`
	EnactingTime                  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=enacting_time,json=enactingTime" json:"enacting_time,omitempty"`
	EnactedTime                   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=enacted_time,json=enactedTime" json:"enacted_time,omitempty"`
	DeletingTime                  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleting_time,json=deletingTime" json:"deleting_time,omitempty"`
	DeletedTime                   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=deleted_time,json=deletedTime" json:"deleted_time,omitempty"`
}

func (x *DrainProvision) Reset() {
	*x = DrainProvision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainProvision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainProvision) ProtoMessage() {}

func (x *DrainProvision) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainProvision.ProtoReflect.Descriptor instead.
func (*DrainProvision) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{2}
}

func (x *DrainProvision) GetNodeId() string {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return ""
}

func (x *DrainProvision) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DrainProvision) GetState() DrainProvision_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return DrainProvision_STATE_UNSPECIFIED
}

func (x *DrainProvision) GetOpportunisticStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OpportunisticStartTime
	}
	return nil
}

func (x *DrainProvision) GetDeterStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeterStartTime
	}
	return nil
}

func (x *DrainProvision) GetForceTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ForceTime
	}
	return nil
}

func (x *DrainProvision) GetAllowControlManagementForNode() bool {
	if x != nil && x.AllowControlManagementForNode != nil {
		return *x.AllowControlManagementForNode
	}
	return false
}

func (x *DrainProvision) GetMethod() DrainProvision_Method {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return DrainProvision_METHOD_UNSPECIFIED
}

func (x *DrainProvision) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DrainProvision) GetSolverSatisfactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SolverSatisfactionTime
	}
	return nil
}

func (x *DrainProvision) GetEnactingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EnactingTime
	}
	return nil
}

func (x *DrainProvision) GetEnactedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EnactedTime
	}
	return nil
}

func (x *DrainProvision) GetDeletingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletingTime
	}
	return nil
}

func (x *DrainProvision) GetDeletedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedTime
	}
	return nil
}

type ServiceRequest_FlowRequirements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInterval          *common.TimeInterval `protobuf:"bytes,1,opt,name=time_interval,json=timeInterval" json:"time_interval,omitempty"`
	BandwidthBpsMinimum   *float64             `protobuf:"fixed64,2,opt,name=bandwidth_bps_minimum,json=bandwidthBpsMinimum" json:"bandwidth_bps_minimum,omitempty"`
	BandwidthBpsRequested *float64             `protobuf:"fixed64,3,opt,name=bandwidth_bps_requested,json=bandwidthBpsRequested" json:"bandwidth_bps_requested,omitempty"`
	LatencyMaximum        *durationpb.Duration `protobuf:"bytes,5,opt,name=latency_maximum,json=latencyMaximum" json:"latency_maximum,omitempty"`
	IsDisruptionTolerant  *bool                `protobuf:"varint,6,opt,name=is_disruption_tolerant,json=isDisruptionTolerant" json:"is_disruption_tolerant,omitempty"`
}

func (x *ServiceRequest_FlowRequirements) Reset() {
	*x = ServiceRequest_FlowRequirements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRequest_FlowRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRequest_FlowRequirements) ProtoMessage() {}

func (x *ServiceRequest_FlowRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRequest_FlowRequirements.ProtoReflect.Descriptor instead.
func (*ServiceRequest_FlowRequirements) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ServiceRequest_FlowRequirements) GetTimeInterval() *common.TimeInterval {
	if x != nil {
		return x.TimeInterval
	}
	return nil
}

func (x *ServiceRequest_FlowRequirements) GetBandwidthBpsMinimum() float64 {
	if x != nil && x.BandwidthBpsMinimum != nil {
		return *x.BandwidthBpsMinimum
	}
	return 0
}

func (x *ServiceRequest_FlowRequirements) GetBandwidthBpsRequested() float64 {
	if x != nil && x.BandwidthBpsRequested != nil {
		return *x.BandwidthBpsRequested
	}
	return 0
}

func (x *ServiceRequest_FlowRequirements) GetLatencyMaximum() *durationpb.Duration {
	if x != nil {
		return x.LatencyMaximum
	}
	return nil
}

func (x *ServiceRequest_FlowRequirements) GetIsDisruptionTolerant() bool {
	if x != nil && x.IsDisruptionTolerant != nil {
		return *x.IsDisruptionTolerant
	}
	return false
}

type ServiceRequest_RedundancyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *ServiceRequest_RedundancyGroup) Reset() {
	*x = ServiceRequest_RedundancyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRequest_RedundancyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRequest_RedundancyGroup) ProtoMessage() {}

func (x *ServiceRequest_RedundancyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRequest_RedundancyGroup.ProtoReflect.Descriptor instead.
func (*ServiceRequest_RedundancyGroup) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ServiceRequest_RedundancyGroup) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type ServiceRequest_IntentAndIntervals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntentId *string              `protobuf:"bytes,1,opt,name=intent_id,json=intentId" json:"intent_id,omitempty"`
	Interval []*interval.Interval `protobuf:"bytes,2,rep,name=interval" json:"interval,omitempty"`
}

func (x *ServiceRequest_IntentAndIntervals) Reset() {
	*x = ServiceRequest_IntentAndIntervals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRequest_IntentAndIntervals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRequest_IntentAndIntervals) ProtoMessage() {}

func (x *ServiceRequest_IntentAndIntervals) ProtoReflect() protoreflect.Message {
	mi := &file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRequest_IntentAndIntervals.ProtoReflect.Descriptor instead.
func (*ServiceRequest_IntentAndIntervals) Descriptor() ([]byte, []int) {
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ServiceRequest_IntentAndIntervals) GetIntentId() string {
	if x != nil && x.IntentId != nil {
		return *x.IntentId
	}
	return ""
}

func (x *ServiceRequest_IntentAndIntervals) GetInterval() []*interval.Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

var File_api_nbi_v1alpha_resources_service_request_proto protoreflect.FileDescriptor

var file_api_nbi_v1alpha_resources_service_request_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2b, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x18,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x02, 0x0a, 0x13, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x72, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x4a, 0x08, 0x08, 0x05, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0xe0, 0x0c,
	0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x72, 0x63,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x72, 0x63, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x73, 0x72, 0x63, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x14, 0x64, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x07, 0x74, 0x75,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x61, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x70, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x76, 0x0a, 0x10, 0x72, 0x65, 0x64, 0x75, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f,
	0x72, 0x65, 0x64, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x4e, 0x6f, 0x77, 0x12, 0x4a, 0x0a,
	0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x7f, 0x0a, 0x13, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0xd9, 0x02, 0x0a, 0x10, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x4f, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x15, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x62, 0x70,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x13, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x70, 0x73, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x12, 0x36, 0x0a, 0x17, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x5f, 0x62, 0x70, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x42, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x73, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x08, 0x08, 0x07,
	0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x1a, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x75, 0x6e, 0x64,
	0x61, 0x6e, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x64, 0x0a, 0x12, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22,
	0x55, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x46,
	0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x44, 0x4e, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x44, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x4a, 0x04, 0x08, 0x11, 0x10, 0x12, 0x4a, 0x08, 0x08, 0x13, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02,
	0x22, 0xdf, 0x08, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a,
	0x18, 0x6f, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x6f, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x75, 0x6e, 0x69, 0x73, 0x74, 0x69, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x5a,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x61,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x18, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x61, 0x74,
	0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x65, 0x6e, 0x61, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e,
	0x53, 0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x45,
	0x4e, 0x41, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x06, 0x22, 0x35, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x4d,
	0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x02, 0x4a, 0x08, 0x08, 0x0f, 0x10, 0x80, 0x80, 0x80,
	0x80, 0x02, 0x42, 0x62, 0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x5a, 0x2f, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6e, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
}

var (
	file_api_nbi_v1alpha_resources_service_request_proto_rawDescOnce sync.Once
	file_api_nbi_v1alpha_resources_service_request_proto_rawDescData = file_api_nbi_v1alpha_resources_service_request_proto_rawDesc
)

func file_api_nbi_v1alpha_resources_service_request_proto_rawDescGZIP() []byte {
	file_api_nbi_v1alpha_resources_service_request_proto_rawDescOnce.Do(func() {
		file_api_nbi_v1alpha_resources_service_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_nbi_v1alpha_resources_service_request_proto_rawDescData)
	})
	return file_api_nbi_v1alpha_resources_service_request_proto_rawDescData
}

var file_api_nbi_v1alpha_resources_service_request_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_nbi_v1alpha_resources_service_request_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_nbi_v1alpha_resources_service_request_proto_goTypes = []interface{}{
	(ServiceRequest_FlowType)(0),              // 0: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowType
	(DrainProvision_State)(0),                 // 1: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.State
	(DrainProvision_Method)(0),                // 2: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.Method
	(*TunnelConfiguration)(nil),               // 3: aalyria.spacetime.api.nbi.v1alpha.resources.TunnelConfiguration
	(*ServiceRequest)(nil),                    // 4: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest
	(*DrainProvision)(nil),                    // 5: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision
	(*ServiceRequest_FlowRequirements)(nil),   // 6: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowRequirements
	(*ServiceRequest_RedundancyGroup)(nil),    // 7: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.RedundancyGroup
	(*ServiceRequest_IntentAndIntervals)(nil), // 8: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.IntentAndIntervals
	(*common.TunnelMethod)(nil),               // 9: aalyria.spacetime.api.common.TunnelMethod
	(*common.FlowClassifier)(nil),             // 10: aalyria.spacetime.api.common.FlowClassifier
	(*interval.Interval)(nil),                 // 11: google.type.Interval
	(*timestamppb.Timestamp)(nil),             // 12: google.protobuf.Timestamp
	(*common.TimeInterval)(nil),               // 13: aalyria.spacetime.api.common.TimeInterval
	(*durationpb.Duration)(nil),               // 14: google.protobuf.Duration
}
var file_api_nbi_v1alpha_resources_service_request_proto_depIdxs = []int32{
	9,  // 0: aalyria.spacetime.api.nbi.v1alpha.resources.TunnelConfiguration.method:type_name -> aalyria.spacetime.api.common.TunnelMethod
	10, // 1: aalyria.spacetime.api.nbi.v1alpha.resources.TunnelConfiguration.classifier:type_name -> aalyria.spacetime.api.common.FlowClassifier
	10, // 2: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.classifier:type_name -> aalyria.spacetime.api.common.FlowClassifier
	3,  // 3: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.tunnels:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.TunnelConfiguration
	0,  // 4: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.flow_type:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowType
	6,  // 5: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.requirements:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowRequirements
	7,  // 6: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.redundancy_group:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.RedundancyGroup
	11, // 7: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.provisioned_intervals:type_name -> google.type.Interval
	8,  // 8: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.intent_dependencies:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.IntentAndIntervals
	1,  // 9: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.state:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.State
	12, // 10: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.opportunistic_start_time:type_name -> google.protobuf.Timestamp
	12, // 11: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.deter_start_time:type_name -> google.protobuf.Timestamp
	12, // 12: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.force_time:type_name -> google.protobuf.Timestamp
	2,  // 13: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.method:type_name -> aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.Method
	12, // 14: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.create_time:type_name -> google.protobuf.Timestamp
	12, // 15: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.solver_satisfaction_time:type_name -> google.protobuf.Timestamp
	12, // 16: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.enacting_time:type_name -> google.protobuf.Timestamp
	12, // 17: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.enacted_time:type_name -> google.protobuf.Timestamp
	12, // 18: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.deleting_time:type_name -> google.protobuf.Timestamp
	12, // 19: aalyria.spacetime.api.nbi.v1alpha.resources.DrainProvision.deleted_time:type_name -> google.protobuf.Timestamp
	13, // 20: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowRequirements.time_interval:type_name -> aalyria.spacetime.api.common.TimeInterval
	14, // 21: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.FlowRequirements.latency_maximum:type_name -> google.protobuf.Duration
	11, // 22: aalyria.spacetime.api.nbi.v1alpha.resources.ServiceRequest.IntentAndIntervals.interval:type_name -> google.type.Interval
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_nbi_v1alpha_resources_service_request_proto_init() }
func file_api_nbi_v1alpha_resources_service_request_proto_init() {
	if File_api_nbi_v1alpha_resources_service_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainProvision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRequest_FlowRequirements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRequest_RedundancyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRequest_IntentAndIntervals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_nbi_v1alpha_resources_service_request_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServiceRequest_SrcNodeId)(nil),
		(*ServiceRequest_SrcDevicesInRegionId)(nil),
		(*ServiceRequest_DstNodeId)(nil),
		(*ServiceRequest_DstDevicesInRegionId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_nbi_v1alpha_resources_service_request_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_nbi_v1alpha_resources_service_request_proto_goTypes,
		DependencyIndexes: file_api_nbi_v1alpha_resources_service_request_proto_depIdxs,
		EnumInfos:         file_api_nbi_v1alpha_resources_service_request_proto_enumTypes,
		MessageInfos:      file_api_nbi_v1alpha_resources_service_request_proto_msgTypes,
	}.Build()
	File_api_nbi_v1alpha_resources_service_request_proto = out.File
	file_api_nbi_v1alpha_resources_service_request_proto_rawDesc = nil
	file_api_nbi_v1alpha_resources_service_request_proto_goTypes = nil
	file_api_nbi_v1alpha_resources_service_request_proto_depIdxs = nil
}
