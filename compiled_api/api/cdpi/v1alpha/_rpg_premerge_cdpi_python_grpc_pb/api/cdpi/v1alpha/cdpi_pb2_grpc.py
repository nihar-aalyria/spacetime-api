# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.cdpi.v1alpha import cdpi_pb2 as api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class NetworkControllerStreamingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ControlPlaneInterface = channel.stream_stream(
                '/aalyria.spacetime.api.cdpi.v1alpha.NetworkControllerStreaming/ControlPlaneInterface',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateNotification.SerializeToString,
                response_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateChangeRequest.FromString,
                )


class NetworkControllerStreamingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ControlPlaneInterface(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkControllerStreamingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ControlPlaneInterface': grpc.stream_stream_rpc_method_handler(
                    servicer.ControlPlaneInterface,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateNotification.FromString,
                    response_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateChangeRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aalyria.spacetime.api.cdpi.v1alpha.NetworkControllerStreaming', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetworkControllerStreaming(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ControlPlaneInterface(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/aalyria.spacetime.api.cdpi.v1alpha.NetworkControllerStreaming/ControlPlaneInterface',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateNotification.SerializeToString,
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.ControlStateChangeRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NetworkTelemetryStreamingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TelemetryInterface = channel.stream_stream(
                '/aalyria.spacetime.api.cdpi.v1alpha.NetworkTelemetryStreaming/TelemetryInterface',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryUpdate.SerializeToString,
                response_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryRequest.FromString,
                )


class NetworkTelemetryStreamingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TelemetryInterface(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkTelemetryStreamingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TelemetryInterface': grpc.stream_stream_rpc_method_handler(
                    servicer.TelemetryInterface,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryUpdate.FromString,
                    response_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aalyria.spacetime.api.cdpi.v1alpha.NetworkTelemetryStreaming', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetworkTelemetryStreaming(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TelemetryInterface(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/aalyria.spacetime.api.cdpi.v1alpha.NetworkTelemetryStreaming/TelemetryInterface',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryUpdate.SerializeToString,
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.TelemetryRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AttenuationEnvironmentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadSensorData = channel.unary_unary(
                '/aalyria.spacetime.api.cdpi.v1alpha.AttenuationEnvironment/UploadSensorData',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.SensorWeatherData.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class AttenuationEnvironmentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadSensorData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AttenuationEnvironmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadSensorData': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadSensorData,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.SensorWeatherData.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aalyria.spacetime.api.cdpi.v1alpha.AttenuationEnvironment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AttenuationEnvironment(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadSensorData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aalyria.spacetime.api.cdpi.v1alpha.AttenuationEnvironment/UploadSensorData',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.SensorWeatherData.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CdpiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Cdpi = channel.stream_stream(
                '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/Cdpi',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequest.SerializeToString,
                response_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiResponse.FromString,
                )
        self.UpdateNodeState = channel.unary_unary(
                '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/UpdateNodeState',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiNodeStateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateRequestStatus = channel.unary_unary(
                '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/UpdateRequestStatus',
                request_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequestStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class CdpiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Cdpi(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNodeState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRequestStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CdpiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Cdpi': grpc.stream_stream_rpc_method_handler(
                    servicer.Cdpi,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequest.FromString,
                    response_serializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiResponse.SerializeToString,
            ),
            'UpdateNodeState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNodeState,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiNodeStateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateRequestStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRequestStatus,
                    request_deserializer=api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequestStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aalyria.spacetime.api.cdpi.v1alpha.Cdpi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Cdpi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Cdpi(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/Cdpi',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequest.SerializeToString,
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNodeState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/UpdateNodeState',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiNodeStateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRequestStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/aalyria.spacetime.api.cdpi.v1alpha.Cdpi/UpdateRequestStatus',
            api_dot_cdpi_dot_v1alpha_dot_cdpi__pb2.CdpiRequestStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
