// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/wireless_modcod.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdaptiveDataRateTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                  *string                                                                `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	CarrierToNoisePlusInterferenceSteps []*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping `protobuf:"bytes,2,rep,name=carrier_to_noise_plus_interference_steps,json=carrierToNoisePlusInterferenceSteps" json:"carrier_to_noise_plus_interference_steps,omitempty"`
	ReceivedSignalPowerSteps            []*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping            `protobuf:"bytes,1,rep,name=received_signal_power_steps,json=receivedSignalPowerSteps" json:"received_signal_power_steps,omitempty"`
}

func (x *AdaptiveDataRateTable) Reset() {
	*x = AdaptiveDataRateTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_modcod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveDataRateTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveDataRateTable) ProtoMessage() {}

func (x *AdaptiveDataRateTable) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_modcod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveDataRateTable.ProtoReflect.Descriptor instead.
func (*AdaptiveDataRateTable) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_modcod_proto_rawDescGZIP(), []int{0}
}

func (x *AdaptiveDataRateTable) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AdaptiveDataRateTable) GetCarrierToNoisePlusInterferenceSteps() []*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping {
	if x != nil {
		return x.CarrierToNoisePlusInterferenceSteps
	}
	return nil
}

func (x *AdaptiveDataRateTable) GetReceivedSignalPowerSteps() []*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping {
	if x != nil {
		return x.ReceivedSignalPowerSteps
	}
	return nil
}

type AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinCarrierToNoisePlusInterferenceDb *float64 `protobuf:"fixed64,1,opt,name=min_carrier_to_noise_plus_interference_db,json=minCarrierToNoisePlusInterferenceDb" json:"min_carrier_to_noise_plus_interference_db,omitempty"`
	TxDataRateBps                       *float64 `protobuf:"fixed64,2,opt,name=tx_data_rate_bps,json=txDataRateBps" json:"tx_data_rate_bps,omitempty"`
}

func (x *AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) Reset() {
	*x = AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_modcod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) ProtoMessage() {}

func (x *AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_modcod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping.ProtoReflect.Descriptor instead.
func (*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_modcod_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) GetMinCarrierToNoisePlusInterferenceDb() float64 {
	if x != nil && x.MinCarrierToNoisePlusInterferenceDb != nil {
		return *x.MinCarrierToNoisePlusInterferenceDb
	}
	return 0
}

func (x *AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping) GetTxDataRateBps() float64 {
	if x != nil && x.TxDataRateBps != nil {
		return *x.TxDataRateBps
	}
	return 0
}

type AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinReceivedSignalPowerDbw *float64 `protobuf:"fixed64,1,opt,name=min_received_signal_power_dbw,json=minReceivedSignalPowerDbw" json:"min_received_signal_power_dbw,omitempty"`
	TxDataRateBps             *float64 `protobuf:"fixed64,2,opt,name=tx_data_rate_bps,json=txDataRateBps" json:"tx_data_rate_bps,omitempty"`
}

func (x *AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) Reset() {
	*x = AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_modcod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) ProtoMessage() {}

func (x *AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_modcod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping.ProtoReflect.Descriptor instead.
func (*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_modcod_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) GetMinReceivedSignalPowerDbw() float64 {
	if x != nil && x.MinReceivedSignalPowerDbw != nil {
		return *x.MinReceivedSignalPowerDbw
	}
	return 0
}

func (x *AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping) GetTxDataRateBps() float64 {
	if x != nil && x.TxDataRateBps != nil {
		return *x.TxDataRateBps
	}
	return 0
}

var File_api_common_wireless_modcod_proto protoreflect.FileDescriptor

var file_api_common_wireless_modcod_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72,
	0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x63, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1c, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x22, 0xbf, 0x05, 0x0a, 0x15, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0xb8, 0x01, 0x0a, 0x28, 0x63,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x5f,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x61, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73,
	0x65, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x23, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73, 0x65,
	0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x18, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xb0, 0x01,
	0x0a, 0x2d, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x69, 0x73, 0x65,
	0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x56, 0x0a, 0x29, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x5f, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x23, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x54, 0x6f,
	0x4e, 0x6f, 0x69, 0x73, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x62, 0x12, 0x27, 0x0a, 0x10, 0x74, 0x78, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42, 0x70, 0x73,
	0x1a, 0x8f, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x40, 0x0a, 0x1d, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x62, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x62, 0x77, 0x12, 0x27, 0x0a, 0x10, 0x74, 0x78, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x70, 0x73, 0x42, 0x44, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x20, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_api_common_wireless_modcod_proto_rawDescOnce sync.Once
	file_api_common_wireless_modcod_proto_rawDescData = file_api_common_wireless_modcod_proto_rawDesc
)

func file_api_common_wireless_modcod_proto_rawDescGZIP() []byte {
	file_api_common_wireless_modcod_proto_rawDescOnce.Do(func() {
		file_api_common_wireless_modcod_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_wireless_modcod_proto_rawDescData)
	})
	return file_api_common_wireless_modcod_proto_rawDescData
}

var file_api_common_wireless_modcod_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_common_wireless_modcod_proto_goTypes = []interface{}{
	(*AdaptiveDataRateTable)(nil), // 0: aalyria.spacetime.api.common.AdaptiveDataRateTable
	(*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping)(nil), // 1: aalyria.spacetime.api.common.AdaptiveDataRateTable.CarrierToNoisePlusInterferenceDataRateMapping
	(*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping)(nil),            // 2: aalyria.spacetime.api.common.AdaptiveDataRateTable.ReceivedSignalPowerDataRateMapping
}
var file_api_common_wireless_modcod_proto_depIdxs = []int32{
	1, // 0: aalyria.spacetime.api.common.AdaptiveDataRateTable.carrier_to_noise_plus_interference_steps:type_name -> aalyria.spacetime.api.common.AdaptiveDataRateTable.CarrierToNoisePlusInterferenceDataRateMapping
	2, // 1: aalyria.spacetime.api.common.AdaptiveDataRateTable.received_signal_power_steps:type_name -> aalyria.spacetime.api.common.AdaptiveDataRateTable.ReceivedSignalPowerDataRateMapping
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_common_wireless_modcod_proto_init() }
func file_api_common_wireless_modcod_proto_init() {
	if File_api_common_wireless_modcod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_wireless_modcod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveDataRateTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_wireless_modcod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveDataRateTable_CarrierToNoisePlusInterferenceDataRateMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_wireless_modcod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveDataRateTable_ReceivedSignalPowerDataRateMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_wireless_modcod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_wireless_modcod_proto_goTypes,
		DependencyIndexes: file_api_common_wireless_modcod_proto_depIdxs,
		MessageInfos:      file_api_common_wireless_modcod_proto_msgTypes,
	}.Build()
	File_api_common_wireless_modcod_proto = out.File
	file_api_common_wireless_modcod_proto_rawDesc = nil
	file_api_common_wireless_modcod_proto_goTypes = nil
	file_api_common_wireless_modcod_proto_depIdxs = nil
}
