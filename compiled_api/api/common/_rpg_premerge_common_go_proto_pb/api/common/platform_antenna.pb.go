// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/platform_antenna.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AntennaDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	FixedCoordinateOffset *PointAxes                         `protobuf:"bytes,3,opt,name=fixed_coordinate_offset,json=fixedCoordinateOffset" json:"fixed_coordinate_offset,omitempty"`
	Targeting             *Targeting                         `protobuf:"bytes,18,opt,name=targeting" json:"targeting,omitempty"`
	AntennaPatternId      *string                            `protobuf:"bytes,10,opt,name=antenna_pattern_id,json=antennaPatternId" json:"antenna_pattern_id,omitempty"`
	Polarization          *Polarization                      `protobuf:"bytes,17,opt,name=polarization" json:"polarization,omitempty"`
	FieldOfRegard         *Projection                        `protobuf:"bytes,11,opt,name=field_of_regard,json=fieldOfRegard" json:"field_of_regard,omitempty"`
	Obstructions          []*Projection                      `protobuf:"bytes,12,rep,name=obstructions" json:"obstructions,omitempty"`
	AzimuthElevationMask  []*AntennaDefinition_ElevationMask `protobuf:"bytes,9,rep,name=azimuth_elevation_mask,json=azimuthElevationMask" json:"azimuth_elevation_mask,omitempty"`
	Constraints           *AntennaConstraints                `protobuf:"bytes,6,opt,name=constraints" json:"constraints,omitempty"`
}

func (x *AntennaDefinition) Reset() {
	*x = AntennaDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaDefinition) ProtoMessage() {}

func (x *AntennaDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaDefinition.ProtoReflect.Descriptor instead.
func (*AntennaDefinition) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{0}
}

func (x *AntennaDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AntennaDefinition) GetFixedCoordinateOffset() *PointAxes {
	if x != nil {
		return x.FixedCoordinateOffset
	}
	return nil
}

func (x *AntennaDefinition) GetTargeting() *Targeting {
	if x != nil {
		return x.Targeting
	}
	return nil
}

func (x *AntennaDefinition) GetAntennaPatternId() string {
	if x != nil && x.AntennaPatternId != nil {
		return *x.AntennaPatternId
	}
	return ""
}

func (x *AntennaDefinition) GetPolarization() *Polarization {
	if x != nil {
		return x.Polarization
	}
	return nil
}

func (x *AntennaDefinition) GetFieldOfRegard() *Projection {
	if x != nil {
		return x.FieldOfRegard
	}
	return nil
}

func (x *AntennaDefinition) GetObstructions() []*Projection {
	if x != nil {
		return x.Obstructions
	}
	return nil
}

func (x *AntennaDefinition) GetAzimuthElevationMask() []*AntennaDefinition_ElevationMask {
	if x != nil {
		return x.AzimuthElevationMask
	}
	return nil
}

func (x *AntennaDefinition) GetConstraints() *AntennaConstraints {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type AntennaConstraints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkRange                                *AntennaConstraints_LinkRangeConstraint          `protobuf:"bytes,1,opt,name=link_range,json=linkRange" json:"link_range,omitempty"`
	AzimuthAngleRate                         *AntennaConstraints_AzimuthAngleRateConstraint   `protobuf:"bytes,3,opt,name=azimuth_angle_rate,json=azimuthAngleRate" json:"azimuth_angle_rate,omitempty"`
	ElevationAngleRate                       *AntennaConstraints_ElevationAngleRateConstraint `protobuf:"bytes,4,opt,name=elevation_angle_rate,json=elevationAngleRate" json:"elevation_angle_rate,omitempty"`
	TotalAngularRate                         *AntennaConstraints_TotalAngularRateConstraint   `protobuf:"bytes,5,opt,name=total_angular_rate,json=totalAngularRate" json:"total_angular_rate,omitempty"`
	MinimumSunAngleDeg                       *float64                                         `protobuf:"fixed64,6,opt,name=minimum_sun_angle_deg,json=minimumSunAngleDeg" json:"minimum_sun_angle_deg,omitempty"`
	MinimumAzimuthElevationMaskSeparationDeg *float64                                         `protobuf:"fixed64,7,opt,name=minimum_azimuth_elevation_mask_separation_deg,json=minimumAzimuthElevationMaskSeparationDeg" json:"minimum_azimuth_elevation_mask_separation_deg,omitempty"`
}

func (x *AntennaConstraints) Reset() {
	*x = AntennaConstraints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaConstraints) ProtoMessage() {}

func (x *AntennaConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaConstraints.ProtoReflect.Descriptor instead.
func (*AntennaConstraints) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{1}
}

func (x *AntennaConstraints) GetLinkRange() *AntennaConstraints_LinkRangeConstraint {
	if x != nil {
		return x.LinkRange
	}
	return nil
}

func (x *AntennaConstraints) GetAzimuthAngleRate() *AntennaConstraints_AzimuthAngleRateConstraint {
	if x != nil {
		return x.AzimuthAngleRate
	}
	return nil
}

func (x *AntennaConstraints) GetElevationAngleRate() *AntennaConstraints_ElevationAngleRateConstraint {
	if x != nil {
		return x.ElevationAngleRate
	}
	return nil
}

func (x *AntennaConstraints) GetTotalAngularRate() *AntennaConstraints_TotalAngularRateConstraint {
	if x != nil {
		return x.TotalAngularRate
	}
	return nil
}

func (x *AntennaConstraints) GetMinimumSunAngleDeg() float64 {
	if x != nil && x.MinimumSunAngleDeg != nil {
		return *x.MinimumSunAngleDeg
	}
	return 0
}

func (x *AntennaConstraints) GetMinimumAzimuthElevationMaskSeparationDeg() float64 {
	if x != nil && x.MinimumAzimuthElevationMaskSeparationDeg != nil {
		return *x.MinimumAzimuthElevationMaskSeparationDeg
	}
	return 0
}

type Projection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ShapeType:
	//
	//	*Projection_Conic_
	//	*Projection_Rectangular_
	//	*Projection_Custom_
	ShapeType isProjection_ShapeType `protobuf_oneof:"shape_type"`
}

func (x *Projection) Reset() {
	*x = Projection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection) ProtoMessage() {}

func (x *Projection) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection.ProtoReflect.Descriptor instead.
func (*Projection) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{2}
}

func (m *Projection) GetShapeType() isProjection_ShapeType {
	if m != nil {
		return m.ShapeType
	}
	return nil
}

func (x *Projection) GetConic() *Projection_Conic {
	if x, ok := x.GetShapeType().(*Projection_Conic_); ok {
		return x.Conic
	}
	return nil
}

func (x *Projection) GetRectangular() *Projection_Rectangular {
	if x, ok := x.GetShapeType().(*Projection_Rectangular_); ok {
		return x.Rectangular
	}
	return nil
}

func (x *Projection) GetCustom() *Projection_Custom {
	if x, ok := x.GetShapeType().(*Projection_Custom_); ok {
		return x.Custom
	}
	return nil
}

type isProjection_ShapeType interface {
	isProjection_ShapeType()
}

type Projection_Conic_ struct {
	Conic *Projection_Conic `protobuf:"bytes,1,opt,name=conic,oneof"`
}

type Projection_Rectangular_ struct {
	Rectangular *Projection_Rectangular `protobuf:"bytes,2,opt,name=rectangular,oneof"`
}

type Projection_Custom_ struct {
	Custom *Projection_Custom `protobuf:"bytes,3,opt,name=custom,oneof"`
}

func (*Projection_Conic_) isProjection_ShapeType() {}

func (*Projection_Rectangular_) isProjection_ShapeType() {}

func (*Projection_Custom_) isProjection_ShapeType() {}

type Polarization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*Polarization_Constant_
	Source isPolarization_Source `protobuf_oneof:"source"`
}

func (x *Polarization) Reset() {
	*x = Polarization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polarization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polarization) ProtoMessage() {}

func (x *Polarization) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polarization.ProtoReflect.Descriptor instead.
func (*Polarization) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{3}
}

func (m *Polarization) GetSource() isPolarization_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *Polarization) GetConstant() *Polarization_Constant {
	if x, ok := x.GetSource().(*Polarization_Constant_); ok {
		return x.Constant
	}
	return nil
}

type isPolarization_Source interface {
	isPolarization_Source()
}

type Polarization_Constant_ struct {
	Constant *Polarization_Constant `protobuf:"bytes,1,opt,name=constant,oneof"`
}

func (*Polarization_Constant_) isPolarization_Source() {}

type Targeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MotionFormat *Motion_Type `protobuf:"varint,1,opt,name=motion_format,json=motionFormat,enum=aalyria.spacetime.api.common.Motion_Type" json:"motion_format,omitempty"`
}

func (x *Targeting) Reset() {
	*x = Targeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Targeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Targeting) ProtoMessage() {}

func (x *Targeting) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Targeting.ProtoReflect.Descriptor instead.
func (*Targeting) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{4}
}

func (x *Targeting) GetMotionFormat() Motion_Type {
	if x != nil && x.MotionFormat != nil {
		return *x.MotionFormat
	}
	return Motion_MOTION_UNSPECIFIED
}

type AntennaDefinition_ElevationMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzimuthDeg                  *float64                                         `protobuf:"fixed64,1,opt,name=azimuth_deg,json=azimuthDeg" json:"azimuth_deg,omitempty"`
	MaximumObscuredElevationDeg *float64                                         `protobuf:"fixed64,2,opt,name=maximum_obscured_elevation_deg,json=maximumObscuredElevationDeg" json:"maximum_obscured_elevation_deg,omitempty"`
	ElevationRise               []*AntennaDefinition_ElevationMask_ElevationRise `protobuf:"bytes,3,rep,name=elevation_rise,json=elevationRise" json:"elevation_rise,omitempty"`
}

func (x *AntennaDefinition_ElevationMask) Reset() {
	*x = AntennaDefinition_ElevationMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaDefinition_ElevationMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaDefinition_ElevationMask) ProtoMessage() {}

func (x *AntennaDefinition_ElevationMask) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaDefinition_ElevationMask.ProtoReflect.Descriptor instead.
func (*AntennaDefinition_ElevationMask) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AntennaDefinition_ElevationMask) GetAzimuthDeg() float64 {
	if x != nil && x.AzimuthDeg != nil {
		return *x.AzimuthDeg
	}
	return 0
}

func (x *AntennaDefinition_ElevationMask) GetMaximumObscuredElevationDeg() float64 {
	if x != nil && x.MaximumObscuredElevationDeg != nil {
		return *x.MaximumObscuredElevationDeg
	}
	return 0
}

func (x *AntennaDefinition_ElevationMask) GetElevationRise() []*AntennaDefinition_ElevationMask_ElevationRise {
	if x != nil {
		return x.ElevationRise
	}
	return nil
}

type AntennaDefinition_ElevationMask_ElevationRise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distance             *float64 `protobuf:"fixed64,1,opt,name=distance" json:"distance,omitempty"`
	ObscuredElevationDeg *float64 `protobuf:"fixed64,2,opt,name=obscured_elevation_deg,json=obscuredElevationDeg" json:"obscured_elevation_deg,omitempty"`
}

func (x *AntennaDefinition_ElevationMask_ElevationRise) Reset() {
	*x = AntennaDefinition_ElevationMask_ElevationRise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaDefinition_ElevationMask_ElevationRise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaDefinition_ElevationMask_ElevationRise) ProtoMessage() {}

func (x *AntennaDefinition_ElevationMask_ElevationRise) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaDefinition_ElevationMask_ElevationRise.ProtoReflect.Descriptor instead.
func (*AntennaDefinition_ElevationMask_ElevationRise) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *AntennaDefinition_ElevationMask_ElevationRise) GetDistance() float64 {
	if x != nil && x.Distance != nil {
		return *x.Distance
	}
	return 0
}

func (x *AntennaDefinition_ElevationMask_ElevationRise) GetObscuredElevationDeg() float64 {
	if x != nil && x.ObscuredElevationDeg != nil {
		return *x.ObscuredElevationDeg
	}
	return 0
}

type AntennaConstraints_LinkRangeConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumRange *float64 `protobuf:"fixed64,1,opt,name=minimum_range,json=minimumRange" json:"minimum_range,omitempty"`
	MaximumRange *float64 `protobuf:"fixed64,2,opt,name=maximum_range,json=maximumRange" json:"maximum_range,omitempty"`
}

func (x *AntennaConstraints_LinkRangeConstraint) Reset() {
	*x = AntennaConstraints_LinkRangeConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaConstraints_LinkRangeConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaConstraints_LinkRangeConstraint) ProtoMessage() {}

func (x *AntennaConstraints_LinkRangeConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaConstraints_LinkRangeConstraint.ProtoReflect.Descriptor instead.
func (*AntennaConstraints_LinkRangeConstraint) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AntennaConstraints_LinkRangeConstraint) GetMinimumRange() float64 {
	if x != nil && x.MinimumRange != nil {
		return *x.MinimumRange
	}
	return 0
}

func (x *AntennaConstraints_LinkRangeConstraint) GetMaximumRange() float64 {
	if x != nil && x.MaximumRange != nil {
		return *x.MaximumRange
	}
	return 0
}

type AntennaConstraints_AzimuthAngleRateConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumRateDegPerSec *float64 `protobuf:"fixed64,1,opt,name=minimum_rate_deg_per_sec,json=minimumRateDegPerSec" json:"minimum_rate_deg_per_sec,omitempty"`
	MaximumRateDegPerSec *float64 `protobuf:"fixed64,2,opt,name=maximum_rate_deg_per_sec,json=maximumRateDegPerSec" json:"maximum_rate_deg_per_sec,omitempty"`
}

func (x *AntennaConstraints_AzimuthAngleRateConstraint) Reset() {
	*x = AntennaConstraints_AzimuthAngleRateConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaConstraints_AzimuthAngleRateConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaConstraints_AzimuthAngleRateConstraint) ProtoMessage() {}

func (x *AntennaConstraints_AzimuthAngleRateConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaConstraints_AzimuthAngleRateConstraint.ProtoReflect.Descriptor instead.
func (*AntennaConstraints_AzimuthAngleRateConstraint) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AntennaConstraints_AzimuthAngleRateConstraint) GetMinimumRateDegPerSec() float64 {
	if x != nil && x.MinimumRateDegPerSec != nil {
		return *x.MinimumRateDegPerSec
	}
	return 0
}

func (x *AntennaConstraints_AzimuthAngleRateConstraint) GetMaximumRateDegPerSec() float64 {
	if x != nil && x.MaximumRateDegPerSec != nil {
		return *x.MaximumRateDegPerSec
	}
	return 0
}

type AntennaConstraints_ElevationAngleRateConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumRateDegPerSec *float64 `protobuf:"fixed64,1,opt,name=minimum_rate_deg_per_sec,json=minimumRateDegPerSec" json:"minimum_rate_deg_per_sec,omitempty"`
	MaximumRateDegPerSec *float64 `protobuf:"fixed64,2,opt,name=maximum_rate_deg_per_sec,json=maximumRateDegPerSec" json:"maximum_rate_deg_per_sec,omitempty"`
}

func (x *AntennaConstraints_ElevationAngleRateConstraint) Reset() {
	*x = AntennaConstraints_ElevationAngleRateConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaConstraints_ElevationAngleRateConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaConstraints_ElevationAngleRateConstraint) ProtoMessage() {}

func (x *AntennaConstraints_ElevationAngleRateConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaConstraints_ElevationAngleRateConstraint.ProtoReflect.Descriptor instead.
func (*AntennaConstraints_ElevationAngleRateConstraint) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AntennaConstraints_ElevationAngleRateConstraint) GetMinimumRateDegPerSec() float64 {
	if x != nil && x.MinimumRateDegPerSec != nil {
		return *x.MinimumRateDegPerSec
	}
	return 0
}

func (x *AntennaConstraints_ElevationAngleRateConstraint) GetMaximumRateDegPerSec() float64 {
	if x != nil && x.MaximumRateDegPerSec != nil {
		return *x.MaximumRateDegPerSec
	}
	return 0
}

type AntennaConstraints_TotalAngularRateConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinimumRateDegPerSec *float64 `protobuf:"fixed64,1,opt,name=minimum_rate_deg_per_sec,json=minimumRateDegPerSec" json:"minimum_rate_deg_per_sec,omitempty"`
	MaximumRateDegPerSec *float64 `protobuf:"fixed64,2,opt,name=maximum_rate_deg_per_sec,json=maximumRateDegPerSec" json:"maximum_rate_deg_per_sec,omitempty"`
}

func (x *AntennaConstraints_TotalAngularRateConstraint) Reset() {
	*x = AntennaConstraints_TotalAngularRateConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntennaConstraints_TotalAngularRateConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntennaConstraints_TotalAngularRateConstraint) ProtoMessage() {}

func (x *AntennaConstraints_TotalAngularRateConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntennaConstraints_TotalAngularRateConstraint.ProtoReflect.Descriptor instead.
func (*AntennaConstraints_TotalAngularRateConstraint) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AntennaConstraints_TotalAngularRateConstraint) GetMinimumRateDegPerSec() float64 {
	if x != nil && x.MinimumRateDegPerSec != nil {
		return *x.MinimumRateDegPerSec
	}
	return 0
}

func (x *AntennaConstraints_TotalAngularRateConstraint) GetMaximumRateDegPerSec() float64 {
	if x != nil && x.MaximumRateDegPerSec != nil {
		return *x.MaximumRateDegPerSec
	}
	return 0
}

type Projection_Conic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OuterHalfAngleDeg *float64 `protobuf:"fixed64,1,opt,name=outer_half_angle_deg,json=outerHalfAngleDeg" json:"outer_half_angle_deg,omitempty"`
	InnerHalfAngleDeg *float64 `protobuf:"fixed64,2,opt,name=inner_half_angle_deg,json=innerHalfAngleDeg" json:"inner_half_angle_deg,omitempty"`
}

func (x *Projection_Conic) Reset() {
	*x = Projection_Conic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Projection_Conic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection_Conic) ProtoMessage() {}

func (x *Projection_Conic) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection_Conic.ProtoReflect.Descriptor instead.
func (*Projection_Conic) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Projection_Conic) GetOuterHalfAngleDeg() float64 {
	if x != nil && x.OuterHalfAngleDeg != nil {
		return *x.OuterHalfAngleDeg
	}
	return 0
}

func (x *Projection_Conic) GetInnerHalfAngleDeg() float64 {
	if x != nil && x.InnerHalfAngleDeg != nil {
		return *x.InnerHalfAngleDeg
	}
	return 0
}

type Projection_Rectangular struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XHalfAngleDeg *float64 `protobuf:"fixed64,1,opt,name=x_half_angle_deg,json=xHalfAngleDeg" json:"x_half_angle_deg,omitempty"`
	YHalfAngleDeg *float64 `protobuf:"fixed64,2,opt,name=y_half_angle_deg,json=yHalfAngleDeg" json:"y_half_angle_deg,omitempty"`
}

func (x *Projection_Rectangular) Reset() {
	*x = Projection_Rectangular{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Projection_Rectangular) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection_Rectangular) ProtoMessage() {}

func (x *Projection_Rectangular) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection_Rectangular.ProtoReflect.Descriptor instead.
func (*Projection_Rectangular) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Projection_Rectangular) GetXHalfAngleDeg() float64 {
	if x != nil && x.XHalfAngleDeg != nil {
		return *x.XHalfAngleDeg
	}
	return 0
}

func (x *Projection_Rectangular) GetYHalfAngleDeg() float64 {
	if x != nil && x.YHalfAngleDeg != nil {
		return *x.YHalfAngleDeg
	}
	return 0
}

type Projection_Custom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directions []*PointingVector `protobuf:"bytes,1,rep,name=directions" json:"directions,omitempty"`
}

func (x *Projection_Custom) Reset() {
	*x = Projection_Custom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Projection_Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection_Custom) ProtoMessage() {}

func (x *Projection_Custom) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection_Custom.ProtoReflect.Descriptor instead.
func (*Projection_Custom) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Projection_Custom) GetDirections() []*PointingVector {
	if x != nil {
		return x.Directions
	}
	return nil
}

type Polarization_Constant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Polarization:
	//
	//	*Polarization_Constant_LeftHandCircular
	//	*Polarization_Constant_RightHandCircular
	//	*Polarization_Constant_Linear_
	Polarization isPolarization_Constant_Polarization `protobuf_oneof:"polarization"`
}

func (x *Polarization_Constant) Reset() {
	*x = Polarization_Constant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polarization_Constant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polarization_Constant) ProtoMessage() {}

func (x *Polarization_Constant) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polarization_Constant.ProtoReflect.Descriptor instead.
func (*Polarization_Constant) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{3, 0}
}

func (m *Polarization_Constant) GetPolarization() isPolarization_Constant_Polarization {
	if m != nil {
		return m.Polarization
	}
	return nil
}

func (x *Polarization_Constant) GetLeftHandCircular() *emptypb.Empty {
	if x, ok := x.GetPolarization().(*Polarization_Constant_LeftHandCircular); ok {
		return x.LeftHandCircular
	}
	return nil
}

func (x *Polarization_Constant) GetRightHandCircular() *emptypb.Empty {
	if x, ok := x.GetPolarization().(*Polarization_Constant_RightHandCircular); ok {
		return x.RightHandCircular
	}
	return nil
}

func (x *Polarization_Constant) GetLinear() *Polarization_Constant_Linear {
	if x, ok := x.GetPolarization().(*Polarization_Constant_Linear_); ok {
		return x.Linear
	}
	return nil
}

type isPolarization_Constant_Polarization interface {
	isPolarization_Constant_Polarization()
}

type Polarization_Constant_LeftHandCircular struct {
	LeftHandCircular *emptypb.Empty `protobuf:"bytes,1,opt,name=left_hand_circular,json=leftHandCircular,oneof"`
}

type Polarization_Constant_RightHandCircular struct {
	RightHandCircular *emptypb.Empty `protobuf:"bytes,2,opt,name=right_hand_circular,json=rightHandCircular,oneof"`
}

type Polarization_Constant_Linear_ struct {
	Linear *Polarization_Constant_Linear `protobuf:"bytes,3,opt,name=linear,oneof"`
}

func (*Polarization_Constant_LeftHandCircular) isPolarization_Constant_Polarization() {}

func (*Polarization_Constant_RightHandCircular) isPolarization_Constant_Polarization() {}

func (*Polarization_Constant_Linear_) isPolarization_Constant_Polarization() {}

type Polarization_Constant_Linear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TiltAngleDeg *float64 `protobuf:"fixed64,1,opt,name=tilt_angle_deg,json=tiltAngleDeg" json:"tilt_angle_deg,omitempty"`
}

func (x *Polarization_Constant_Linear) Reset() {
	*x = Polarization_Constant_Linear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_platform_antenna_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polarization_Constant_Linear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polarization_Constant_Linear) ProtoMessage() {}

func (x *Polarization_Constant_Linear) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_platform_antenna_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polarization_Constant_Linear.ProtoReflect.Descriptor instead.
func (*Polarization_Constant_Linear) Descriptor() ([]byte, []int) {
	return file_api_common_platform_antenna_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *Polarization_Constant_Linear) GetTiltAngleDeg() float64 {
	if x != nil && x.TiltAngleDeg != nil {
		return *x.TiltAngleDeg
	}
	return 0
}

var File_api_common_platform_antenna_proto protoreflect.FileDescriptor

var file_api_common_platform_antenna_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x08, 0x0a,
	0x11, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x17, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65, 0x73,
	0x52, 0x15, 0x66, 0x69, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x74, 0x65,
	0x6e, 0x6e, 0x61, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0c,
	0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x66, 0x52, 0x65, 0x67, 0x61, 0x72, 0x64, 0x12, 0x4c,
	0x0a, 0x0c, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x6f, 0x62, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x73, 0x0a, 0x16,
	0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65,
	0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6c,
	0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x14, 0x61, 0x7a, 0x69,
	0x6d, 0x75, 0x74, 0x68, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x52, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0xcc, 0x02, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x7a, 0x69, 0x6d, 0x75,
	0x74, 0x68, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x7a,
	0x69, 0x6d, 0x75, 0x74, 0x68, 0x44, 0x65, 0x67, 0x12, 0x43, 0x0a, 0x1e, 0x6d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x6f, 0x62, 0x73, 0x63, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x1b, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x62, 0x73, 0x63, 0x75, 0x72, 0x65,
	0x64, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x12, 0x72, 0x0a,
	0x0e, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x73, 0x6b, 0x2e, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69,
	0x73, 0x65, 0x52, 0x0d, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69, 0x73,
	0x65, 0x1a, 0x61, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x6f, 0x62, 0x73, 0x63, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x6f, 0x62, 0x73, 0x63, 0x75, 0x72, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x67, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x08,
	0x10, 0x09, 0x4a, 0x08, 0x08, 0x13, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x9e, 0x09, 0x0a,
	0x12, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6c,
	0x69, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x79, 0x0a, 0x12, 0x61, 0x7a, 0x69, 0x6d,
	0x75, 0x74, 0x68, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x10, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x7f, 0x0a, 0x14, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x52, 0x12, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x79, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6e,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x4b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x73, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x52,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x31, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x75, 0x6e, 0x5f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x75, 0x6e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x44,
	0x65, 0x67, 0x12, 0x5f, 0x0a, 0x2d, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x7a,
	0x69, 0x6d, 0x75, 0x74, 0x68, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x28, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x67, 0x1a, 0x5f, 0x0a, 0x13, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x1a, 0x8c, 0x01, 0x0a, 0x1a, 0x41, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x18, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x1a, 0x8e, 0x01, 0x0a, 0x1c, 0x45, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x18,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x1a, 0x8c, 0x01, 0x0a, 0x1a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6e,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x18, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x44, 0x65, 0x67, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x4a, 0x08, 0x08, 0x08, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0xab, 0x04,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x05,
	0x63, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x69, 0x63, 0x48, 0x00, 0x52, 0x05, 0x63,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x58, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x49,
	0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x1a, 0x69, 0x0a, 0x05, 0x43, 0x6f, 0x6e,
	0x69, 0x63, 0x12, 0x2f, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6c, 0x66,
	0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x66, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x44, 0x65, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x6c,
	0x66, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x11, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x61, 0x6c, 0x66, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x44, 0x65, 0x67, 0x1a, 0x5f, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x10, 0x78, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x78,
	0x48, 0x61, 0x6c, 0x66, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x67, 0x12, 0x27, 0x0a, 0x10,
	0x79, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x79, 0x48, 0x61, 0x6c, 0x66, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x44, 0x65, 0x67, 0x1a, 0x56, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12,
	0x4c, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x73, 0x68, 0x61, 0x70, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x0c,
	0x50, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x1a,
	0xb2, 0x02, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x12,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x69, 0x72, 0x63,
	0x75, 0x6c, 0x61, 0x72, 0x12, 0x48, 0x0a, 0x13, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x5f, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x11, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x43, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x54,
	0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x69,
	0x6e, 0x65, 0x61, 0x72, 0x1a, 0x2e, 0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x74, 0x69, 0x6c, 0x74, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x69, 0x6c, 0x74, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x44, 0x65, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x5b,
	0x0a, 0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x0d, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x44, 0x0a, 0x20, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a,
	0x20, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e,
}

var (
	file_api_common_platform_antenna_proto_rawDescOnce sync.Once
	file_api_common_platform_antenna_proto_rawDescData = file_api_common_platform_antenna_proto_rawDesc
)

func file_api_common_platform_antenna_proto_rawDescGZIP() []byte {
	file_api_common_platform_antenna_proto_rawDescOnce.Do(func() {
		file_api_common_platform_antenna_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_platform_antenna_proto_rawDescData)
	})
	return file_api_common_platform_antenna_proto_rawDescData
}

var file_api_common_platform_antenna_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_common_platform_antenna_proto_goTypes = []interface{}{
	(*AntennaDefinition)(nil),                               // 0: aalyria.spacetime.api.common.AntennaDefinition
	(*AntennaConstraints)(nil),                              // 1: aalyria.spacetime.api.common.AntennaConstraints
	(*Projection)(nil),                                      // 2: aalyria.spacetime.api.common.Projection
	(*Polarization)(nil),                                    // 3: aalyria.spacetime.api.common.Polarization
	(*Targeting)(nil),                                       // 4: aalyria.spacetime.api.common.Targeting
	(*AntennaDefinition_ElevationMask)(nil),                 // 5: aalyria.spacetime.api.common.AntennaDefinition.ElevationMask
	(*AntennaDefinition_ElevationMask_ElevationRise)(nil),   // 6: aalyria.spacetime.api.common.AntennaDefinition.ElevationMask.ElevationRise
	(*AntennaConstraints_LinkRangeConstraint)(nil),          // 7: aalyria.spacetime.api.common.AntennaConstraints.LinkRangeConstraint
	(*AntennaConstraints_AzimuthAngleRateConstraint)(nil),   // 8: aalyria.spacetime.api.common.AntennaConstraints.AzimuthAngleRateConstraint
	(*AntennaConstraints_ElevationAngleRateConstraint)(nil), // 9: aalyria.spacetime.api.common.AntennaConstraints.ElevationAngleRateConstraint
	(*AntennaConstraints_TotalAngularRateConstraint)(nil),   // 10: aalyria.spacetime.api.common.AntennaConstraints.TotalAngularRateConstraint
	(*Projection_Conic)(nil),                                // 11: aalyria.spacetime.api.common.Projection.Conic
	(*Projection_Rectangular)(nil),                          // 12: aalyria.spacetime.api.common.Projection.Rectangular
	(*Projection_Custom)(nil),                               // 13: aalyria.spacetime.api.common.Projection.Custom
	(*Polarization_Constant)(nil),                           // 14: aalyria.spacetime.api.common.Polarization.Constant
	(*Polarization_Constant_Linear)(nil),                    // 15: aalyria.spacetime.api.common.Polarization.Constant.Linear
	(*PointAxes)(nil),                                       // 16: aalyria.spacetime.api.common.PointAxes
	(Motion_Type)(0),                                        // 17: aalyria.spacetime.api.common.Motion.Type
	(*PointingVector)(nil),                                  // 18: aalyria.spacetime.api.common.PointingVector
	(*emptypb.Empty)(nil),                                   // 19: google.protobuf.Empty
}
var file_api_common_platform_antenna_proto_depIdxs = []int32{
	16, // 0: aalyria.spacetime.api.common.AntennaDefinition.fixed_coordinate_offset:type_name -> aalyria.spacetime.api.common.PointAxes
	4,  // 1: aalyria.spacetime.api.common.AntennaDefinition.targeting:type_name -> aalyria.spacetime.api.common.Targeting
	3,  // 2: aalyria.spacetime.api.common.AntennaDefinition.polarization:type_name -> aalyria.spacetime.api.common.Polarization
	2,  // 3: aalyria.spacetime.api.common.AntennaDefinition.field_of_regard:type_name -> aalyria.spacetime.api.common.Projection
	2,  // 4: aalyria.spacetime.api.common.AntennaDefinition.obstructions:type_name -> aalyria.spacetime.api.common.Projection
	5,  // 5: aalyria.spacetime.api.common.AntennaDefinition.azimuth_elevation_mask:type_name -> aalyria.spacetime.api.common.AntennaDefinition.ElevationMask
	1,  // 6: aalyria.spacetime.api.common.AntennaDefinition.constraints:type_name -> aalyria.spacetime.api.common.AntennaConstraints
	7,  // 7: aalyria.spacetime.api.common.AntennaConstraints.link_range:type_name -> aalyria.spacetime.api.common.AntennaConstraints.LinkRangeConstraint
	8,  // 8: aalyria.spacetime.api.common.AntennaConstraints.azimuth_angle_rate:type_name -> aalyria.spacetime.api.common.AntennaConstraints.AzimuthAngleRateConstraint
	9,  // 9: aalyria.spacetime.api.common.AntennaConstraints.elevation_angle_rate:type_name -> aalyria.spacetime.api.common.AntennaConstraints.ElevationAngleRateConstraint
	10, // 10: aalyria.spacetime.api.common.AntennaConstraints.total_angular_rate:type_name -> aalyria.spacetime.api.common.AntennaConstraints.TotalAngularRateConstraint
	11, // 11: aalyria.spacetime.api.common.Projection.conic:type_name -> aalyria.spacetime.api.common.Projection.Conic
	12, // 12: aalyria.spacetime.api.common.Projection.rectangular:type_name -> aalyria.spacetime.api.common.Projection.Rectangular
	13, // 13: aalyria.spacetime.api.common.Projection.custom:type_name -> aalyria.spacetime.api.common.Projection.Custom
	14, // 14: aalyria.spacetime.api.common.Polarization.constant:type_name -> aalyria.spacetime.api.common.Polarization.Constant
	17, // 15: aalyria.spacetime.api.common.Targeting.motion_format:type_name -> aalyria.spacetime.api.common.Motion.Type
	6,  // 16: aalyria.spacetime.api.common.AntennaDefinition.ElevationMask.elevation_rise:type_name -> aalyria.spacetime.api.common.AntennaDefinition.ElevationMask.ElevationRise
	18, // 17: aalyria.spacetime.api.common.Projection.Custom.directions:type_name -> aalyria.spacetime.api.common.PointingVector
	19, // 18: aalyria.spacetime.api.common.Polarization.Constant.left_hand_circular:type_name -> google.protobuf.Empty
	19, // 19: aalyria.spacetime.api.common.Polarization.Constant.right_hand_circular:type_name -> google.protobuf.Empty
	15, // 20: aalyria.spacetime.api.common.Polarization.Constant.linear:type_name -> aalyria.spacetime.api.common.Polarization.Constant.Linear
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_common_platform_antenna_proto_init() }
func file_api_common_platform_antenna_proto_init() {
	if File_api_common_platform_antenna_proto != nil {
		return
	}
	file_api_common_coordinates_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_common_platform_antenna_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaConstraints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Projection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polarization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Targeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaDefinition_ElevationMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaDefinition_ElevationMask_ElevationRise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaConstraints_LinkRangeConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaConstraints_AzimuthAngleRateConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaConstraints_ElevationAngleRateConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntennaConstraints_TotalAngularRateConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Projection_Conic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Projection_Rectangular); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Projection_Custom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polarization_Constant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_platform_antenna_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polarization_Constant_Linear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_platform_antenna_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Projection_Conic_)(nil),
		(*Projection_Rectangular_)(nil),
		(*Projection_Custom_)(nil),
	}
	file_api_common_platform_antenna_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Polarization_Constant_)(nil),
	}
	file_api_common_platform_antenna_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*Polarization_Constant_LeftHandCircular)(nil),
		(*Polarization_Constant_RightHandCircular)(nil),
		(*Polarization_Constant_Linear_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_platform_antenna_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_platform_antenna_proto_goTypes,
		DependencyIndexes: file_api_common_platform_antenna_proto_depIdxs,
		MessageInfos:      file_api_common_platform_antenna_proto_msgTypes,
	}.Build()
	File_api_common_platform_antenna_proto = out.File
	file_api_common_platform_antenna_proto_rawDesc = nil
	file_api_common_platform_antenna_proto_goTypes = nil
	file_api_common_platform_antenna_proto_depIdxs = nil
}
