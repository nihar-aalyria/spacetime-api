// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/control_flow.proto

package common

import (
	types "aalyria.com/spacetime/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlowUpdate_Operation int32

const (
	FlowUpdate_UNKNOWN FlowUpdate_Operation = 0
	FlowUpdate_ADD     FlowUpdate_Operation = 1
	FlowUpdate_DELETE  FlowUpdate_Operation = 2
)

// Enum value maps for FlowUpdate_Operation.
var (
	FlowUpdate_Operation_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADD",
		2: "DELETE",
	}
	FlowUpdate_Operation_value = map[string]int32{
		"UNKNOWN": 0,
		"ADD":     1,
		"DELETE":  2,
	}
)

func (x FlowUpdate_Operation) Enum() *FlowUpdate_Operation {
	p := new(FlowUpdate_Operation)
	*p = x
	return p
}

func (x FlowUpdate_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowUpdate_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_control_flow_proto_enumTypes[0].Descriptor()
}

func (FlowUpdate_Operation) Type() protoreflect.EnumType {
	return &file_api_common_control_flow_proto_enumTypes[0]
}

func (x FlowUpdate_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FlowUpdate_Operation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FlowUpdate_Operation(num)
	return nil
}

// Deprecated: Use FlowUpdate_Operation.Descriptor instead.
func (FlowUpdate_Operation) EnumDescriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{0, 0}
}

type FlowRule_ActionBucket_Action_SetField_Field int32

const (
	FlowRule_ActionBucket_Action_SetField_FIELD_UNSPECIFIED FlowRule_ActionBucket_Action_SetField_Field = 0
	FlowRule_ActionBucket_Action_SetField_FIELD_ETH_DST     FlowRule_ActionBucket_Action_SetField_Field = 2
	FlowRule_ActionBucket_Action_SetField_FIELD_MPLS_LABEL  FlowRule_ActionBucket_Action_SetField_Field = 3
	FlowRule_ActionBucket_Action_SetField_FIELD_VLAN_ID     FlowRule_ActionBucket_Action_SetField_Field = 4
	FlowRule_ActionBucket_Action_SetField_FIELD_PBB_ITAG    FlowRule_ActionBucket_Action_SetField_Field = 5
)

// Enum value maps for FlowRule_ActionBucket_Action_SetField_Field.
var (
	FlowRule_ActionBucket_Action_SetField_Field_name = map[int32]string{
		0: "FIELD_UNSPECIFIED",
		2: "FIELD_ETH_DST",
		3: "FIELD_MPLS_LABEL",
		4: "FIELD_VLAN_ID",
		5: "FIELD_PBB_ITAG",
	}
	FlowRule_ActionBucket_Action_SetField_Field_value = map[string]int32{
		"FIELD_UNSPECIFIED": 0,
		"FIELD_ETH_DST":     2,
		"FIELD_MPLS_LABEL":  3,
		"FIELD_VLAN_ID":     4,
		"FIELD_PBB_ITAG":    5,
	}
)

func (x FlowRule_ActionBucket_Action_SetField_Field) Enum() *FlowRule_ActionBucket_Action_SetField_Field {
	p := new(FlowRule_ActionBucket_Action_SetField_Field)
	*p = x
	return p
}

func (x FlowRule_ActionBucket_Action_SetField_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowRule_ActionBucket_Action_SetField_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_control_flow_proto_enumTypes[1].Descriptor()
}

func (FlowRule_ActionBucket_Action_SetField_Field) Type() protoreflect.EnumType {
	return &file_api_common_control_flow_proto_enumTypes[1]
}

func (x FlowRule_ActionBucket_Action_SetField_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FlowRule_ActionBucket_Action_SetField_Field) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FlowRule_ActionBucket_Action_SetField_Field(num)
	return nil
}

// Deprecated: Use FlowRule_ActionBucket_Action_SetField_Field.Descriptor instead.
func (FlowRule_ActionBucket_Action_SetField_Field) EnumDescriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 0, 0}
}

type FlowRule_ActionBucket_Action_PushHeader_Field int32

const (
	FlowRule_ActionBucket_Action_PushHeader_FIELD_UNSPECIFIED FlowRule_ActionBucket_Action_PushHeader_Field = 0
	FlowRule_ActionBucket_Action_PushHeader_FIELD_MPLS        FlowRule_ActionBucket_Action_PushHeader_Field = 1
	FlowRule_ActionBucket_Action_PushHeader_FIELD_VLAN        FlowRule_ActionBucket_Action_PushHeader_Field = 2
	FlowRule_ActionBucket_Action_PushHeader_FIELD_PBB         FlowRule_ActionBucket_Action_PushHeader_Field = 3
)

// Enum value maps for FlowRule_ActionBucket_Action_PushHeader_Field.
var (
	FlowRule_ActionBucket_Action_PushHeader_Field_name = map[int32]string{
		0: "FIELD_UNSPECIFIED",
		1: "FIELD_MPLS",
		2: "FIELD_VLAN",
		3: "FIELD_PBB",
	}
	FlowRule_ActionBucket_Action_PushHeader_Field_value = map[string]int32{
		"FIELD_UNSPECIFIED": 0,
		"FIELD_MPLS":        1,
		"FIELD_VLAN":        2,
		"FIELD_PBB":         3,
	}
)

func (x FlowRule_ActionBucket_Action_PushHeader_Field) Enum() *FlowRule_ActionBucket_Action_PushHeader_Field {
	p := new(FlowRule_ActionBucket_Action_PushHeader_Field)
	*p = x
	return p
}

func (x FlowRule_ActionBucket_Action_PushHeader_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowRule_ActionBucket_Action_PushHeader_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_control_flow_proto_enumTypes[2].Descriptor()
}

func (FlowRule_ActionBucket_Action_PushHeader_Field) Type() protoreflect.EnumType {
	return &file_api_common_control_flow_proto_enumTypes[2]
}

func (x FlowRule_ActionBucket_Action_PushHeader_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FlowRule_ActionBucket_Action_PushHeader_Field) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FlowRule_ActionBucket_Action_PushHeader_Field(num)
	return nil
}

// Deprecated: Use FlowRule_ActionBucket_Action_PushHeader_Field.Descriptor instead.
func (FlowRule_ActionBucket_Action_PushHeader_Field) EnumDescriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 2, 0}
}

type FlowRule_ActionBucket_Action_PopHeader_Field int32

const (
	FlowRule_ActionBucket_Action_PopHeader_FIELD_UNSPECIFIED FlowRule_ActionBucket_Action_PopHeader_Field = 0
	FlowRule_ActionBucket_Action_PopHeader_FIELD_MPLS        FlowRule_ActionBucket_Action_PopHeader_Field = 1
	FlowRule_ActionBucket_Action_PopHeader_FIELD_VLAN        FlowRule_ActionBucket_Action_PopHeader_Field = 2
	FlowRule_ActionBucket_Action_PopHeader_FIELD_PBB         FlowRule_ActionBucket_Action_PopHeader_Field = 3
)

// Enum value maps for FlowRule_ActionBucket_Action_PopHeader_Field.
var (
	FlowRule_ActionBucket_Action_PopHeader_Field_name = map[int32]string{
		0: "FIELD_UNSPECIFIED",
		1: "FIELD_MPLS",
		2: "FIELD_VLAN",
		3: "FIELD_PBB",
	}
	FlowRule_ActionBucket_Action_PopHeader_Field_value = map[string]int32{
		"FIELD_UNSPECIFIED": 0,
		"FIELD_MPLS":        1,
		"FIELD_VLAN":        2,
		"FIELD_PBB":         3,
	}
)

func (x FlowRule_ActionBucket_Action_PopHeader_Field) Enum() *FlowRule_ActionBucket_Action_PopHeader_Field {
	p := new(FlowRule_ActionBucket_Action_PopHeader_Field)
	*p = x
	return p
}

func (x FlowRule_ActionBucket_Action_PopHeader_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowRule_ActionBucket_Action_PopHeader_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_control_flow_proto_enumTypes[3].Descriptor()
}

func (FlowRule_ActionBucket_Action_PopHeader_Field) Type() protoreflect.EnumType {
	return &file_api_common_control_flow_proto_enumTypes[3]
}

func (x FlowRule_ActionBucket_Action_PopHeader_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FlowRule_ActionBucket_Action_PopHeader_Field) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FlowRule_ActionBucket_Action_PopHeader_Field(num)
	return nil
}

// Deprecated: Use FlowRule_ActionBucket_Action_PopHeader_Field.Descriptor instead.
func (FlowRule_ActionBucket_Action_PopHeader_Field) EnumDescriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 3, 0}
}

type FlowUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowRuleId     *string               `protobuf:"bytes,1,opt,name=flow_rule_id,json=flowRuleId" json:"flow_rule_id,omitempty"`
	Operation      *FlowUpdate_Operation `protobuf:"varint,2,opt,name=operation,enum=aalyria.spacetime.api.common.FlowUpdate_Operation" json:"operation,omitempty"`
	Rule           *FlowRule             `protobuf:"bytes,3,opt,name=rule" json:"rule,omitempty"`
	SequenceNumber *int64                `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
}

func (x *FlowUpdate) Reset() {
	*x = FlowUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowUpdate) ProtoMessage() {}

func (x *FlowUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowUpdate.ProtoReflect.Descriptor instead.
func (*FlowUpdate) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{0}
}

func (x *FlowUpdate) GetFlowRuleId() string {
	if x != nil && x.FlowRuleId != nil {
		return *x.FlowRuleId
	}
	return ""
}

func (x *FlowUpdate) GetOperation() FlowUpdate_Operation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return FlowUpdate_UNKNOWN
}

func (x *FlowUpdate) GetRule() *FlowRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *FlowUpdate) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

type FlowRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classifier   *PacketClassifier        `protobuf:"bytes,5,opt,name=classifier" json:"classifier,omitempty"`
	ActionBucket []*FlowRule_ActionBucket `protobuf:"bytes,4,rep,name=action_bucket,json=actionBucket" json:"action_bucket,omitempty"`
}

func (x *FlowRule) Reset() {
	*x = FlowRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule) ProtoMessage() {}

func (x *FlowRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule.ProtoReflect.Descriptor instead.
func (*FlowRule) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1}
}

func (x *FlowRule) GetClassifier() *PacketClassifier {
	if x != nil {
		return x.Classifier
	}
	return nil
}

func (x *FlowRule) GetActionBucket() []*FlowRule_ActionBucket {
	if x != nil {
		return x.ActionBucket
	}
	return nil
}

type FlowState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *DateTime `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	FlowRuleIds []string  `protobuf:"bytes,3,rep,name=flow_rule_ids,json=flowRuleIds" json:"flow_rule_ids,omitempty"`
}

func (x *FlowState) Reset() {
	*x = FlowState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowState) ProtoMessage() {}

func (x *FlowState) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowState.ProtoReflect.Descriptor instead.
func (*FlowState) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{2}
}

func (x *FlowState) GetTimestamp() *DateTime {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FlowState) GetFlowRuleIds() []string {
	if x != nil {
		return x.FlowRuleIds
	}
	return nil
}

type FlowRule_ActionBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action []*FlowRule_ActionBucket_Action `protobuf:"bytes,1,rep,name=action" json:"action,omitempty"`
}

func (x *FlowRule_ActionBucket) Reset() {
	*x = FlowRule_ActionBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket) ProtoMessage() {}

func (x *FlowRule_ActionBucket) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FlowRule_ActionBucket) GetAction() []*FlowRule_ActionBucket_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type FlowRule_ActionBucket_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ActionType:
	//
	//	*FlowRule_ActionBucket_Action_SetField_
	//	*FlowRule_ActionBucket_Action_Forward_
	//	*FlowRule_ActionBucket_Action_PushHeader_
	//	*FlowRule_ActionBucket_Action_PopHeader_
	ActionType isFlowRule_ActionBucket_Action_ActionType `protobuf_oneof:"action_type"`
}

func (x *FlowRule_ActionBucket_Action) Reset() {
	*x = FlowRule_ActionBucket_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket_Action) ProtoMessage() {}

func (x *FlowRule_ActionBucket_Action) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket_Action.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket_Action) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (m *FlowRule_ActionBucket_Action) GetActionType() isFlowRule_ActionBucket_Action_ActionType {
	if m != nil {
		return m.ActionType
	}
	return nil
}

func (x *FlowRule_ActionBucket_Action) GetSetField() *FlowRule_ActionBucket_Action_SetField {
	if x, ok := x.GetActionType().(*FlowRule_ActionBucket_Action_SetField_); ok {
		return x.SetField
	}
	return nil
}

func (x *FlowRule_ActionBucket_Action) GetForward() *FlowRule_ActionBucket_Action_Forward {
	if x, ok := x.GetActionType().(*FlowRule_ActionBucket_Action_Forward_); ok {
		return x.Forward
	}
	return nil
}

func (x *FlowRule_ActionBucket_Action) GetPushHeader() *FlowRule_ActionBucket_Action_PushHeader {
	if x, ok := x.GetActionType().(*FlowRule_ActionBucket_Action_PushHeader_); ok {
		return x.PushHeader
	}
	return nil
}

func (x *FlowRule_ActionBucket_Action) GetPopHeader() *FlowRule_ActionBucket_Action_PopHeader {
	if x, ok := x.GetActionType().(*FlowRule_ActionBucket_Action_PopHeader_); ok {
		return x.PopHeader
	}
	return nil
}

type isFlowRule_ActionBucket_Action_ActionType interface {
	isFlowRule_ActionBucket_Action_ActionType()
}

type FlowRule_ActionBucket_Action_SetField_ struct {
	SetField *FlowRule_ActionBucket_Action_SetField `protobuf:"bytes,1,opt,name=set_field,json=setField,oneof"`
}

type FlowRule_ActionBucket_Action_Forward_ struct {
	Forward *FlowRule_ActionBucket_Action_Forward `protobuf:"bytes,2,opt,name=forward,oneof"`
}

type FlowRule_ActionBucket_Action_PushHeader_ struct {
	PushHeader *FlowRule_ActionBucket_Action_PushHeader `protobuf:"bytes,3,opt,name=push_header,json=pushHeader,oneof"`
}

type FlowRule_ActionBucket_Action_PopHeader_ struct {
	PopHeader *FlowRule_ActionBucket_Action_PopHeader `protobuf:"bytes,4,opt,name=pop_header,json=popHeader,oneof"`
}

func (*FlowRule_ActionBucket_Action_SetField_) isFlowRule_ActionBucket_Action_ActionType() {}

func (*FlowRule_ActionBucket_Action_Forward_) isFlowRule_ActionBucket_Action_ActionType() {}

func (*FlowRule_ActionBucket_Action_PushHeader_) isFlowRule_ActionBucket_Action_ActionType() {}

func (*FlowRule_ActionBucket_Action_PopHeader_) isFlowRule_ActionBucket_Action_ActionType() {}

type FlowRule_ActionBucket_Action_SetField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field      *FlowRule_ActionBucket_Action_SetField_Field `protobuf:"varint,1,opt,name=field,enum=aalyria.spacetime.api.common.FlowRule_ActionBucket_Action_SetField_Field" json:"field,omitempty"`
	ValueAscii *string                                      `protobuf:"bytes,3,opt,name=value_ascii,json=valueAscii" json:"value_ascii,omitempty"`
}

func (x *FlowRule_ActionBucket_Action_SetField) Reset() {
	*x = FlowRule_ActionBucket_Action_SetField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket_Action_SetField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket_Action_SetField) ProtoMessage() {}

func (x *FlowRule_ActionBucket_Action_SetField) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket_Action_SetField.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket_Action_SetField) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *FlowRule_ActionBucket_Action_SetField) GetField() FlowRule_ActionBucket_Action_SetField_Field {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return FlowRule_ActionBucket_Action_SetField_FIELD_UNSPECIFIED
}

func (x *FlowRule_ActionBucket_Action_SetField) GetValueAscii() string {
	if x != nil && x.ValueAscii != nil {
		return *x.ValueAscii
	}
	return ""
}

type FlowRule_ActionBucket_Action_Forward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutInterfaceId *string `protobuf:"bytes,1,opt,name=out_interface_id,json=outInterfaceId" json:"out_interface_id,omitempty"`
	NextHopIp      *string `protobuf:"bytes,2,opt,name=next_hop_ip,json=nextHopIp" json:"next_hop_ip,omitempty"`
}

func (x *FlowRule_ActionBucket_Action_Forward) Reset() {
	*x = FlowRule_ActionBucket_Action_Forward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket_Action_Forward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket_Action_Forward) ProtoMessage() {}

func (x *FlowRule_ActionBucket_Action_Forward) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket_Action_Forward.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket_Action_Forward) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (x *FlowRule_ActionBucket_Action_Forward) GetOutInterfaceId() string {
	if x != nil && x.OutInterfaceId != nil {
		return *x.OutInterfaceId
	}
	return ""
}

func (x *FlowRule_ActionBucket_Action_Forward) GetNextHopIp() string {
	if x != nil && x.NextHopIp != nil {
		return *x.NextHopIp
	}
	return ""
}

type FlowRule_ActionBucket_Action_PushHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field     *FlowRule_ActionBucket_Action_PushHeader_Field `protobuf:"varint,1,opt,name=field,enum=aalyria.spacetime.api.common.FlowRule_ActionBucket_Action_PushHeader_Field" json:"field,omitempty"`
	EtherType *types.EtherType                               `protobuf:"bytes,2,opt,name=ether_type,json=etherType" json:"ether_type,omitempty"`
}

func (x *FlowRule_ActionBucket_Action_PushHeader) Reset() {
	*x = FlowRule_ActionBucket_Action_PushHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket_Action_PushHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket_Action_PushHeader) ProtoMessage() {}

func (x *FlowRule_ActionBucket_Action_PushHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket_Action_PushHeader.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket_Action_PushHeader) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 2}
}

func (x *FlowRule_ActionBucket_Action_PushHeader) GetField() FlowRule_ActionBucket_Action_PushHeader_Field {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return FlowRule_ActionBucket_Action_PushHeader_FIELD_UNSPECIFIED
}

func (x *FlowRule_ActionBucket_Action_PushHeader) GetEtherType() *types.EtherType {
	if x != nil {
		return x.EtherType
	}
	return nil
}

type FlowRule_ActionBucket_Action_PopHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field     *FlowRule_ActionBucket_Action_PopHeader_Field `protobuf:"varint,1,opt,name=field,enum=aalyria.spacetime.api.common.FlowRule_ActionBucket_Action_PopHeader_Field" json:"field,omitempty"`
	EtherType *types.EtherType                              `protobuf:"bytes,2,opt,name=ether_type,json=etherType" json:"ether_type,omitempty"`
}

func (x *FlowRule_ActionBucket_Action_PopHeader) Reset() {
	*x = FlowRule_ActionBucket_Action_PopHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_control_flow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowRule_ActionBucket_Action_PopHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRule_ActionBucket_Action_PopHeader) ProtoMessage() {}

func (x *FlowRule_ActionBucket_Action_PopHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_control_flow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRule_ActionBucket_Action_PopHeader.ProtoReflect.Descriptor instead.
func (*FlowRule_ActionBucket_Action_PopHeader) Descriptor() ([]byte, []int) {
	return file_api_common_control_flow_proto_rawDescGZIP(), []int{1, 0, 0, 3}
}

func (x *FlowRule_ActionBucket_Action_PopHeader) GetField() FlowRule_ActionBucket_Action_PopHeader_Field {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return FlowRule_ActionBucket_Action_PopHeader_FIELD_UNSPECIFIED
}

func (x *FlowRule_ActionBucket_Action_PopHeader) GetEtherType() *types.EtherType {
	if x != nil {
		return x.EtherType
	}
	return nil
}

var File_api_common_control_flow_proto protoreflect.FileDescriptor

var file_api_common_control_flow_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x18, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x02, 0x0a, 0x0a, 0x46, 0x6c, 0x6f,
	0x77, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x2d, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22,
	0xd4, 0x0c, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x8d, 0x0b, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x52, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa8, 0x0a, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x5e, 0x0a, 0x07, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x68, 0x0a, 0x0b, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x45, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x0a, 0x70, 0x6f, 0x70, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x8c, 0x02, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x5f, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x61, 0x73, 0x63, 0x69, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73, 0x63, 0x69, 0x69, 0x22, 0x6e, 0x0a, 0x05, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x44, 0x53, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x5f, 0x4c, 0x41, 0x42, 0x45,
	0x4c, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x4c, 0x41,
	0x4e, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x50, 0x42, 0x42, 0x5f, 0x49, 0x54, 0x41, 0x47, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03,
	0x4a, 0x08, 0x08, 0x04, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x1a, 0x53, 0x0a, 0x07, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x49, 0x70, 0x1a,
	0x85, 0x02, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x61,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x45, 0x0a, 0x0a, 0x65, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x50, 0x42, 0x42, 0x10, 0x03, 0x1a, 0x83, 0x02, 0x0a, 0x09, 0x50, 0x6f, 0x70, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x4a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x6f, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x45, 0x0a, 0x0a, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x74, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d,
	0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4d, 0x50, 0x4c, 0x53, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x4c, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x42, 0x42, 0x10, 0x03, 0x42, 0x0d, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x4a, 0x08, 0x08, 0x05,
	0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x04, 0x4a, 0x08, 0x08, 0x08,
	0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x85, 0x01, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x4a, 0x08, 0x08, 0x04, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x42, 0x44,
	0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5a, 0x20, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_api_common_control_flow_proto_rawDescOnce sync.Once
	file_api_common_control_flow_proto_rawDescData = file_api_common_control_flow_proto_rawDesc
)

func file_api_common_control_flow_proto_rawDescGZIP() []byte {
	file_api_common_control_flow_proto_rawDescOnce.Do(func() {
		file_api_common_control_flow_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_control_flow_proto_rawDescData)
	})
	return file_api_common_control_flow_proto_rawDescData
}

var file_api_common_control_flow_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_common_control_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_common_control_flow_proto_goTypes = []interface{}{
	(FlowUpdate_Operation)(0),                          // 0: aalyria.spacetime.api.common.FlowUpdate.Operation
	(FlowRule_ActionBucket_Action_SetField_Field)(0),   // 1: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.SetField.Field
	(FlowRule_ActionBucket_Action_PushHeader_Field)(0), // 2: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader.Field
	(FlowRule_ActionBucket_Action_PopHeader_Field)(0),  // 3: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader.Field
	(*FlowUpdate)(nil),                                 // 4: aalyria.spacetime.api.common.FlowUpdate
	(*FlowRule)(nil),                                   // 5: aalyria.spacetime.api.common.FlowRule
	(*FlowState)(nil),                                  // 6: aalyria.spacetime.api.common.FlowState
	(*FlowRule_ActionBucket)(nil),                      // 7: aalyria.spacetime.api.common.FlowRule.ActionBucket
	(*FlowRule_ActionBucket_Action)(nil),               // 8: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action
	(*FlowRule_ActionBucket_Action_SetField)(nil),      // 9: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.SetField
	(*FlowRule_ActionBucket_Action_Forward)(nil),       // 10: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.Forward
	(*FlowRule_ActionBucket_Action_PushHeader)(nil),    // 11: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader
	(*FlowRule_ActionBucket_Action_PopHeader)(nil),     // 12: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader
	(*PacketClassifier)(nil),                           // 13: aalyria.spacetime.api.common.PacketClassifier
	(*DateTime)(nil),                                   // 14: aalyria.spacetime.api.common.DateTime
	(*types.EtherType)(nil),                            // 15: aalyria.spacetime.api.types.EtherType
}
var file_api_common_control_flow_proto_depIdxs = []int32{
	0,  // 0: aalyria.spacetime.api.common.FlowUpdate.operation:type_name -> aalyria.spacetime.api.common.FlowUpdate.Operation
	5,  // 1: aalyria.spacetime.api.common.FlowUpdate.rule:type_name -> aalyria.spacetime.api.common.FlowRule
	13, // 2: aalyria.spacetime.api.common.FlowRule.classifier:type_name -> aalyria.spacetime.api.common.PacketClassifier
	7,  // 3: aalyria.spacetime.api.common.FlowRule.action_bucket:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket
	14, // 4: aalyria.spacetime.api.common.FlowState.timestamp:type_name -> aalyria.spacetime.api.common.DateTime
	8,  // 5: aalyria.spacetime.api.common.FlowRule.ActionBucket.action:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action
	9,  // 6: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.set_field:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.SetField
	10, // 7: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.forward:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.Forward
	11, // 8: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.push_header:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader
	12, // 9: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.pop_header:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader
	1,  // 10: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.SetField.field:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.SetField.Field
	2,  // 11: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader.field:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader.Field
	15, // 12: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PushHeader.ether_type:type_name -> aalyria.spacetime.api.types.EtherType
	3,  // 13: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader.field:type_name -> aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader.Field
	15, // 14: aalyria.spacetime.api.common.FlowRule.ActionBucket.Action.PopHeader.ether_type:type_name -> aalyria.spacetime.api.types.EtherType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_common_control_flow_proto_init() }
func file_api_common_control_flow_proto_init() {
	if File_api_common_control_flow_proto != nil {
		return
	}
	file_api_common_network_proto_init()
	file_api_common_time_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_common_control_flow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket_Action_SetField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket_Action_Forward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket_Action_PushHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_control_flow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowRule_ActionBucket_Action_PopHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_control_flow_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*FlowRule_ActionBucket_Action_SetField_)(nil),
		(*FlowRule_ActionBucket_Action_Forward_)(nil),
		(*FlowRule_ActionBucket_Action_PushHeader_)(nil),
		(*FlowRule_ActionBucket_Action_PopHeader_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_control_flow_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_control_flow_proto_goTypes,
		DependencyIndexes: file_api_common_control_flow_proto_depIdxs,
		EnumInfos:         file_api_common_control_flow_proto_enumTypes,
		MessageInfos:      file_api_common_control_flow_proto_msgTypes,
	}.Build()
	File_api_common_control_flow_proto = out.File
	file_api_common_control_flow_proto_rawDesc = nil
	file_api_common_control_flow_proto_goTypes = nil
	file_api_common_control_flow_proto_depIdxs = nil
}
