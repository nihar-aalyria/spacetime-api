// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/bent_pipe.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BentPipePayload_AntennaAndSignalProcessors_Direction int32

const (
	BentPipePayload_AntennaAndSignalProcessors_DIRECTION_UNSPECIFIED BentPipePayload_AntennaAndSignalProcessors_Direction = 0
	BentPipePayload_AntennaAndSignalProcessors_A                     BentPipePayload_AntennaAndSignalProcessors_Direction = 1
	BentPipePayload_AntennaAndSignalProcessors_B                     BentPipePayload_AntennaAndSignalProcessors_Direction = 2
)

// Enum value maps for BentPipePayload_AntennaAndSignalProcessors_Direction.
var (
	BentPipePayload_AntennaAndSignalProcessors_Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "A",
		2: "B",
	}
	BentPipePayload_AntennaAndSignalProcessors_Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"A":                     1,
		"B":                     2,
	}
)

func (x BentPipePayload_AntennaAndSignalProcessors_Direction) Enum() *BentPipePayload_AntennaAndSignalProcessors_Direction {
	p := new(BentPipePayload_AntennaAndSignalProcessors_Direction)
	*p = x
	return p
}

func (x BentPipePayload_AntennaAndSignalProcessors_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BentPipePayload_AntennaAndSignalProcessors_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_bent_pipe_proto_enumTypes[0].Descriptor()
}

func (BentPipePayload_AntennaAndSignalProcessors_Direction) Type() protoreflect.EnumType {
	return &file_api_common_bent_pipe_proto_enumTypes[0]
}

func (x BentPipePayload_AntennaAndSignalProcessors_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BentPipePayload_AntennaAndSignalProcessors_Direction.Descriptor instead.
func (BentPipePayload_AntennaAndSignalProcessors_Direction) EnumDescriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 0, 0}
}

type BentPipePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Antennas                []*BentPipePayload_AntennaAndSignalProcessors `protobuf:"bytes,2,rep,name=antennas,proto3" json:"antennas,omitempty"`
	FixedPayload            *BentPipePayload_FixedPayload                 `protobuf:"bytes,3,opt,name=fixed_payload,json=fixedPayload,proto3" json:"fixed_payload,omitempty"`
	DigitalPayload          *BentPipePayload_DigitalPayload               `protobuf:"bytes,4,opt,name=digital_payload,json=digitalPayload,proto3" json:"digital_payload,omitempty"`
	MaxProcessedBandwidthHz uint32                                        `protobuf:"varint,5,opt,name=max_processed_bandwidth_hz,json=maxProcessedBandwidthHz,proto3" json:"max_processed_bandwidth_hz,omitempty"`
	MaxChannels             uint32                                        `protobuf:"varint,6,opt,name=max_channels,json=maxChannels,proto3" json:"max_channels,omitempty"`
}

func (x *BentPipePayload) Reset() {
	*x = BentPipePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload) ProtoMessage() {}

func (x *BentPipePayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload.ProtoReflect.Descriptor instead.
func (*BentPipePayload) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0}
}

func (x *BentPipePayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BentPipePayload) GetAntennas() []*BentPipePayload_AntennaAndSignalProcessors {
	if x != nil {
		return x.Antennas
	}
	return nil
}

func (x *BentPipePayload) GetFixedPayload() *BentPipePayload_FixedPayload {
	if x != nil {
		return x.FixedPayload
	}
	return nil
}

func (x *BentPipePayload) GetDigitalPayload() *BentPipePayload_DigitalPayload {
	if x != nil {
		return x.DigitalPayload
	}
	return nil
}

func (x *BentPipePayload) GetMaxProcessedBandwidthHz() uint32 {
	if x != nil {
		return x.MaxProcessedBandwidthHz
	}
	return 0
}

func (x *BentPipePayload) GetMaxChannels() uint32 {
	if x != nil {
		return x.MaxChannels
	}
	return 0
}

type BentPipePayload_AntennaAndSignalProcessors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Antenna                  *AntennaDefinition                                   `protobuf:"bytes,2,opt,name=antenna,proto3" json:"antenna,omitempty"`
	TransmitSignalProcessors []*TransmitSignalProcessor                           `protobuf:"bytes,3,rep,name=transmit_signal_processors,json=transmitSignalProcessors,proto3" json:"transmit_signal_processors,omitempty"`
	ReceiveSignalProcessors  []*ReceiveSignalProcessor                            `protobuf:"bytes,4,rep,name=receive_signal_processors,json=receiveSignalProcessors,proto3" json:"receive_signal_processors,omitempty"`
	Direction                BentPipePayload_AntennaAndSignalProcessors_Direction `protobuf:"varint,5,opt,name=direction,proto3,enum=aalyria.spacetime.api.common.BentPipePayload_AntennaAndSignalProcessors_Direction" json:"direction,omitempty"`
}

func (x *BentPipePayload_AntennaAndSignalProcessors) Reset() {
	*x = BentPipePayload_AntennaAndSignalProcessors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload_AntennaAndSignalProcessors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload_AntennaAndSignalProcessors) ProtoMessage() {}

func (x *BentPipePayload_AntennaAndSignalProcessors) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload_AntennaAndSignalProcessors.ProtoReflect.Descriptor instead.
func (*BentPipePayload_AntennaAndSignalProcessors) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BentPipePayload_AntennaAndSignalProcessors) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BentPipePayload_AntennaAndSignalProcessors) GetAntenna() *AntennaDefinition {
	if x != nil {
		return x.Antenna
	}
	return nil
}

func (x *BentPipePayload_AntennaAndSignalProcessors) GetTransmitSignalProcessors() []*TransmitSignalProcessor {
	if x != nil {
		return x.TransmitSignalProcessors
	}
	return nil
}

func (x *BentPipePayload_AntennaAndSignalProcessors) GetReceiveSignalProcessors() []*ReceiveSignalProcessor {
	if x != nil {
		return x.ReceiveSignalProcessors
	}
	return nil
}

func (x *BentPipePayload_AntennaAndSignalProcessors) GetDirection() BentPipePayload_AntennaAndSignalProcessors_Direction {
	if x != nil {
		return x.Direction
	}
	return BentPipePayload_AntennaAndSignalProcessors_DIRECTION_UNSPECIFIED
}

type BentPipePayload_FixedPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels              []*BentPipePayload_FixedPayload_Channel              `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	ChannelConfigurations []*BentPipePayload_FixedPayload_ChannelConfiguration `protobuf:"bytes,3,rep,name=channel_configurations,json=channelConfigurations,proto3" json:"channel_configurations,omitempty"`
}

func (x *BentPipePayload_FixedPayload) Reset() {
	*x = BentPipePayload_FixedPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload_FixedPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload_FixedPayload) ProtoMessage() {}

func (x *BentPipePayload_FixedPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload_FixedPayload.ProtoReflect.Descriptor instead.
func (*BentPipePayload_FixedPayload) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BentPipePayload_FixedPayload) GetChannels() []*BentPipePayload_FixedPayload_Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *BentPipePayload_FixedPayload) GetChannelConfigurations() []*BentPipePayload_FixedPayload_ChannelConfiguration {
	if x != nil {
		return x.ChannelConfigurations
	}
	return nil
}

type BentPipePayload_DigitalPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinInputFrequencyHz   uint64 `protobuf:"varint,1,opt,name=min_input_frequency_hz,json=minInputFrequencyHz,proto3" json:"min_input_frequency_hz,omitempty"`
	MaxInputFrequencyHz   uint64 `protobuf:"varint,2,opt,name=max_input_frequency_hz,json=maxInputFrequencyHz,proto3" json:"max_input_frequency_hz,omitempty"`
	MinOutputFrequencyHz  uint64 `protobuf:"varint,3,opt,name=min_output_frequency_hz,json=minOutputFrequencyHz,proto3" json:"min_output_frequency_hz,omitempty"`
	MaxOutputFrequencyHz  uint64 `protobuf:"varint,4,opt,name=max_output_frequency_hz,json=maxOutputFrequencyHz,proto3" json:"max_output_frequency_hz,omitempty"`
	MinChannelBandwidthHz uint64 `protobuf:"varint,5,opt,name=min_channel_bandwidth_hz,json=minChannelBandwidthHz,proto3" json:"min_channel_bandwidth_hz,omitempty"`
	MaxChannelBandwidthHz uint64 `protobuf:"varint,6,opt,name=max_channel_bandwidth_hz,json=maxChannelBandwidthHz,proto3" json:"max_channel_bandwidth_hz,omitempty"`
}

func (x *BentPipePayload_DigitalPayload) Reset() {
	*x = BentPipePayload_DigitalPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload_DigitalPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload_DigitalPayload) ProtoMessage() {}

func (x *BentPipePayload_DigitalPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload_DigitalPayload.ProtoReflect.Descriptor instead.
func (*BentPipePayload_DigitalPayload) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 2}
}

func (x *BentPipePayload_DigitalPayload) GetMinInputFrequencyHz() uint64 {
	if x != nil {
		return x.MinInputFrequencyHz
	}
	return 0
}

func (x *BentPipePayload_DigitalPayload) GetMaxInputFrequencyHz() uint64 {
	if x != nil {
		return x.MaxInputFrequencyHz
	}
	return 0
}

func (x *BentPipePayload_DigitalPayload) GetMinOutputFrequencyHz() uint64 {
	if x != nil {
		return x.MinOutputFrequencyHz
	}
	return 0
}

func (x *BentPipePayload_DigitalPayload) GetMaxOutputFrequencyHz() uint64 {
	if x != nil {
		return x.MaxOutputFrequencyHz
	}
	return 0
}

func (x *BentPipePayload_DigitalPayload) GetMinChannelBandwidthHz() uint64 {
	if x != nil {
		return x.MinChannelBandwidthHz
	}
	return 0
}

func (x *BentPipePayload_DigitalPayload) GetMaxChannelBandwidthHz() uint64 {
	if x != nil {
		return x.MaxChannelBandwidthHz
	}
	return 0
}

type BentPipePayload_FixedPayload_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Signal                       *Signal `protobuf:"bytes,2,opt,name=signal,proto3" json:"signal,omitempty"`
	AntennaAndSignalProcessorsId string  `protobuf:"bytes,3,opt,name=antenna_and_signal_processors_id,json=antennaAndSignalProcessorsId,proto3" json:"antenna_and_signal_processors_id,omitempty"`
}

func (x *BentPipePayload_FixedPayload_Channel) Reset() {
	*x = BentPipePayload_FixedPayload_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload_FixedPayload_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload_FixedPayload_Channel) ProtoMessage() {}

func (x *BentPipePayload_FixedPayload_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload_FixedPayload_Channel.ProtoReflect.Descriptor instead.
func (*BentPipePayload_FixedPayload_Channel) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *BentPipePayload_FixedPayload_Channel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BentPipePayload_FixedPayload_Channel) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *BentPipePayload_FixedPayload_Channel) GetAntennaAndSignalProcessorsId() string {
	if x != nil {
		return x.AntennaAndSignalProcessorsId
	}
	return ""
}

type BentPipePayload_FixedPayload_ChannelConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputChannelId  string  `protobuf:"bytes,1,opt,name=input_channel_id,json=inputChannelId,proto3" json:"input_channel_id,omitempty"`
	OutputChannelId string  `protobuf:"bytes,2,opt,name=output_channel_id,json=outputChannelId,proto3" json:"output_channel_id,omitempty"`
	BandwidthHz     float64 `protobuf:"fixed64,3,opt,name=bandwidth_hz,json=bandwidthHz,proto3" json:"bandwidth_hz,omitempty"`
}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) Reset() {
	*x = BentPipePayload_FixedPayload_ChannelConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_bent_pipe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BentPipePayload_FixedPayload_ChannelConfiguration) ProtoMessage() {}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_bent_pipe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BentPipePayload_FixedPayload_ChannelConfiguration.ProtoReflect.Descriptor instead.
func (*BentPipePayload_FixedPayload_ChannelConfiguration) Descriptor() ([]byte, []int) {
	return file_api_common_bent_pipe_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) GetInputChannelId() string {
	if x != nil {
		return x.InputChannelId
	}
	return ""
}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) GetOutputChannelId() string {
	if x != nil {
		return x.OutputChannelId
	}
	return ""
}

func (x *BentPipePayload_FixedPayload_ChannelConfiguration) GetBandwidthHz() float64 {
	if x != nil {
		return x.BandwidthHz
	}
	return 0
}

var File_api_common_bent_pipe_proto protoreflect.FileDescriptor

var file_api_common_bent_pipe_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65, 0x6c, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x0e, 0x0a, 0x0f, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x64, 0x0a, 0x08, 0x61, 0x6e, 0x74, 0x65, 0x6e,
	0x6e, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x41, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x52, 0x08, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x73, 0x12, 0x5f, 0x0a,
	0x0d, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70, 0x65, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x65,
	0x0a, 0x0f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70, 0x65, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0e, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x5f, 0x68, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x48, 0x7a, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x1a, 0x86, 0x04, 0x0a, 0x1a, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e,
	0x61, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x12,
	0x73, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x18, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x17, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x70, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x41, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61,
	0x41, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x05, 0x0a, 0x01, 0x41, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x02, 0x1a, 0xab,
	0x04, 0x0a, 0x0c, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x5e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x86, 0x01, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x70, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9f, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x46, 0x0a, 0x20, 0x61, 0x6e, 0x74, 0x65, 0x6e, 0x6e, 0x61, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x61, 0x6e,
	0x74, 0x65, 0x6e, 0x6e, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x64, 0x1a, 0x8f, 0x01, 0x0a, 0x14, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x68, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x48, 0x7a, 0x1a, 0xda, 0x02, 0x0a,
	0x0e, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x33, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x48, 0x7a, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x69, 0x6e,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x68, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a,
	0x12, 0x35, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x68, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x7a, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x69, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x5f, 0x68, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x6d, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x48, 0x7a,
	0x12, 0x37, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x68, 0x7a, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x48, 0x7a, 0x42, 0x44, 0x0a, 0x20, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x20, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_common_bent_pipe_proto_rawDescOnce sync.Once
	file_api_common_bent_pipe_proto_rawDescData = file_api_common_bent_pipe_proto_rawDesc
)

func file_api_common_bent_pipe_proto_rawDescGZIP() []byte {
	file_api_common_bent_pipe_proto_rawDescOnce.Do(func() {
		file_api_common_bent_pipe_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_bent_pipe_proto_rawDescData)
	})
	return file_api_common_bent_pipe_proto_rawDescData
}

var file_api_common_bent_pipe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_common_bent_pipe_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_common_bent_pipe_proto_goTypes = []interface{}{
	(BentPipePayload_AntennaAndSignalProcessors_Direction)(0), // 0: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.Direction
	(*BentPipePayload)(nil),                                   // 1: aalyria.spacetime.api.common.BentPipePayload
	(*BentPipePayload_AntennaAndSignalProcessors)(nil),        // 2: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors
	(*BentPipePayload_FixedPayload)(nil),                      // 3: aalyria.spacetime.api.common.BentPipePayload.FixedPayload
	(*BentPipePayload_DigitalPayload)(nil),                    // 4: aalyria.spacetime.api.common.BentPipePayload.DigitalPayload
	(*BentPipePayload_FixedPayload_Channel)(nil),              // 5: aalyria.spacetime.api.common.BentPipePayload.FixedPayload.Channel
	(*BentPipePayload_FixedPayload_ChannelConfiguration)(nil), // 6: aalyria.spacetime.api.common.BentPipePayload.FixedPayload.ChannelConfiguration
	(*AntennaDefinition)(nil),                                 // 7: aalyria.spacetime.api.common.AntennaDefinition
	(*TransmitSignalProcessor)(nil),                           // 8: aalyria.spacetime.api.common.TransmitSignalProcessor
	(*ReceiveSignalProcessor)(nil),                            // 9: aalyria.spacetime.api.common.ReceiveSignalProcessor
	(*Signal)(nil),                                            // 10: aalyria.spacetime.api.common.Signal
}
var file_api_common_bent_pipe_proto_depIdxs = []int32{
	2,  // 0: aalyria.spacetime.api.common.BentPipePayload.antennas:type_name -> aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors
	3,  // 1: aalyria.spacetime.api.common.BentPipePayload.fixed_payload:type_name -> aalyria.spacetime.api.common.BentPipePayload.FixedPayload
	4,  // 2: aalyria.spacetime.api.common.BentPipePayload.digital_payload:type_name -> aalyria.spacetime.api.common.BentPipePayload.DigitalPayload
	7,  // 3: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.antenna:type_name -> aalyria.spacetime.api.common.AntennaDefinition
	8,  // 4: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.transmit_signal_processors:type_name -> aalyria.spacetime.api.common.TransmitSignalProcessor
	9,  // 5: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.receive_signal_processors:type_name -> aalyria.spacetime.api.common.ReceiveSignalProcessor
	0,  // 6: aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.direction:type_name -> aalyria.spacetime.api.common.BentPipePayload.AntennaAndSignalProcessors.Direction
	5,  // 7: aalyria.spacetime.api.common.BentPipePayload.FixedPayload.channels:type_name -> aalyria.spacetime.api.common.BentPipePayload.FixedPayload.Channel
	6,  // 8: aalyria.spacetime.api.common.BentPipePayload.FixedPayload.channel_configurations:type_name -> aalyria.spacetime.api.common.BentPipePayload.FixedPayload.ChannelConfiguration
	10, // 9: aalyria.spacetime.api.common.BentPipePayload.FixedPayload.Channel.signal:type_name -> aalyria.spacetime.api.common.Signal
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_common_bent_pipe_proto_init() }
func file_api_common_bent_pipe_proto_init() {
	if File_api_common_bent_pipe_proto != nil {
		return
	}
	file_api_common_platform_antenna_proto_init()
	file_api_common_wireless_proto_init()
	file_api_common_wireless_receiver_proto_init()
	file_api_common_wireless_transmitter_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_common_bent_pipe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_bent_pipe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload_AntennaAndSignalProcessors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_bent_pipe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload_FixedPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_bent_pipe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload_DigitalPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_bent_pipe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload_FixedPayload_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_bent_pipe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BentPipePayload_FixedPayload_ChannelConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_bent_pipe_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_bent_pipe_proto_goTypes,
		DependencyIndexes: file_api_common_bent_pipe_proto_depIdxs,
		EnumInfos:         file_api_common_bent_pipe_proto_enumTypes,
		MessageInfos:      file_api_common_bent_pipe_proto_msgTypes,
	}.Build()
	File_api_common_bent_pipe_proto = out.File
	file_api_common_bent_pipe_proto_rawDesc = nil
	file_api_common_bent_pipe_proto_goTypes = nil
	file_api_common_bent_pipe_proto_depIdxs = nil
}
