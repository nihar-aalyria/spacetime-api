// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/common/wireless_receiver.proto

package com.aalyria.spacetime.api.common;

public final class WirelessReceiver {
  private WirelessReceiver() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RxChannelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.RxChannels)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @return A list containing the centerFrequencyHz.
     */
    java.util.List<java.lang.Long> getCenterFrequencyHzList();
    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @return The count of centerFrequencyHz.
     */
    int getCenterFrequencyHzCount();
    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @param index The index of the element to return.
     * @return The centerFrequencyHz at the given index.
     */
    long getCenterFrequencyHz(int index);
  }
  /**
   * Protobuf type {@code aalyria.spacetime.api.common.RxChannels}
   */
  public static final class RxChannels extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.RxChannels)
      RxChannelsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RxChannels.newBuilder() to construct.
    private RxChannels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RxChannels() {
      centerFrequencyHz_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RxChannels();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_RxChannels_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_RxChannels_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.class, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.Builder.class);
    }

    public static final int CENTER_FREQUENCY_HZ_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList centerFrequencyHz_;
    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @return A list containing the centerFrequencyHz.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getCenterFrequencyHzList() {
      return centerFrequencyHz_;
    }
    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @return The count of centerFrequencyHz.
     */
    public int getCenterFrequencyHzCount() {
      return centerFrequencyHz_.size();
    }
    /**
     * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
     * @param index The index of the element to return.
     * @return The centerFrequencyHz at the given index.
     */
    public long getCenterFrequencyHz(int index) {
      return centerFrequencyHz_.getLong(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < centerFrequencyHz_.size(); i++) {
        output.writeInt64(1, centerFrequencyHz_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < centerFrequencyHz_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(centerFrequencyHz_.getLong(i));
        }
        size += dataSize;
        size += 1 * getCenterFrequencyHzList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels)) {
        return super.equals(obj);
      }
      com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels other = (com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels) obj;

      if (!getCenterFrequencyHzList()
          .equals(other.getCenterFrequencyHzList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCenterFrequencyHzCount() > 0) {
        hash = (37 * hash) + CENTER_FREQUENCY_HZ_FIELD_NUMBER;
        hash = (53 * hash) + getCenterFrequencyHzList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.RxChannels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.RxChannels)
        com.aalyria.spacetime.api.common.WirelessReceiver.RxChannelsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_RxChannels_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_RxChannels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.class, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.Builder.class);
      }

      // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        centerFrequencyHz_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_RxChannels_descriptor;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getDefaultInstanceForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.getDefaultInstance();
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels build() {
        com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels buildPartial() {
        com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels result = new com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          centerFrequencyHz_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.centerFrequencyHz_ = centerFrequencyHz_;
      }

      private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels) {
          return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels other) {
        if (other == com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.getDefaultInstance()) return this;
        if (!other.centerFrequencyHz_.isEmpty()) {
          if (centerFrequencyHz_.isEmpty()) {
            centerFrequencyHz_ = other.centerFrequencyHz_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCenterFrequencyHzIsMutable();
            centerFrequencyHz_.addAll(other.centerFrequencyHz_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureCenterFrequencyHzIsMutable();
                centerFrequencyHz_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCenterFrequencyHzIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  centerFrequencyHz_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList centerFrequencyHz_ = emptyLongList();
      private void ensureCenterFrequencyHzIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          centerFrequencyHz_ = mutableCopy(centerFrequencyHz_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @return A list containing the centerFrequencyHz.
       */
      public java.util.List<java.lang.Long>
          getCenterFrequencyHzList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(centerFrequencyHz_) : centerFrequencyHz_;
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @return The count of centerFrequencyHz.
       */
      public int getCenterFrequencyHzCount() {
        return centerFrequencyHz_.size();
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @param index The index of the element to return.
       * @return The centerFrequencyHz at the given index.
       */
      public long getCenterFrequencyHz(int index) {
        return centerFrequencyHz_.getLong(index);
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @param index The index to set the value at.
       * @param value The centerFrequencyHz to set.
       * @return This builder for chaining.
       */
      public Builder setCenterFrequencyHz(
          int index, long value) {

        ensureCenterFrequencyHzIsMutable();
        centerFrequencyHz_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @param value The centerFrequencyHz to add.
       * @return This builder for chaining.
       */
      public Builder addCenterFrequencyHz(long value) {

        ensureCenterFrequencyHzIsMutable();
        centerFrequencyHz_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @param values The centerFrequencyHz to add.
       * @return This builder for chaining.
       */
      public Builder addAllCenterFrequencyHz(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCenterFrequencyHzIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, centerFrequencyHz_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 center_frequency_hz = 1 [json_name = "centerFrequencyHz"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCenterFrequencyHz() {
        centerFrequencyHz_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.RxChannels)
    }

    // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.RxChannels)
    private static final com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels();
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RxChannels>
        PARSER = new com.google.protobuf.AbstractParser<RxChannels>() {
      @java.lang.Override
      public RxChannels parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RxChannels> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RxChannels> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReceiverDefinitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.ReceiverDefinition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    int getChannelSetCount();
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    boolean containsChannelSet(
        java.lang.String key);
    /**
     * Use {@link #getChannelSetMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
    getChannelSet();
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
    getChannelSetMap();
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrDefault(
        java.lang.String key,
        /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels defaultValue);
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrThrow(
        java.lang.String key);

    /**
     * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
     * @return Whether the channelSelectionMethod field is set.
     */
    boolean hasChannelSelectionMethod();
    /**
     * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
     * @return The channelSelectionMethod.
     */
    com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod getChannelSelectionMethod();

    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> 
        getSignalProcessingStepList();
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getSignalProcessingStep(int index);
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    int getSignalProcessingStepCount();
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    java.util.List<? extends com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder> 
        getSignalProcessingStepOrBuilderList();
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder getSignalProcessingStepOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code aalyria.spacetime.api.common.ReceiverDefinition}
   */
  public static final class ReceiverDefinition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.ReceiverDefinition)
      ReceiverDefinitionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReceiverDefinition.newBuilder() to construct.
    private ReceiverDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReceiverDefinition() {
      name_ = "";
      channelSelectionMethod_ = 0;
      signalProcessingStep_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReceiverDefinition();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetChannelSet();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_SET_FIELD_NUMBER = 10;
    private static final class ChannelSetDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>newDefaultInstance(
                  com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> channelSet_;
    private com.google.protobuf.MapField<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
    internalGetChannelSet() {
      if (channelSet_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ChannelSetDefaultEntryHolder.defaultEntry);
      }
      return channelSet_;
    }
    public int getChannelSetCount() {
      return internalGetChannelSet().getMap().size();
    }
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    @java.lang.Override
    public boolean containsChannelSet(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetChannelSet().getMap().containsKey(key);
    }
    /**
     * Use {@link #getChannelSetMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> getChannelSet() {
      return getChannelSetMap();
    }
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> getChannelSetMap() {
      return internalGetChannelSet().getMap();
    }
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    @java.lang.Override
    public /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrDefault(
        java.lang.String key,
        /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> map =
          internalGetChannelSet().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> map =
          internalGetChannelSet().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CHANNEL_SELECTION_METHOD_FIELD_NUMBER = 9;
    private int channelSelectionMethod_ = 0;
    /**
     * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
     * @return Whether the channelSelectionMethod field is set.
     */
    @java.lang.Override public boolean hasChannelSelectionMethod() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
     * @return The channelSelectionMethod.
     */
    @java.lang.Override public com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod getChannelSelectionMethod() {
      com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod result = com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod.forNumber(channelSelectionMethod_);
      return result == null ? com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod.CHANNEL_SELECTION_METHOD_UNKNOWN : result;
    }

    public static final int SIGNAL_PROCESSING_STEP_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> signalProcessingStep_;
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    @java.lang.Override
    public java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> getSignalProcessingStepList() {
      return signalProcessingStep_;
    }
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder> 
        getSignalProcessingStepOrBuilderList() {
      return signalProcessingStep_;
    }
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    @java.lang.Override
    public int getSignalProcessingStepCount() {
      return signalProcessingStep_.size();
    }
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getSignalProcessingStep(int index) {
      return signalProcessingStep_.get(index);
    }
    /**
     * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder getSignalProcessingStepOrBuilder(
        int index) {
      return signalProcessingStep_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(9, channelSelectionMethod_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetChannelSet(),
          ChannelSetDefaultEntryHolder.defaultEntry,
          10);
      for (int i = 0; i < signalProcessingStep_.size(); i++) {
        output.writeMessage(11, signalProcessingStep_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, channelSelectionMethod_);
      }
      for (java.util.Map.Entry<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> entry
           : internalGetChannelSet().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
        channelSet__ = ChannelSetDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, channelSet__);
      }
      for (int i = 0; i < signalProcessingStep_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, signalProcessingStep_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition)) {
        return super.equals(obj);
      }
      com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (!internalGetChannelSet().equals(
          other.internalGetChannelSet())) return false;
      if (hasChannelSelectionMethod() != other.hasChannelSelectionMethod()) return false;
      if (hasChannelSelectionMethod()) {
        if (channelSelectionMethod_ != other.channelSelectionMethod_) return false;
      }
      if (!getSignalProcessingStepList()
          .equals(other.getSignalProcessingStepList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (!internalGetChannelSet().getMap().isEmpty()) {
        hash = (37 * hash) + CHANNEL_SET_FIELD_NUMBER;
        hash = (53 * hash) + internalGetChannelSet().hashCode();
      }
      if (hasChannelSelectionMethod()) {
        hash = (37 * hash) + CHANNEL_SELECTION_METHOD_FIELD_NUMBER;
        hash = (53 * hash) + channelSelectionMethod_;
      }
      if (getSignalProcessingStepCount() > 0) {
        hash = (37 * hash) + SIGNAL_PROCESSING_STEP_FIELD_NUMBER;
        hash = (53 * hash) + getSignalProcessingStepList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.ReceiverDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.ReceiverDefinition)
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetChannelSet();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableChannelSet();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.Builder.class);
      }

      // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        internalGetMutableChannelSet().clear();
        channelSelectionMethod_ = 0;
        if (signalProcessingStepBuilder_ == null) {
          signalProcessingStep_ = java.util.Collections.emptyList();
        } else {
          signalProcessingStep_ = null;
          signalProcessingStepBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition getDefaultInstanceForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.getDefaultInstance();
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition build() {
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition buildPartial() {
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition result) {
        if (signalProcessingStepBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            signalProcessingStep_ = java.util.Collections.unmodifiableList(signalProcessingStep_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.signalProcessingStep_ = signalProcessingStep_;
        } else {
          result.signalProcessingStep_ = signalProcessingStepBuilder_.build();
        }
      }

      private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelSet_ = internalGetChannelSet();
          result.channelSet_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.channelSelectionMethod_ = channelSelectionMethod_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition) {
          return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition other) {
        if (other == com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition.getDefaultInstance()) return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        internalGetMutableChannelSet().mergeFrom(
            other.internalGetChannelSet());
        bitField0_ |= 0x00000002;
        if (other.hasChannelSelectionMethod()) {
          setChannelSelectionMethod(other.getChannelSelectionMethod());
        }
        if (signalProcessingStepBuilder_ == null) {
          if (!other.signalProcessingStep_.isEmpty()) {
            if (signalProcessingStep_.isEmpty()) {
              signalProcessingStep_ = other.signalProcessingStep_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSignalProcessingStepIsMutable();
              signalProcessingStep_.addAll(other.signalProcessingStep_);
            }
            onChanged();
          }
        } else {
          if (!other.signalProcessingStep_.isEmpty()) {
            if (signalProcessingStepBuilder_.isEmpty()) {
              signalProcessingStepBuilder_.dispose();
              signalProcessingStepBuilder_ = null;
              signalProcessingStep_ = other.signalProcessingStep_;
              bitField0_ = (bitField0_ & ~0x00000008);
              signalProcessingStepBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignalProcessingStepFieldBuilder() : null;
            } else {
              signalProcessingStepBuilder_.addAllMessages(other.signalProcessingStep_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 18
              case 72: {
                int tmpRaw = input.readEnum();
                com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod tmpValue =
                    com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(9, tmpRaw);
                } else {
                  channelSelectionMethod_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 72
              case 82: {
                com.google.protobuf.MapEntry<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
                channelSet__ = input.readMessage(
                    ChannelSetDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableChannelSet().getMutableMap().put(
                    channelSet__.getKey(), channelSet__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 82
              case 90: {
                com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor m =
                    input.readMessage(
                        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.PARSER,
                        extensionRegistry);
                if (signalProcessingStepBuilder_ == null) {
                  ensureSignalProcessingStepIsMutable();
                  signalProcessingStep_.add(m);
                } else {
                  signalProcessingStepBuilder_.addMessage(m);
                }
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2 [json_name = "name"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> channelSet_;
      private com.google.protobuf.MapField<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
          internalGetChannelSet() {
        if (channelSet_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ChannelSetDefaultEntryHolder.defaultEntry);
        }
        return channelSet_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
          internalGetMutableChannelSet() {
        if (channelSet_ == null) {
          channelSet_ = com.google.protobuf.MapField.newMapField(
              ChannelSetDefaultEntryHolder.defaultEntry);
        }
        if (!channelSet_.isMutable()) {
          channelSet_ = channelSet_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return channelSet_;
      }
      public int getChannelSetCount() {
        return internalGetChannelSet().getMap().size();
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      @java.lang.Override
      public boolean containsChannelSet(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetChannelSet().getMap().containsKey(key);
      }
      /**
       * Use {@link #getChannelSetMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> getChannelSet() {
        return getChannelSetMap();
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> getChannelSetMap() {
        return internalGetChannelSet().getMap();
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      @java.lang.Override
      public /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrDefault(
          java.lang.String key,
          /* nullable */
com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> map =
            internalGetChannelSet().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels getChannelSetOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> map =
            internalGetChannelSet().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearChannelSet() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableChannelSet().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      public Builder removeChannelSet(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableChannelSet().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels>
          getMutableChannelSet() {
        bitField0_ |= 0x00000002;
        return internalGetMutableChannelSet().getMutableMap();
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      public Builder putChannelSet(
          java.lang.String key,
          com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableChannelSet().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>map&lt;string, .aalyria.spacetime.api.common.RxChannels&gt; channel_set = 10 [json_name = "channelSet"];</code>
       */
      public Builder putAllChannelSet(
          java.util.Map<java.lang.String, com.aalyria.spacetime.api.common.WirelessReceiver.RxChannels> values) {
        internalGetMutableChannelSet().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      private int channelSelectionMethod_ = 0;
      /**
       * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
       * @return Whether the channelSelectionMethod field is set.
       */
      @java.lang.Override public boolean hasChannelSelectionMethod() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
       * @return The channelSelectionMethod.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod getChannelSelectionMethod() {
        com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod result = com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod.forNumber(channelSelectionMethod_);
        return result == null ? com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod.CHANNEL_SELECTION_METHOD_UNKNOWN : result;
      }
      /**
       * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
       * @param value The channelSelectionMethod to set.
       * @return This builder for chaining.
       */
      public Builder setChannelSelectionMethod(com.aalyria.spacetime.api.common.Channel.ChannelSelectionMethod value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        channelSelectionMethod_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .aalyria.spacetime.api.common.ChannelSelectionMethod channel_selection_method = 9 [json_name = "channelSelectionMethod"];</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelSelectionMethod() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelSelectionMethod_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> signalProcessingStep_ =
        java.util.Collections.emptyList();
      private void ensureSignalProcessingStepIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          signalProcessingStep_ = new java.util.ArrayList<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor>(signalProcessingStep_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder> signalProcessingStepBuilder_;

      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> getSignalProcessingStepList() {
        if (signalProcessingStepBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signalProcessingStep_);
        } else {
          return signalProcessingStepBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public int getSignalProcessingStepCount() {
        if (signalProcessingStepBuilder_ == null) {
          return signalProcessingStep_.size();
        } else {
          return signalProcessingStepBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getSignalProcessingStep(int index) {
        if (signalProcessingStepBuilder_ == null) {
          return signalProcessingStep_.get(index);
        } else {
          return signalProcessingStepBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder setSignalProcessingStep(
          int index, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor value) {
        if (signalProcessingStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.set(index, value);
          onChanged();
        } else {
          signalProcessingStepBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder setSignalProcessingStep(
          int index, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder builderForValue) {
        if (signalProcessingStepBuilder_ == null) {
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.set(index, builderForValue.build());
          onChanged();
        } else {
          signalProcessingStepBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder addSignalProcessingStep(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor value) {
        if (signalProcessingStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.add(value);
          onChanged();
        } else {
          signalProcessingStepBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder addSignalProcessingStep(
          int index, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor value) {
        if (signalProcessingStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.add(index, value);
          onChanged();
        } else {
          signalProcessingStepBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder addSignalProcessingStep(
          com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder builderForValue) {
        if (signalProcessingStepBuilder_ == null) {
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.add(builderForValue.build());
          onChanged();
        } else {
          signalProcessingStepBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder addSignalProcessingStep(
          int index, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder builderForValue) {
        if (signalProcessingStepBuilder_ == null) {
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.add(index, builderForValue.build());
          onChanged();
        } else {
          signalProcessingStepBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder addAllSignalProcessingStep(
          java.lang.Iterable<? extends com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor> values) {
        if (signalProcessingStepBuilder_ == null) {
          ensureSignalProcessingStepIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signalProcessingStep_);
          onChanged();
        } else {
          signalProcessingStepBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder clearSignalProcessingStep() {
        if (signalProcessingStepBuilder_ == null) {
          signalProcessingStep_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          signalProcessingStepBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public Builder removeSignalProcessingStep(int index) {
        if (signalProcessingStepBuilder_ == null) {
          ensureSignalProcessingStepIsMutable();
          signalProcessingStep_.remove(index);
          onChanged();
        } else {
          signalProcessingStepBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder getSignalProcessingStepBuilder(
          int index) {
        return getSignalProcessingStepFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder getSignalProcessingStepOrBuilder(
          int index) {
        if (signalProcessingStepBuilder_ == null) {
          return signalProcessingStep_.get(index);  } else {
          return signalProcessingStepBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public java.util.List<? extends com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder> 
           getSignalProcessingStepOrBuilderList() {
        if (signalProcessingStepBuilder_ != null) {
          return signalProcessingStepBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signalProcessingStep_);
        }
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder addSignalProcessingStepBuilder() {
        return getSignalProcessingStepFieldBuilder().addBuilder(
            com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.getDefaultInstance());
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder addSignalProcessingStepBuilder(
          int index) {
        return getSignalProcessingStepFieldBuilder().addBuilder(
            index, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.getDefaultInstance());
      }
      /**
       * <code>repeated .aalyria.spacetime.api.common.ReceiveSignalProcessor signal_processing_step = 11 [json_name = "signalProcessingStep"];</code>
       */
      public java.util.List<com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder> 
           getSignalProcessingStepBuilderList() {
        return getSignalProcessingStepFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder> 
          getSignalProcessingStepFieldBuilder() {
        if (signalProcessingStepBuilder_ == null) {
          signalProcessingStepBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder>(
                  signalProcessingStep_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          signalProcessingStep_ = null;
        }
        return signalProcessingStepBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.ReceiverDefinition)
    }

    // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.ReceiverDefinition)
    private static final com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition();
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ReceiverDefinition>
        PARSER = new com.google.protobuf.AbstractParser<ReceiverDefinition>() {
      @java.lang.Override
      public ReceiverDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReceiverDefinition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReceiverDefinition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiverDefinition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReceiveSignalProcessorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.ReceiveSignalProcessor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     * @return Whether the filter field is set.
     */
    boolean hasFilter();
    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     * @return The filter.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.Filter getFilter();
    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder getFilterOrBuilder();

    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     * @return Whether the photodetector field is set.
     */
    boolean hasPhotodetector();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     * @return The photodetector.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getPhotodetector();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder getPhotodetectorOrBuilder();

    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     * @return Whether the amplifier field is set.
     */
    boolean hasAmplifier();
    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     * @return The amplifier.
     */
    com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition getAmplifier();
    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     */
    com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder getAmplifierOrBuilder();

    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     * @return Whether the gainOrLoss field is set.
     */
    boolean hasGainOrLoss();
    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     * @return The gainOrLoss.
     */
    com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss getGainOrLoss();
    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     */
    com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder getGainOrLossOrBuilder();

    com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code aalyria.spacetime.api.common.ReceiveSignalProcessor}
   */
  public static final class ReceiveSignalProcessor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.ReceiveSignalProcessor)
      ReceiveSignalProcessorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReceiveSignalProcessor.newBuilder() to construct.
    private ReceiveSignalProcessor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReceiveSignalProcessor() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReceiveSignalProcessor();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.class, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder.class);
    }

    private int typeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      FILTER(1),
      PHOTODETECTOR(2),
      AMPLIFIER(3),
      GAIN_OR_LOSS(4),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return FILTER;
          case 2: return PHOTODETECTOR;
          case 3: return AMPLIFIER;
          case 4: return GAIN_OR_LOSS;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public static final int FILTER_FIELD_NUMBER = 1;
    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     * @return Whether the filter field is set.
     */
    @java.lang.Override
    public boolean hasFilter() {
      return typeCase_ == 1;
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     * @return The filter.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter getFilter() {
      if (typeCase_ == 1) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder getFilterOrBuilder() {
      if (typeCase_ == 1) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
    }

    public static final int PHOTODETECTOR_FIELD_NUMBER = 2;
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     * @return Whether the photodetector field is set.
     */
    @java.lang.Override
    public boolean hasPhotodetector() {
      return typeCase_ == 2;
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     * @return The photodetector.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getPhotodetector() {
      if (typeCase_ == 2) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder getPhotodetectorOrBuilder() {
      if (typeCase_ == 2) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
    }

    public static final int AMPLIFIER_FIELD_NUMBER = 3;
    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     * @return Whether the amplifier field is set.
     */
    @java.lang.Override
    public boolean hasAmplifier() {
      return typeCase_ == 3;
    }
    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     * @return The amplifier.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition getAmplifier() {
      if (typeCase_ == 3) {
         return (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_;
      }
      return com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder getAmplifierOrBuilder() {
      if (typeCase_ == 3) {
         return (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_;
      }
      return com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
    }

    public static final int GAIN_OR_LOSS_FIELD_NUMBER = 4;
    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     * @return Whether the gainOrLoss field is set.
     */
    @java.lang.Override
    public boolean hasGainOrLoss() {
      return typeCase_ == 4;
    }
    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     * @return The gainOrLoss.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss getGainOrLoss() {
      if (typeCase_ == 4) {
         return (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_;
      }
      return com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder getGainOrLossOrBuilder() {
      if (typeCase_ == 4) {
         return (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_;
      }
      return com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_);
      }
      if (typeCase_ == 3) {
        output.writeMessage(3, (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_);
      }
      if (typeCase_ == 4) {
        output.writeMessage(4, (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_);
      }
      if (typeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_);
      }
      if (typeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor)) {
        return super.equals(obj);
      }
      com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor other = (com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor) obj;

      if (!getTypeCase().equals(other.getTypeCase())) return false;
      switch (typeCase_) {
        case 1:
          if (!getFilter()
              .equals(other.getFilter())) return false;
          break;
        case 2:
          if (!getPhotodetector()
              .equals(other.getPhotodetector())) return false;
          break;
        case 3:
          if (!getAmplifier()
              .equals(other.getAmplifier())) return false;
          break;
        case 4:
          if (!getGainOrLoss()
              .equals(other.getGainOrLoss())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (typeCase_) {
        case 1:
          hash = (37 * hash) + FILTER_FIELD_NUMBER;
          hash = (53 * hash) + getFilter().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PHOTODETECTOR_FIELD_NUMBER;
          hash = (53 * hash) + getPhotodetector().hashCode();
          break;
        case 3:
          hash = (37 * hash) + AMPLIFIER_FIELD_NUMBER;
          hash = (53 * hash) + getAmplifier().hashCode();
          break;
        case 4:
          hash = (37 * hash) + GAIN_OR_LOSS_FIELD_NUMBER;
          hash = (53 * hash) + getGainOrLoss().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.ReceiveSignalProcessor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.ReceiveSignalProcessor)
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.class, com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.Builder.class);
      }

      // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (filterBuilder_ != null) {
          filterBuilder_.clear();
        }
        if (photodetectorBuilder_ != null) {
          photodetectorBuilder_.clear();
        }
        if (amplifierBuilder_ != null) {
          amplifierBuilder_.clear();
        }
        if (gainOrLossBuilder_ != null) {
          gainOrLossBuilder_.clear();
        }
        typeCase_ = 0;
        type_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getDefaultInstanceForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.getDefaultInstance();
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor build() {
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor buildPartial() {
        com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor result = new com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor result) {
        result.typeCase_ = typeCase_;
        result.type_ = this.type_;
        if (typeCase_ == 1 &&
            filterBuilder_ != null) {
          result.type_ = filterBuilder_.build();
        }
        if (typeCase_ == 2 &&
            photodetectorBuilder_ != null) {
          result.type_ = photodetectorBuilder_.build();
        }
        if (typeCase_ == 3 &&
            amplifierBuilder_ != null) {
          result.type_ = amplifierBuilder_.build();
        }
        if (typeCase_ == 4 &&
            gainOrLossBuilder_ != null) {
          result.type_ = gainOrLossBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor) {
          return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor other) {
        if (other == com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor.getDefaultInstance()) return this;
        switch (other.getTypeCase()) {
          case FILTER: {
            mergeFilter(other.getFilter());
            break;
          }
          case PHOTODETECTOR: {
            mergePhotodetector(other.getPhotodetector());
            break;
          }
          case AMPLIFIER: {
            mergeAmplifier(other.getAmplifier());
            break;
          }
          case GAIN_OR_LOSS: {
            mergeGainOrLoss(other.getGainOrLoss());
            break;
          }
          case TYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getFilterFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPhotodetectorFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getAmplifierFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getGainOrLossFieldBuilder().getBuilder(),
                    extensionRegistry);
                typeCase_ = 4;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int typeCase_ = 0;
      private java.lang.Object type_;
      public TypeCase
          getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public Builder clearType() {
        typeCase_ = 0;
        type_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder> filterBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       * @return Whether the filter field is set.
       */
      @java.lang.Override
      public boolean hasFilter() {
        return typeCase_ == 1;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       * @return The filter.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter getFilter() {
        if (filterBuilder_ == null) {
          if (typeCase_ == 1) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
        } else {
          if (typeCase_ == 1) {
            return filterBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      public Builder setFilter(com.aalyria.spacetime.api.common.WirelessReceiver.Filter value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      public Builder setFilter(
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder builderForValue) {
        if (filterBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      public Builder mergeFilter(com.aalyria.spacetime.api.common.WirelessReceiver.Filter value) {
        if (filterBuilder_ == null) {
          if (typeCase_ == 1 &&
              type_ != com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance()) {
            type_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 1) {
            filterBuilder_.mergeFrom(value);
          } else {
            filterBuilder_.setMessage(value);
          }
        }
        typeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
          }
          filterBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder getFilterBuilder() {
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder getFilterOrBuilder() {
        if ((typeCase_ == 1) && (filterBuilder_ != null)) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 1) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter filter = 1 [json_name = "filter"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          if (!(typeCase_ == 1)) {
            type_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
          }
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.Filter, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 1;
        onChanged();
        return filterBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder> photodetectorBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       * @return Whether the photodetector field is set.
       */
      @java.lang.Override
      public boolean hasPhotodetector() {
        return typeCase_ == 2;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       * @return The photodetector.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getPhotodetector() {
        if (photodetectorBuilder_ == null) {
          if (typeCase_ == 2) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
        } else {
          if (typeCase_ == 2) {
            return photodetectorBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      public Builder setPhotodetector(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition value) {
        if (photodetectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          photodetectorBuilder_.setMessage(value);
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      public Builder setPhotodetector(
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder builderForValue) {
        if (photodetectorBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          photodetectorBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      public Builder mergePhotodetector(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition value) {
        if (photodetectorBuilder_ == null) {
          if (typeCase_ == 2 &&
              type_ != com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance()) {
            type_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 2) {
            photodetectorBuilder_.mergeFrom(value);
          } else {
            photodetectorBuilder_.setMessage(value);
          }
        }
        typeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      public Builder clearPhotodetector() {
        if (photodetectorBuilder_ == null) {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
          }
          photodetectorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder getPhotodetectorBuilder() {
        return getPhotodetectorFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder getPhotodetectorOrBuilder() {
        if ((typeCase_ == 2) && (photodetectorBuilder_ != null)) {
          return photodetectorBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 2) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition photodetector = 2 [json_name = "photodetector"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder> 
          getPhotodetectorFieldBuilder() {
        if (photodetectorBuilder_ == null) {
          if (!(typeCase_ == 2)) {
            type_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
          }
          photodetectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 2;
        onChanged();
        return photodetectorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.Builder, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder> amplifierBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       * @return Whether the amplifier field is set.
       */
      @java.lang.Override
      public boolean hasAmplifier() {
        return typeCase_ == 3;
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       * @return The amplifier.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition getAmplifier() {
        if (amplifierBuilder_ == null) {
          if (typeCase_ == 3) {
            return (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_;
          }
          return com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
        } else {
          if (typeCase_ == 3) {
            return amplifierBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      public Builder setAmplifier(com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition value) {
        if (amplifierBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          amplifierBuilder_.setMessage(value);
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      public Builder setAmplifier(
          com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.Builder builderForValue) {
        if (amplifierBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          amplifierBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      public Builder mergeAmplifier(com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition value) {
        if (amplifierBuilder_ == null) {
          if (typeCase_ == 3 &&
              type_ != com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance()) {
            type_ = com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.newBuilder((com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 3) {
            amplifierBuilder_.mergeFrom(value);
          } else {
            amplifierBuilder_.setMessage(value);
          }
        }
        typeCase_ = 3;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      public Builder clearAmplifier() {
        if (amplifierBuilder_ == null) {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 3) {
            typeCase_ = 0;
            type_ = null;
          }
          amplifierBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      public com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.Builder getAmplifierBuilder() {
        return getAmplifierFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder getAmplifierOrBuilder() {
        if ((typeCase_ == 3) && (amplifierBuilder_ != null)) {
          return amplifierBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 3) {
            return (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_;
          }
          return com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.AmplifierDefinition amplifier = 3 [json_name = "amplifier"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.Builder, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder> 
          getAmplifierFieldBuilder() {
        if (amplifierBuilder_ == null) {
          if (!(typeCase_ == 3)) {
            type_ = com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.getDefaultInstance();
          }
          amplifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition.Builder, com.aalyria.spacetime.api.common.Wireless.AmplifierDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.Wireless.AmplifierDefinition) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 3;
        onChanged();
        return amplifierBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.Builder, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder> gainOrLossBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       * @return Whether the gainOrLoss field is set.
       */
      @java.lang.Override
      public boolean hasGainOrLoss() {
        return typeCase_ == 4;
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       * @return The gainOrLoss.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss getGainOrLoss() {
        if (gainOrLossBuilder_ == null) {
          if (typeCase_ == 4) {
            return (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_;
          }
          return com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
        } else {
          if (typeCase_ == 4) {
            return gainOrLossBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      public Builder setGainOrLoss(com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss value) {
        if (gainOrLossBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          gainOrLossBuilder_.setMessage(value);
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      public Builder setGainOrLoss(
          com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.Builder builderForValue) {
        if (gainOrLossBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          gainOrLossBuilder_.setMessage(builderForValue.build());
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      public Builder mergeGainOrLoss(com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss value) {
        if (gainOrLossBuilder_ == null) {
          if (typeCase_ == 4 &&
              type_ != com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance()) {
            type_ = com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.newBuilder((com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_)
                .mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          if (typeCase_ == 4) {
            gainOrLossBuilder_.mergeFrom(value);
          } else {
            gainOrLossBuilder_.setMessage(value);
          }
        }
        typeCase_ = 4;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      public Builder clearGainOrLoss() {
        if (gainOrLossBuilder_ == null) {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
        } else {
          if (typeCase_ == 4) {
            typeCase_ = 0;
            type_ = null;
          }
          gainOrLossBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      public com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.Builder getGainOrLossBuilder() {
        return getGainOrLossFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder getGainOrLossOrBuilder() {
        if ((typeCase_ == 4) && (gainOrLossBuilder_ != null)) {
          return gainOrLossBuilder_.getMessageOrBuilder();
        } else {
          if (typeCase_ == 4) {
            return (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_;
          }
          return com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.MiscGainOrLoss gain_or_loss = 4 [json_name = "gainOrLoss"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.Builder, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder> 
          getGainOrLossFieldBuilder() {
        if (gainOrLossBuilder_ == null) {
          if (!(typeCase_ == 4)) {
            type_ = com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.getDefaultInstance();
          }
          gainOrLossBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss.Builder, com.aalyria.spacetime.api.common.Wireless.MiscGainOrLossOrBuilder>(
                  (com.aalyria.spacetime.api.common.Wireless.MiscGainOrLoss) type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        typeCase_ = 4;
        onChanged();
        return gainOrLossBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.ReceiveSignalProcessor)
    }

    // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.ReceiveSignalProcessor)
    private static final com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor();
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ReceiveSignalProcessor>
        PARSER = new com.google.protobuf.AbstractParser<ReceiveSignalProcessor>() {
      @java.lang.Override
      public ReceiveSignalProcessor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReceiveSignalProcessor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReceiveSignalProcessor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.ReceiveSignalProcessor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FilterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.Filter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
     * @return Whether the frequencyHz field is set.
     */
    boolean hasFrequencyHz();
    /**
     * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
     * @return The frequencyHz.
     */
    double getFrequencyHz();

    /**
     * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
     * @return Whether the lowerBandwidthLimitHz field is set.
     */
    boolean hasLowerBandwidthLimitHz();
    /**
     * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
     * @return The lowerBandwidthLimitHz.
     */
    double getLowerBandwidthLimitHz();

    /**
     * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
     * @return Whether the upperBandwidthLimitHz field is set.
     */
    boolean hasUpperBandwidthLimitHz();
    /**
     * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
     * @return The upperBandwidthLimitHz.
     */
    double getUpperBandwidthLimitHz();

    /**
     * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
     * @return Whether the noiseTemperatureK field is set.
     */
    boolean hasNoiseTemperatureK();
    /**
     * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
     * @return The noiseTemperatureK.
     */
    double getNoiseTemperatureK();

    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     * @return Whether the rectangular field is set.
     */
    boolean hasRectangular();
    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     * @return The rectangular.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getRectangular();
    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder getRectangularOrBuilder();

    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     * @return Whether the linear field is set.
     */
    boolean hasLinear();
    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     * @return The linear.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getLinear();
    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder getLinearOrBuilder();

    com.aalyria.spacetime.api.common.WirelessReceiver.Filter.FilterTypeCase getFilterTypeCase();
  }
  /**
   * Protobuf type {@code aalyria.spacetime.api.common.Filter}
   */
  public static final class Filter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.Filter)
      FilterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Filter.newBuilder() to construct.
    private Filter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Filter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Filter();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aalyria.spacetime.api.common.WirelessReceiver.Filter.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder.class);
    }

    public interface RectangularFilterDefinitionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.Filter.RectangularFilterDefinition)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.Filter.RectangularFilterDefinition}
     */
    public static final class RectangularFilterDefinition extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.Filter.RectangularFilterDefinition)
        RectangularFilterDefinitionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RectangularFilterDefinition.newBuilder() to construct.
      private RectangularFilterDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RectangularFilterDefinition() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RectangularFilterDefinition();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition)) {
          return super.equals(obj);
        }
        com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) obj;

        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aalyria.spacetime.api.common.Filter.RectangularFilterDefinition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.Filter.RectangularFilterDefinition)
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder.class);
        }

        // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getDefaultInstanceForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition build() {
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition buildPartial() {
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) {
            return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition other) {
          if (other == com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.Filter.RectangularFilterDefinition)
      }

      // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.Filter.RectangularFilterDefinition)
      private static final com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition();
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RectangularFilterDefinition>
          PARSER = new com.google.protobuf.AbstractParser<RectangularFilterDefinition>() {
        @java.lang.Override
        public RectangularFilterDefinition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RectangularFilterDefinition> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RectangularFilterDefinition> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LinearFilterDefinitionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.Filter.LinearFilterDefinition)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
       * @return Whether the rejectionDbPerHz field is set.
       */
      boolean hasRejectionDbPerHz();
      /**
       * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
       * @return The rejectionDbPerHz.
       */
      double getRejectionDbPerHz();
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.Filter.LinearFilterDefinition}
     */
    public static final class LinearFilterDefinition extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.Filter.LinearFilterDefinition)
        LinearFilterDefinitionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LinearFilterDefinition.newBuilder() to construct.
      private LinearFilterDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LinearFilterDefinition() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LinearFilterDefinition();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder.class);
      }

      private int bitField0_;
      public static final int REJECTION_DB_PER_HZ_FIELD_NUMBER = 1;
      private double rejectionDbPerHz_ = 0D;
      /**
       * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
       * @return Whether the rejectionDbPerHz field is set.
       */
      @java.lang.Override
      public boolean hasRejectionDbPerHz() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
       * @return The rejectionDbPerHz.
       */
      @java.lang.Override
      public double getRejectionDbPerHz() {
        return rejectionDbPerHz_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeDouble(1, rejectionDbPerHz_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, rejectionDbPerHz_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition)) {
          return super.equals(obj);
        }
        com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) obj;

        if (hasRejectionDbPerHz() != other.hasRejectionDbPerHz()) return false;
        if (hasRejectionDbPerHz()) {
          if (java.lang.Double.doubleToLongBits(getRejectionDbPerHz())
              != java.lang.Double.doubleToLongBits(
                  other.getRejectionDbPerHz())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRejectionDbPerHz()) {
          hash = (37 * hash) + REJECTION_DB_PER_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getRejectionDbPerHz()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aalyria.spacetime.api.common.Filter.LinearFilterDefinition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.Filter.LinearFilterDefinition)
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder.class);
        }

        // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          rejectionDbPerHz_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getDefaultInstanceForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition build() {
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition buildPartial() {
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rejectionDbPerHz_ = rejectionDbPerHz_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) {
            return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition other) {
          if (other == com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance()) return this;
          if (other.hasRejectionDbPerHz()) {
            setRejectionDbPerHz(other.getRejectionDbPerHz());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  rejectionDbPerHz_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double rejectionDbPerHz_ ;
        /**
         * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
         * @return Whether the rejectionDbPerHz field is set.
         */
        @java.lang.Override
        public boolean hasRejectionDbPerHz() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
         * @return The rejectionDbPerHz.
         */
        @java.lang.Override
        public double getRejectionDbPerHz() {
          return rejectionDbPerHz_;
        }
        /**
         * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
         * @param value The rejectionDbPerHz to set.
         * @return This builder for chaining.
         */
        public Builder setRejectionDbPerHz(double value) {

          rejectionDbPerHz_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional double rejection_db_per_hz = 1 [json_name = "rejectionDbPerHz"];</code>
         * @return This builder for chaining.
         */
        public Builder clearRejectionDbPerHz() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rejectionDbPerHz_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.Filter.LinearFilterDefinition)
      }

      // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.Filter.LinearFilterDefinition)
      private static final com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition();
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LinearFilterDefinition>
          PARSER = new com.google.protobuf.AbstractParser<LinearFilterDefinition>() {
        @java.lang.Override
        public LinearFilterDefinition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LinearFilterDefinition> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LinearFilterDefinition> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int filterTypeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object filterType_;
    public enum FilterTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RECTANGULAR(5),
      LINEAR(6),
      FILTERTYPE_NOT_SET(0);
      private final int value;
      private FilterTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FilterTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static FilterTypeCase forNumber(int value) {
        switch (value) {
          case 5: return RECTANGULAR;
          case 6: return LINEAR;
          case 0: return FILTERTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FilterTypeCase
    getFilterTypeCase() {
      return FilterTypeCase.forNumber(
          filterTypeCase_);
    }

    public static final int FREQUENCY_HZ_FIELD_NUMBER = 1;
    private double frequencyHz_ = 0D;
    /**
     * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
     * @return Whether the frequencyHz field is set.
     */
    @java.lang.Override
    public boolean hasFrequencyHz() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
     * @return The frequencyHz.
     */
    @java.lang.Override
    public double getFrequencyHz() {
      return frequencyHz_;
    }

    public static final int LOWER_BANDWIDTH_LIMIT_HZ_FIELD_NUMBER = 2;
    private double lowerBandwidthLimitHz_ = 0D;
    /**
     * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
     * @return Whether the lowerBandwidthLimitHz field is set.
     */
    @java.lang.Override
    public boolean hasLowerBandwidthLimitHz() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
     * @return The lowerBandwidthLimitHz.
     */
    @java.lang.Override
    public double getLowerBandwidthLimitHz() {
      return lowerBandwidthLimitHz_;
    }

    public static final int UPPER_BANDWIDTH_LIMIT_HZ_FIELD_NUMBER = 3;
    private double upperBandwidthLimitHz_ = 0D;
    /**
     * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
     * @return Whether the upperBandwidthLimitHz field is set.
     */
    @java.lang.Override
    public boolean hasUpperBandwidthLimitHz() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
     * @return The upperBandwidthLimitHz.
     */
    @java.lang.Override
    public double getUpperBandwidthLimitHz() {
      return upperBandwidthLimitHz_;
    }

    public static final int NOISE_TEMPERATURE_K_FIELD_NUMBER = 4;
    private double noiseTemperatureK_ = 0D;
    /**
     * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
     * @return Whether the noiseTemperatureK field is set.
     */
    @java.lang.Override
    public boolean hasNoiseTemperatureK() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
     * @return The noiseTemperatureK.
     */
    @java.lang.Override
    public double getNoiseTemperatureK() {
      return noiseTemperatureK_;
    }

    public static final int RECTANGULAR_FIELD_NUMBER = 5;
    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     * @return Whether the rectangular field is set.
     */
    @java.lang.Override
    public boolean hasRectangular() {
      return filterTypeCase_ == 5;
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     * @return The rectangular.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getRectangular() {
      if (filterTypeCase_ == 5) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder getRectangularOrBuilder() {
      if (filterTypeCase_ == 5) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
    }

    public static final int LINEAR_FIELD_NUMBER = 6;
    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     * @return Whether the linear field is set.
     */
    @java.lang.Override
    public boolean hasLinear() {
      return filterTypeCase_ == 6;
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     * @return The linear.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getLinear() {
      if (filterTypeCase_ == 6) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder getLinearOrBuilder() {
      if (filterTypeCase_ == 6) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, frequencyHz_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, lowerBandwidthLimitHz_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, upperBandwidthLimitHz_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, noiseTemperatureK_);
      }
      if (filterTypeCase_ == 5) {
        output.writeMessage(5, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_);
      }
      if (filterTypeCase_ == 6) {
        output.writeMessage(6, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, frequencyHz_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lowerBandwidthLimitHz_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, upperBandwidthLimitHz_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, noiseTemperatureK_);
      }
      if (filterTypeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_);
      }
      if (filterTypeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter)) {
        return super.equals(obj);
      }
      com.aalyria.spacetime.api.common.WirelessReceiver.Filter other = (com.aalyria.spacetime.api.common.WirelessReceiver.Filter) obj;

      if (hasFrequencyHz() != other.hasFrequencyHz()) return false;
      if (hasFrequencyHz()) {
        if (java.lang.Double.doubleToLongBits(getFrequencyHz())
            != java.lang.Double.doubleToLongBits(
                other.getFrequencyHz())) return false;
      }
      if (hasLowerBandwidthLimitHz() != other.hasLowerBandwidthLimitHz()) return false;
      if (hasLowerBandwidthLimitHz()) {
        if (java.lang.Double.doubleToLongBits(getLowerBandwidthLimitHz())
            != java.lang.Double.doubleToLongBits(
                other.getLowerBandwidthLimitHz())) return false;
      }
      if (hasUpperBandwidthLimitHz() != other.hasUpperBandwidthLimitHz()) return false;
      if (hasUpperBandwidthLimitHz()) {
        if (java.lang.Double.doubleToLongBits(getUpperBandwidthLimitHz())
            != java.lang.Double.doubleToLongBits(
                other.getUpperBandwidthLimitHz())) return false;
      }
      if (hasNoiseTemperatureK() != other.hasNoiseTemperatureK()) return false;
      if (hasNoiseTemperatureK()) {
        if (java.lang.Double.doubleToLongBits(getNoiseTemperatureK())
            != java.lang.Double.doubleToLongBits(
                other.getNoiseTemperatureK())) return false;
      }
      if (!getFilterTypeCase().equals(other.getFilterTypeCase())) return false;
      switch (filterTypeCase_) {
        case 5:
          if (!getRectangular()
              .equals(other.getRectangular())) return false;
          break;
        case 6:
          if (!getLinear()
              .equals(other.getLinear())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFrequencyHz()) {
        hash = (37 * hash) + FREQUENCY_HZ_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFrequencyHz()));
      }
      if (hasLowerBandwidthLimitHz()) {
        hash = (37 * hash) + LOWER_BANDWIDTH_LIMIT_HZ_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLowerBandwidthLimitHz()));
      }
      if (hasUpperBandwidthLimitHz()) {
        hash = (37 * hash) + UPPER_BANDWIDTH_LIMIT_HZ_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUpperBandwidthLimitHz()));
      }
      if (hasNoiseTemperatureK()) {
        hash = (37 * hash) + NOISE_TEMPERATURE_K_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNoiseTemperatureK()));
      }
      switch (filterTypeCase_) {
        case 5:
          hash = (37 * hash) + RECTANGULAR_FIELD_NUMBER;
          hash = (53 * hash) + getRectangular().hashCode();
          break;
        case 6:
          hash = (37 * hash) + LINEAR_FIELD_NUMBER;
          hash = (53 * hash) + getLinear().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.Filter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.Filter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.Filter)
        com.aalyria.spacetime.api.common.WirelessReceiver.FilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.Filter.class, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.Builder.class);
      }

      // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.Filter.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        frequencyHz_ = 0D;
        lowerBandwidthLimitHz_ = 0D;
        upperBandwidthLimitHz_ = 0D;
        noiseTemperatureK_ = 0D;
        if (rectangularBuilder_ != null) {
          rectangularBuilder_.clear();
        }
        if (linearBuilder_ != null) {
          linearBuilder_.clear();
        }
        filterTypeCase_ = 0;
        filterType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_Filter_descriptor;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter getDefaultInstanceForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance();
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter build() {
        com.aalyria.spacetime.api.common.WirelessReceiver.Filter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter buildPartial() {
        com.aalyria.spacetime.api.common.WirelessReceiver.Filter result = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.Filter result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.frequencyHz_ = frequencyHz_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lowerBandwidthLimitHz_ = lowerBandwidthLimitHz_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.upperBandwidthLimitHz_ = upperBandwidthLimitHz_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.noiseTemperatureK_ = noiseTemperatureK_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(com.aalyria.spacetime.api.common.WirelessReceiver.Filter result) {
        result.filterTypeCase_ = filterTypeCase_;
        result.filterType_ = this.filterType_;
        if (filterTypeCase_ == 5 &&
            rectangularBuilder_ != null) {
          result.filterType_ = rectangularBuilder_.build();
        }
        if (filterTypeCase_ == 6 &&
            linearBuilder_ != null) {
          result.filterType_ = linearBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.Filter) {
          return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.Filter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.Filter other) {
        if (other == com.aalyria.spacetime.api.common.WirelessReceiver.Filter.getDefaultInstance()) return this;
        if (other.hasFrequencyHz()) {
          setFrequencyHz(other.getFrequencyHz());
        }
        if (other.hasLowerBandwidthLimitHz()) {
          setLowerBandwidthLimitHz(other.getLowerBandwidthLimitHz());
        }
        if (other.hasUpperBandwidthLimitHz()) {
          setUpperBandwidthLimitHz(other.getUpperBandwidthLimitHz());
        }
        if (other.hasNoiseTemperatureK()) {
          setNoiseTemperatureK(other.getNoiseTemperatureK());
        }
        switch (other.getFilterTypeCase()) {
          case RECTANGULAR: {
            mergeRectangular(other.getRectangular());
            break;
          }
          case LINEAR: {
            mergeLinear(other.getLinear());
            break;
          }
          case FILTERTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                frequencyHz_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                lowerBandwidthLimitHz_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                upperBandwidthLimitHz_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                noiseTemperatureK_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 42: {
                input.readMessage(
                    getRectangularFieldBuilder().getBuilder(),
                    extensionRegistry);
                filterTypeCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getLinearFieldBuilder().getBuilder(),
                    extensionRegistry);
                filterTypeCase_ = 6;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int filterTypeCase_ = 0;
      private java.lang.Object filterType_;
      public FilterTypeCase
          getFilterTypeCase() {
        return FilterTypeCase.forNumber(
            filterTypeCase_);
      }

      public Builder clearFilterType() {
        filterTypeCase_ = 0;
        filterType_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private double frequencyHz_ ;
      /**
       * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
       * @return Whether the frequencyHz field is set.
       */
      @java.lang.Override
      public boolean hasFrequencyHz() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
       * @return The frequencyHz.
       */
      @java.lang.Override
      public double getFrequencyHz() {
        return frequencyHz_;
      }
      /**
       * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
       * @param value The frequencyHz to set.
       * @return This builder for chaining.
       */
      public Builder setFrequencyHz(double value) {

        frequencyHz_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional double frequency_hz = 1 [json_name = "frequencyHz"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFrequencyHz() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frequencyHz_ = 0D;
        onChanged();
        return this;
      }

      private double lowerBandwidthLimitHz_ ;
      /**
       * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
       * @return Whether the lowerBandwidthLimitHz field is set.
       */
      @java.lang.Override
      public boolean hasLowerBandwidthLimitHz() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
       * @return The lowerBandwidthLimitHz.
       */
      @java.lang.Override
      public double getLowerBandwidthLimitHz() {
        return lowerBandwidthLimitHz_;
      }
      /**
       * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
       * @param value The lowerBandwidthLimitHz to set.
       * @return This builder for chaining.
       */
      public Builder setLowerBandwidthLimitHz(double value) {

        lowerBandwidthLimitHz_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lower_bandwidth_limit_hz = 2 [json_name = "lowerBandwidthLimitHz"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLowerBandwidthLimitHz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lowerBandwidthLimitHz_ = 0D;
        onChanged();
        return this;
      }

      private double upperBandwidthLimitHz_ ;
      /**
       * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
       * @return Whether the upperBandwidthLimitHz field is set.
       */
      @java.lang.Override
      public boolean hasUpperBandwidthLimitHz() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
       * @return The upperBandwidthLimitHz.
       */
      @java.lang.Override
      public double getUpperBandwidthLimitHz() {
        return upperBandwidthLimitHz_;
      }
      /**
       * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
       * @param value The upperBandwidthLimitHz to set.
       * @return This builder for chaining.
       */
      public Builder setUpperBandwidthLimitHz(double value) {

        upperBandwidthLimitHz_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double upper_bandwidth_limit_hz = 3 [json_name = "upperBandwidthLimitHz"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUpperBandwidthLimitHz() {
        bitField0_ = (bitField0_ & ~0x00000004);
        upperBandwidthLimitHz_ = 0D;
        onChanged();
        return this;
      }

      private double noiseTemperatureK_ ;
      /**
       * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
       * @return Whether the noiseTemperatureK field is set.
       */
      @java.lang.Override
      public boolean hasNoiseTemperatureK() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
       * @return The noiseTemperatureK.
       */
      @java.lang.Override
      public double getNoiseTemperatureK() {
        return noiseTemperatureK_;
      }
      /**
       * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
       * @param value The noiseTemperatureK to set.
       * @return This builder for chaining.
       */
      public Builder setNoiseTemperatureK(double value) {

        noiseTemperatureK_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double noise_temperature_k = 4 [json_name = "noiseTemperatureK"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNoiseTemperatureK() {
        bitField0_ = (bitField0_ & ~0x00000008);
        noiseTemperatureK_ = 0D;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder> rectangularBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       * @return Whether the rectangular field is set.
       */
      @java.lang.Override
      public boolean hasRectangular() {
        return filterTypeCase_ == 5;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       * @return The rectangular.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition getRectangular() {
        if (rectangularBuilder_ == null) {
          if (filterTypeCase_ == 5) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
        } else {
          if (filterTypeCase_ == 5) {
            return rectangularBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      public Builder setRectangular(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition value) {
        if (rectangularBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filterType_ = value;
          onChanged();
        } else {
          rectangularBuilder_.setMessage(value);
        }
        filterTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      public Builder setRectangular(
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder builderForValue) {
        if (rectangularBuilder_ == null) {
          filterType_ = builderForValue.build();
          onChanged();
        } else {
          rectangularBuilder_.setMessage(builderForValue.build());
        }
        filterTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      public Builder mergeRectangular(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition value) {
        if (rectangularBuilder_ == null) {
          if (filterTypeCase_ == 5 &&
              filterType_ != com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance()) {
            filterType_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_)
                .mergeFrom(value).buildPartial();
          } else {
            filterType_ = value;
          }
          onChanged();
        } else {
          if (filterTypeCase_ == 5) {
            rectangularBuilder_.mergeFrom(value);
          } else {
            rectangularBuilder_.setMessage(value);
          }
        }
        filterTypeCase_ = 5;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      public Builder clearRectangular() {
        if (rectangularBuilder_ == null) {
          if (filterTypeCase_ == 5) {
            filterTypeCase_ = 0;
            filterType_ = null;
            onChanged();
          }
        } else {
          if (filterTypeCase_ == 5) {
            filterTypeCase_ = 0;
            filterType_ = null;
          }
          rectangularBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder getRectangularBuilder() {
        return getRectangularFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder getRectangularOrBuilder() {
        if ((filterTypeCase_ == 5) && (rectangularBuilder_ != null)) {
          return rectangularBuilder_.getMessageOrBuilder();
        } else {
          if (filterTypeCase_ == 5) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.RectangularFilterDefinition rectangular = 5 [json_name = "rectangular"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder> 
          getRectangularFieldBuilder() {
        if (rectangularBuilder_ == null) {
          if (!(filterTypeCase_ == 5)) {
            filterType_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.getDefaultInstance();
          }
          rectangularBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.RectangularFilterDefinition) filterType_,
                  getParentForChildren(),
                  isClean());
          filterType_ = null;
        }
        filterTypeCase_ = 5;
        onChanged();
        return rectangularBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder> linearBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       * @return Whether the linear field is set.
       */
      @java.lang.Override
      public boolean hasLinear() {
        return filterTypeCase_ == 6;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       * @return The linear.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition getLinear() {
        if (linearBuilder_ == null) {
          if (filterTypeCase_ == 6) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
        } else {
          if (filterTypeCase_ == 6) {
            return linearBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      public Builder setLinear(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition value) {
        if (linearBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filterType_ = value;
          onChanged();
        } else {
          linearBuilder_.setMessage(value);
        }
        filterTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      public Builder setLinear(
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder builderForValue) {
        if (linearBuilder_ == null) {
          filterType_ = builderForValue.build();
          onChanged();
        } else {
          linearBuilder_.setMessage(builderForValue.build());
        }
        filterTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      public Builder mergeLinear(com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition value) {
        if (linearBuilder_ == null) {
          if (filterTypeCase_ == 6 &&
              filterType_ != com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance()) {
            filterType_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_)
                .mergeFrom(value).buildPartial();
          } else {
            filterType_ = value;
          }
          onChanged();
        } else {
          if (filterTypeCase_ == 6) {
            linearBuilder_.mergeFrom(value);
          } else {
            linearBuilder_.setMessage(value);
          }
        }
        filterTypeCase_ = 6;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      public Builder clearLinear() {
        if (linearBuilder_ == null) {
          if (filterTypeCase_ == 6) {
            filterTypeCase_ = 0;
            filterType_ = null;
            onChanged();
          }
        } else {
          if (filterTypeCase_ == 6) {
            filterTypeCase_ = 0;
            filterType_ = null;
          }
          linearBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder getLinearBuilder() {
        return getLinearFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder getLinearOrBuilder() {
        if ((filterTypeCase_ == 6) && (linearBuilder_ != null)) {
          return linearBuilder_.getMessageOrBuilder();
        } else {
          if (filterTypeCase_ == 6) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.Filter.LinearFilterDefinition linear = 6 [json_name = "linear"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder> 
          getLinearFieldBuilder() {
        if (linearBuilder_ == null) {
          if (!(filterTypeCase_ == 6)) {
            filterType_ = com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.getDefaultInstance();
          }
          linearBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.Filter.LinearFilterDefinition) filterType_,
                  getParentForChildren(),
                  isClean());
          filterType_ = null;
        }
        filterTypeCase_ = 6;
        onChanged();
        return linearBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.Filter)
    }

    // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.Filter)
    private static final com.aalyria.spacetime.api.common.WirelessReceiver.Filter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.Filter();
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.Filter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Filter>
        PARSER = new com.google.protobuf.AbstractParser<Filter>() {
      @java.lang.Override
      public Filter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Filter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Filter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.Filter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PhotodetectorDefinitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.PhotodetectorDefinition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     * @return Whether the avalanchePhotodiode field is set.
     */
    boolean hasAvalanchePhotodiode();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     * @return The avalanchePhotodiode.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getAvalanchePhotodiode();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder getAvalanchePhotodiodeOrBuilder();

    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     * @return Whether the pinPhotodiode field is set.
     */
    boolean hasPinPhotodiode();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     * @return The pinPhotodiode.
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getPinPhotodiode();
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     */
    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder getPinPhotodiodeOrBuilder();

    com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PhotodetectorTypeCase getPhotodetectorTypeCase();
  }
  /**
   * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition}
   */
  public static final class PhotodetectorDefinition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.PhotodetectorDefinition)
      PhotodetectorDefinitionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PhotodetectorDefinition.newBuilder() to construct.
    private PhotodetectorDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PhotodetectorDefinition() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PhotodetectorDefinition();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder.class);
    }

    public interface AvalanchePhotodiodeDefinitionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return Whether the fieldOfViewRad field is set.
       */
      boolean hasFieldOfViewRad();
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return The fieldOfViewRad.
       */
      double getFieldOfViewRad();

      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return Whether the bandwidthHz field is set.
       */
      boolean hasBandwidthHz();
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return The bandwidthHz.
       */
      double getBandwidthHz();

      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return Whether the noiseTemperatureK field is set.
       */
      boolean hasNoiseTemperatureK();
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return The noiseTemperatureK.
       */
      double getNoiseTemperatureK();

      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return Whether the efficiencyPercent field is set.
       */
      boolean hasEfficiencyPercent();
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return The efficiencyPercent.
       */
      double getEfficiencyPercent();

      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return Whether the darkCurrentAmp field is set.
       */
      boolean hasDarkCurrentAmp();
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return The darkCurrentAmp.
       */
      double getDarkCurrentAmp();

      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return Whether the loadImpedanceOhm field is set.
       */
      boolean hasLoadImpedanceOhm();
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return The loadImpedanceOhm.
       */
      double getLoadImpedanceOhm();

      /**
       * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
       * @return Whether the noiseFactor field is set.
       */
      boolean hasNoiseFactor();
      /**
       * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
       * @return The noiseFactor.
       */
      double getNoiseFactor();

      /**
       * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
       * @return Whether the gainDb field is set.
       */
      boolean hasGainDb();
      /**
       * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
       * @return The gainDb.
       */
      double getGainDb();

      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return Whether the opticalBandpassFilterBandwidthHz field is set.
       */
      boolean hasOpticalBandpassFilterBandwidthHz();
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return The opticalBandpassFilterBandwidthHz.
       */
      double getOpticalBandpassFilterBandwidthHz();

      /**
       * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
       * @return Whether the skySpectralRadiance field is set.
       */
      boolean hasSkySpectralRadiance();
      /**
       * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
       * @return The skySpectralRadiance.
       */
      double getSkySpectralRadiance();

      /**
       * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return Whether the sunSpectralRadiantEmittance field is set.
       */
      boolean hasSunSpectralRadiantEmittance();
      /**
       * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return The sunSpectralRadiantEmittance.
       */
      double getSunSpectralRadiantEmittance();

      /**
       * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
       * @return Whether the wavelengthM field is set.
       */
      boolean hasWavelengthM();
      /**
       * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
       * @return The wavelengthM.
       */
      double getWavelengthM();
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition}
     */
    public static final class AvalanchePhotodiodeDefinition extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)
        AvalanchePhotodiodeDefinitionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AvalanchePhotodiodeDefinition.newBuilder() to construct.
      private AvalanchePhotodiodeDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AvalanchePhotodiodeDefinition() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AvalanchePhotodiodeDefinition();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder.class);
      }

      private int bitField0_;
      public static final int FIELD_OF_VIEW_RAD_FIELD_NUMBER = 1;
      private double fieldOfViewRad_ = 0D;
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return Whether the fieldOfViewRad field is set.
       */
      @java.lang.Override
      public boolean hasFieldOfViewRad() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return The fieldOfViewRad.
       */
      @java.lang.Override
      public double getFieldOfViewRad() {
        return fieldOfViewRad_;
      }

      public static final int BANDWIDTH_HZ_FIELD_NUMBER = 2;
      private double bandwidthHz_ = 0D;
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return Whether the bandwidthHz field is set.
       */
      @java.lang.Override
      public boolean hasBandwidthHz() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return The bandwidthHz.
       */
      @java.lang.Override
      public double getBandwidthHz() {
        return bandwidthHz_;
      }

      public static final int NOISE_TEMPERATURE_K_FIELD_NUMBER = 3;
      private double noiseTemperatureK_ = 0D;
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return Whether the noiseTemperatureK field is set.
       */
      @java.lang.Override
      public boolean hasNoiseTemperatureK() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return The noiseTemperatureK.
       */
      @java.lang.Override
      public double getNoiseTemperatureK() {
        return noiseTemperatureK_;
      }

      public static final int EFFICIENCY_PERCENT_FIELD_NUMBER = 4;
      private double efficiencyPercent_ = 0D;
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return Whether the efficiencyPercent field is set.
       */
      @java.lang.Override
      public boolean hasEfficiencyPercent() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return The efficiencyPercent.
       */
      @java.lang.Override
      public double getEfficiencyPercent() {
        return efficiencyPercent_;
      }

      public static final int DARK_CURRENT_AMP_FIELD_NUMBER = 5;
      private double darkCurrentAmp_ = 0D;
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return Whether the darkCurrentAmp field is set.
       */
      @java.lang.Override
      public boolean hasDarkCurrentAmp() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return The darkCurrentAmp.
       */
      @java.lang.Override
      public double getDarkCurrentAmp() {
        return darkCurrentAmp_;
      }

      public static final int LOAD_IMPEDANCE_OHM_FIELD_NUMBER = 6;
      private double loadImpedanceOhm_ = 0D;
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return Whether the loadImpedanceOhm field is set.
       */
      @java.lang.Override
      public boolean hasLoadImpedanceOhm() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return The loadImpedanceOhm.
       */
      @java.lang.Override
      public double getLoadImpedanceOhm() {
        return loadImpedanceOhm_;
      }

      public static final int NOISE_FACTOR_FIELD_NUMBER = 7;
      private double noiseFactor_ = 0D;
      /**
       * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
       * @return Whether the noiseFactor field is set.
       */
      @java.lang.Override
      public boolean hasNoiseFactor() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
       * @return The noiseFactor.
       */
      @java.lang.Override
      public double getNoiseFactor() {
        return noiseFactor_;
      }

      public static final int GAIN_DB_FIELD_NUMBER = 8;
      private double gainDb_ = 0D;
      /**
       * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
       * @return Whether the gainDb field is set.
       */
      @java.lang.Override
      public boolean hasGainDb() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
       * @return The gainDb.
       */
      @java.lang.Override
      public double getGainDb() {
        return gainDb_;
      }

      public static final int OPTICAL_BANDPASS_FILTER_BANDWIDTH_HZ_FIELD_NUMBER = 9;
      private double opticalBandpassFilterBandwidthHz_ = 0D;
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return Whether the opticalBandpassFilterBandwidthHz field is set.
       */
      @java.lang.Override
      public boolean hasOpticalBandpassFilterBandwidthHz() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return The opticalBandpassFilterBandwidthHz.
       */
      @java.lang.Override
      public double getOpticalBandpassFilterBandwidthHz() {
        return opticalBandpassFilterBandwidthHz_;
      }

      public static final int SKY_SPECTRAL_RADIANCE_FIELD_NUMBER = 10;
      private double skySpectralRadiance_ = 0D;
      /**
       * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
       * @return Whether the skySpectralRadiance field is set.
       */
      @java.lang.Override
      public boolean hasSkySpectralRadiance() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
       * @return The skySpectralRadiance.
       */
      @java.lang.Override
      public double getSkySpectralRadiance() {
        return skySpectralRadiance_;
      }

      public static final int SUN_SPECTRAL_RADIANT_EMITTANCE_FIELD_NUMBER = 11;
      private double sunSpectralRadiantEmittance_ = 0D;
      /**
       * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return Whether the sunSpectralRadiantEmittance field is set.
       */
      @java.lang.Override
      public boolean hasSunSpectralRadiantEmittance() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return The sunSpectralRadiantEmittance.
       */
      @java.lang.Override
      public double getSunSpectralRadiantEmittance() {
        return sunSpectralRadiantEmittance_;
      }

      public static final int WAVELENGTH_M_FIELD_NUMBER = 12;
      private double wavelengthM_ = 0D;
      /**
       * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
       * @return Whether the wavelengthM field is set.
       */
      @java.lang.Override
      public boolean hasWavelengthM() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
       * @return The wavelengthM.
       */
      @java.lang.Override
      public double getWavelengthM() {
        return wavelengthM_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeDouble(1, fieldOfViewRad_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeDouble(2, bandwidthHz_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeDouble(3, noiseTemperatureK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeDouble(4, efficiencyPercent_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeDouble(5, darkCurrentAmp_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeDouble(6, loadImpedanceOhm_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeDouble(7, noiseFactor_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeDouble(8, gainDb_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeDouble(9, opticalBandpassFilterBandwidthHz_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeDouble(10, skySpectralRadiance_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeDouble(11, sunSpectralRadiantEmittance_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeDouble(12, wavelengthM_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, fieldOfViewRad_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, bandwidthHz_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, noiseTemperatureK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, efficiencyPercent_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, darkCurrentAmp_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, loadImpedanceOhm_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, noiseFactor_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, gainDb_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, opticalBandpassFilterBandwidthHz_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, skySpectralRadiance_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(11, sunSpectralRadiantEmittance_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(12, wavelengthM_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)) {
          return super.equals(obj);
        }
        com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) obj;

        if (hasFieldOfViewRad() != other.hasFieldOfViewRad()) return false;
        if (hasFieldOfViewRad()) {
          if (java.lang.Double.doubleToLongBits(getFieldOfViewRad())
              != java.lang.Double.doubleToLongBits(
                  other.getFieldOfViewRad())) return false;
        }
        if (hasBandwidthHz() != other.hasBandwidthHz()) return false;
        if (hasBandwidthHz()) {
          if (java.lang.Double.doubleToLongBits(getBandwidthHz())
              != java.lang.Double.doubleToLongBits(
                  other.getBandwidthHz())) return false;
        }
        if (hasNoiseTemperatureK() != other.hasNoiseTemperatureK()) return false;
        if (hasNoiseTemperatureK()) {
          if (java.lang.Double.doubleToLongBits(getNoiseTemperatureK())
              != java.lang.Double.doubleToLongBits(
                  other.getNoiseTemperatureK())) return false;
        }
        if (hasEfficiencyPercent() != other.hasEfficiencyPercent()) return false;
        if (hasEfficiencyPercent()) {
          if (java.lang.Double.doubleToLongBits(getEfficiencyPercent())
              != java.lang.Double.doubleToLongBits(
                  other.getEfficiencyPercent())) return false;
        }
        if (hasDarkCurrentAmp() != other.hasDarkCurrentAmp()) return false;
        if (hasDarkCurrentAmp()) {
          if (java.lang.Double.doubleToLongBits(getDarkCurrentAmp())
              != java.lang.Double.doubleToLongBits(
                  other.getDarkCurrentAmp())) return false;
        }
        if (hasLoadImpedanceOhm() != other.hasLoadImpedanceOhm()) return false;
        if (hasLoadImpedanceOhm()) {
          if (java.lang.Double.doubleToLongBits(getLoadImpedanceOhm())
              != java.lang.Double.doubleToLongBits(
                  other.getLoadImpedanceOhm())) return false;
        }
        if (hasNoiseFactor() != other.hasNoiseFactor()) return false;
        if (hasNoiseFactor()) {
          if (java.lang.Double.doubleToLongBits(getNoiseFactor())
              != java.lang.Double.doubleToLongBits(
                  other.getNoiseFactor())) return false;
        }
        if (hasGainDb() != other.hasGainDb()) return false;
        if (hasGainDb()) {
          if (java.lang.Double.doubleToLongBits(getGainDb())
              != java.lang.Double.doubleToLongBits(
                  other.getGainDb())) return false;
        }
        if (hasOpticalBandpassFilterBandwidthHz() != other.hasOpticalBandpassFilterBandwidthHz()) return false;
        if (hasOpticalBandpassFilterBandwidthHz()) {
          if (java.lang.Double.doubleToLongBits(getOpticalBandpassFilterBandwidthHz())
              != java.lang.Double.doubleToLongBits(
                  other.getOpticalBandpassFilterBandwidthHz())) return false;
        }
        if (hasSkySpectralRadiance() != other.hasSkySpectralRadiance()) return false;
        if (hasSkySpectralRadiance()) {
          if (java.lang.Double.doubleToLongBits(getSkySpectralRadiance())
              != java.lang.Double.doubleToLongBits(
                  other.getSkySpectralRadiance())) return false;
        }
        if (hasSunSpectralRadiantEmittance() != other.hasSunSpectralRadiantEmittance()) return false;
        if (hasSunSpectralRadiantEmittance()) {
          if (java.lang.Double.doubleToLongBits(getSunSpectralRadiantEmittance())
              != java.lang.Double.doubleToLongBits(
                  other.getSunSpectralRadiantEmittance())) return false;
        }
        if (hasWavelengthM() != other.hasWavelengthM()) return false;
        if (hasWavelengthM()) {
          if (java.lang.Double.doubleToLongBits(getWavelengthM())
              != java.lang.Double.doubleToLongBits(
                  other.getWavelengthM())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFieldOfViewRad()) {
          hash = (37 * hash) + FIELD_OF_VIEW_RAD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFieldOfViewRad()));
        }
        if (hasBandwidthHz()) {
          hash = (37 * hash) + BANDWIDTH_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getBandwidthHz()));
        }
        if (hasNoiseTemperatureK()) {
          hash = (37 * hash) + NOISE_TEMPERATURE_K_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getNoiseTemperatureK()));
        }
        if (hasEfficiencyPercent()) {
          hash = (37 * hash) + EFFICIENCY_PERCENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getEfficiencyPercent()));
        }
        if (hasDarkCurrentAmp()) {
          hash = (37 * hash) + DARK_CURRENT_AMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDarkCurrentAmp()));
        }
        if (hasLoadImpedanceOhm()) {
          hash = (37 * hash) + LOAD_IMPEDANCE_OHM_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getLoadImpedanceOhm()));
        }
        if (hasNoiseFactor()) {
          hash = (37 * hash) + NOISE_FACTOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getNoiseFactor()));
        }
        if (hasGainDb()) {
          hash = (37 * hash) + GAIN_DB_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getGainDb()));
        }
        if (hasOpticalBandpassFilterBandwidthHz()) {
          hash = (37 * hash) + OPTICAL_BANDPASS_FILTER_BANDWIDTH_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getOpticalBandpassFilterBandwidthHz()));
        }
        if (hasSkySpectralRadiance()) {
          hash = (37 * hash) + SKY_SPECTRAL_RADIANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSkySpectralRadiance()));
        }
        if (hasSunSpectralRadiantEmittance()) {
          hash = (37 * hash) + SUN_SPECTRAL_RADIANT_EMITTANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSunSpectralRadiantEmittance()));
        }
        if (hasWavelengthM()) {
          hash = (37 * hash) + WAVELENGTH_M_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getWavelengthM()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder.class);
        }

        // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          fieldOfViewRad_ = 0D;
          bandwidthHz_ = 0D;
          noiseTemperatureK_ = 0D;
          efficiencyPercent_ = 0D;
          darkCurrentAmp_ = 0D;
          loadImpedanceOhm_ = 0D;
          noiseFactor_ = 0D;
          gainDb_ = 0D;
          opticalBandpassFilterBandwidthHz_ = 0D;
          skySpectralRadiance_ = 0D;
          sunSpectralRadiantEmittance_ = 0D;
          wavelengthM_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getDefaultInstanceForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition build() {
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition buildPartial() {
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.fieldOfViewRad_ = fieldOfViewRad_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.bandwidthHz_ = bandwidthHz_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.noiseTemperatureK_ = noiseTemperatureK_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.efficiencyPercent_ = efficiencyPercent_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.darkCurrentAmp_ = darkCurrentAmp_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.loadImpedanceOhm_ = loadImpedanceOhm_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.noiseFactor_ = noiseFactor_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.gainDb_ = gainDb_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.opticalBandpassFilterBandwidthHz_ = opticalBandpassFilterBandwidthHz_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.skySpectralRadiance_ = skySpectralRadiance_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.sunSpectralRadiantEmittance_ = sunSpectralRadiantEmittance_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.wavelengthM_ = wavelengthM_;
            to_bitField0_ |= 0x00000800;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) {
            return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition other) {
          if (other == com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance()) return this;
          if (other.hasFieldOfViewRad()) {
            setFieldOfViewRad(other.getFieldOfViewRad());
          }
          if (other.hasBandwidthHz()) {
            setBandwidthHz(other.getBandwidthHz());
          }
          if (other.hasNoiseTemperatureK()) {
            setNoiseTemperatureK(other.getNoiseTemperatureK());
          }
          if (other.hasEfficiencyPercent()) {
            setEfficiencyPercent(other.getEfficiencyPercent());
          }
          if (other.hasDarkCurrentAmp()) {
            setDarkCurrentAmp(other.getDarkCurrentAmp());
          }
          if (other.hasLoadImpedanceOhm()) {
            setLoadImpedanceOhm(other.getLoadImpedanceOhm());
          }
          if (other.hasNoiseFactor()) {
            setNoiseFactor(other.getNoiseFactor());
          }
          if (other.hasGainDb()) {
            setGainDb(other.getGainDb());
          }
          if (other.hasOpticalBandpassFilterBandwidthHz()) {
            setOpticalBandpassFilterBandwidthHz(other.getOpticalBandpassFilterBandwidthHz());
          }
          if (other.hasSkySpectralRadiance()) {
            setSkySpectralRadiance(other.getSkySpectralRadiance());
          }
          if (other.hasSunSpectralRadiantEmittance()) {
            setSunSpectralRadiantEmittance(other.getSunSpectralRadiantEmittance());
          }
          if (other.hasWavelengthM()) {
            setWavelengthM(other.getWavelengthM());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  fieldOfViewRad_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 17: {
                  bandwidthHz_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 25: {
                  noiseTemperatureK_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  efficiencyPercent_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                case 41: {
                  darkCurrentAmp_ = input.readDouble();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 41
                case 49: {
                  loadImpedanceOhm_ = input.readDouble();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 49
                case 57: {
                  noiseFactor_ = input.readDouble();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 57
                case 65: {
                  gainDb_ = input.readDouble();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 65
                case 73: {
                  opticalBandpassFilterBandwidthHz_ = input.readDouble();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 73
                case 81: {
                  skySpectralRadiance_ = input.readDouble();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 81
                case 89: {
                  sunSpectralRadiantEmittance_ = input.readDouble();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 89
                case 97: {
                  wavelengthM_ = input.readDouble();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 97
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double fieldOfViewRad_ ;
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return Whether the fieldOfViewRad field is set.
         */
        @java.lang.Override
        public boolean hasFieldOfViewRad() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return The fieldOfViewRad.
         */
        @java.lang.Override
        public double getFieldOfViewRad() {
          return fieldOfViewRad_;
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @param value The fieldOfViewRad to set.
         * @return This builder for chaining.
         */
        public Builder setFieldOfViewRad(double value) {

          fieldOfViewRad_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldOfViewRad() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fieldOfViewRad_ = 0D;
          onChanged();
          return this;
        }

        private double bandwidthHz_ ;
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return Whether the bandwidthHz field is set.
         */
        @java.lang.Override
        public boolean hasBandwidthHz() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return The bandwidthHz.
         */
        @java.lang.Override
        public double getBandwidthHz() {
          return bandwidthHz_;
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @param value The bandwidthHz to set.
         * @return This builder for chaining.
         */
        public Builder setBandwidthHz(double value) {

          bandwidthHz_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return This builder for chaining.
         */
        public Builder clearBandwidthHz() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bandwidthHz_ = 0D;
          onChanged();
          return this;
        }

        private double noiseTemperatureK_ ;
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return Whether the noiseTemperatureK field is set.
         */
        @java.lang.Override
        public boolean hasNoiseTemperatureK() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return The noiseTemperatureK.
         */
        @java.lang.Override
        public double getNoiseTemperatureK() {
          return noiseTemperatureK_;
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @param value The noiseTemperatureK to set.
         * @return This builder for chaining.
         */
        public Builder setNoiseTemperatureK(double value) {

          noiseTemperatureK_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return This builder for chaining.
         */
        public Builder clearNoiseTemperatureK() {
          bitField0_ = (bitField0_ & ~0x00000004);
          noiseTemperatureK_ = 0D;
          onChanged();
          return this;
        }

        private double efficiencyPercent_ ;
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return Whether the efficiencyPercent field is set.
         */
        @java.lang.Override
        public boolean hasEfficiencyPercent() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return The efficiencyPercent.
         */
        @java.lang.Override
        public double getEfficiencyPercent() {
          return efficiencyPercent_;
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @param value The efficiencyPercent to set.
         * @return This builder for chaining.
         */
        public Builder setEfficiencyPercent(double value) {

          efficiencyPercent_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return This builder for chaining.
         */
        public Builder clearEfficiencyPercent() {
          bitField0_ = (bitField0_ & ~0x00000008);
          efficiencyPercent_ = 0D;
          onChanged();
          return this;
        }

        private double darkCurrentAmp_ ;
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return Whether the darkCurrentAmp field is set.
         */
        @java.lang.Override
        public boolean hasDarkCurrentAmp() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return The darkCurrentAmp.
         */
        @java.lang.Override
        public double getDarkCurrentAmp() {
          return darkCurrentAmp_;
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @param value The darkCurrentAmp to set.
         * @return This builder for chaining.
         */
        public Builder setDarkCurrentAmp(double value) {

          darkCurrentAmp_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return This builder for chaining.
         */
        public Builder clearDarkCurrentAmp() {
          bitField0_ = (bitField0_ & ~0x00000010);
          darkCurrentAmp_ = 0D;
          onChanged();
          return this;
        }

        private double loadImpedanceOhm_ ;
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return Whether the loadImpedanceOhm field is set.
         */
        @java.lang.Override
        public boolean hasLoadImpedanceOhm() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return The loadImpedanceOhm.
         */
        @java.lang.Override
        public double getLoadImpedanceOhm() {
          return loadImpedanceOhm_;
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @param value The loadImpedanceOhm to set.
         * @return This builder for chaining.
         */
        public Builder setLoadImpedanceOhm(double value) {

          loadImpedanceOhm_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return This builder for chaining.
         */
        public Builder clearLoadImpedanceOhm() {
          bitField0_ = (bitField0_ & ~0x00000020);
          loadImpedanceOhm_ = 0D;
          onChanged();
          return this;
        }

        private double noiseFactor_ ;
        /**
         * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
         * @return Whether the noiseFactor field is set.
         */
        @java.lang.Override
        public boolean hasNoiseFactor() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
         * @return The noiseFactor.
         */
        @java.lang.Override
        public double getNoiseFactor() {
          return noiseFactor_;
        }
        /**
         * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
         * @param value The noiseFactor to set.
         * @return This builder for chaining.
         */
        public Builder setNoiseFactor(double value) {

          noiseFactor_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional double noise_factor = 7 [json_name = "noiseFactor"];</code>
         * @return This builder for chaining.
         */
        public Builder clearNoiseFactor() {
          bitField0_ = (bitField0_ & ~0x00000040);
          noiseFactor_ = 0D;
          onChanged();
          return this;
        }

        private double gainDb_ ;
        /**
         * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
         * @return Whether the gainDb field is set.
         */
        @java.lang.Override
        public boolean hasGainDb() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
         * @return The gainDb.
         */
        @java.lang.Override
        public double getGainDb() {
          return gainDb_;
        }
        /**
         * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
         * @param value The gainDb to set.
         * @return This builder for chaining.
         */
        public Builder setGainDb(double value) {

          gainDb_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional double gain_db = 8 [json_name = "gainDb"];</code>
         * @return This builder for chaining.
         */
        public Builder clearGainDb() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gainDb_ = 0D;
          onChanged();
          return this;
        }

        private double opticalBandpassFilterBandwidthHz_ ;
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return Whether the opticalBandpassFilterBandwidthHz field is set.
         */
        @java.lang.Override
        public boolean hasOpticalBandpassFilterBandwidthHz() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return The opticalBandpassFilterBandwidthHz.
         */
        @java.lang.Override
        public double getOpticalBandpassFilterBandwidthHz() {
          return opticalBandpassFilterBandwidthHz_;
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @param value The opticalBandpassFilterBandwidthHz to set.
         * @return This builder for chaining.
         */
        public Builder setOpticalBandpassFilterBandwidthHz(double value) {

          opticalBandpassFilterBandwidthHz_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 9 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return This builder for chaining.
         */
        public Builder clearOpticalBandpassFilterBandwidthHz() {
          bitField0_ = (bitField0_ & ~0x00000100);
          opticalBandpassFilterBandwidthHz_ = 0D;
          onChanged();
          return this;
        }

        private double skySpectralRadiance_ ;
        /**
         * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
         * @return Whether the skySpectralRadiance field is set.
         */
        @java.lang.Override
        public boolean hasSkySpectralRadiance() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
         * @return The skySpectralRadiance.
         */
        @java.lang.Override
        public double getSkySpectralRadiance() {
          return skySpectralRadiance_;
        }
        /**
         * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
         * @param value The skySpectralRadiance to set.
         * @return This builder for chaining.
         */
        public Builder setSkySpectralRadiance(double value) {

          skySpectralRadiance_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional double sky_spectral_radiance = 10 [json_name = "skySpectralRadiance"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSkySpectralRadiance() {
          bitField0_ = (bitField0_ & ~0x00000200);
          skySpectralRadiance_ = 0D;
          onChanged();
          return this;
        }

        private double sunSpectralRadiantEmittance_ ;
        /**
         * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return Whether the sunSpectralRadiantEmittance field is set.
         */
        @java.lang.Override
        public boolean hasSunSpectralRadiantEmittance() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return The sunSpectralRadiantEmittance.
         */
        @java.lang.Override
        public double getSunSpectralRadiantEmittance() {
          return sunSpectralRadiantEmittance_;
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @param value The sunSpectralRadiantEmittance to set.
         * @return This builder for chaining.
         */
        public Builder setSunSpectralRadiantEmittance(double value) {

          sunSpectralRadiantEmittance_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 11 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSunSpectralRadiantEmittance() {
          bitField0_ = (bitField0_ & ~0x00000400);
          sunSpectralRadiantEmittance_ = 0D;
          onChanged();
          return this;
        }

        private double wavelengthM_ ;
        /**
         * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
         * @return Whether the wavelengthM field is set.
         */
        @java.lang.Override
        public boolean hasWavelengthM() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
         * @return The wavelengthM.
         */
        @java.lang.Override
        public double getWavelengthM() {
          return wavelengthM_;
        }
        /**
         * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
         * @param value The wavelengthM to set.
         * @return This builder for chaining.
         */
        public Builder setWavelengthM(double value) {

          wavelengthM_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <code>optional double wavelength_m = 12 [json_name = "wavelengthM"];</code>
         * @return This builder for chaining.
         */
        public Builder clearWavelengthM() {
          bitField0_ = (bitField0_ & ~0x00000800);
          wavelengthM_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)
      }

      // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition)
      private static final com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition();
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AvalanchePhotodiodeDefinition>
          PARSER = new com.google.protobuf.AbstractParser<AvalanchePhotodiodeDefinition>() {
        @java.lang.Override
        public AvalanchePhotodiodeDefinition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<AvalanchePhotodiodeDefinition> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AvalanchePhotodiodeDefinition> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PinPhotodiodeDefinitionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return Whether the fieldOfViewRad field is set.
       */
      boolean hasFieldOfViewRad();
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return The fieldOfViewRad.
       */
      double getFieldOfViewRad();

      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return Whether the bandwidthHz field is set.
       */
      boolean hasBandwidthHz();
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return The bandwidthHz.
       */
      double getBandwidthHz();

      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return Whether the noiseTemperatureK field is set.
       */
      boolean hasNoiseTemperatureK();
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return The noiseTemperatureK.
       */
      double getNoiseTemperatureK();

      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return Whether the efficiencyPercent field is set.
       */
      boolean hasEfficiencyPercent();
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return The efficiencyPercent.
       */
      double getEfficiencyPercent();

      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return Whether the darkCurrentAmp field is set.
       */
      boolean hasDarkCurrentAmp();
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return The darkCurrentAmp.
       */
      double getDarkCurrentAmp();

      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return Whether the loadImpedanceOhm field is set.
       */
      boolean hasLoadImpedanceOhm();
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return The loadImpedanceOhm.
       */
      double getLoadImpedanceOhm();

      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return Whether the opticalBandpassFilterBandwidthHz field is set.
       */
      boolean hasOpticalBandpassFilterBandwidthHz();
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return The opticalBandpassFilterBandwidthHz.
       */
      double getOpticalBandpassFilterBandwidthHz();

      /**
       * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
       * @return Whether the skySpectralRadiance field is set.
       */
      boolean hasSkySpectralRadiance();
      /**
       * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
       * @return The skySpectralRadiance.
       */
      double getSkySpectralRadiance();

      /**
       * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return Whether the sunSpectralRadiantEmittance field is set.
       */
      boolean hasSunSpectralRadiantEmittance();
      /**
       * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return The sunSpectralRadiantEmittance.
       */
      double getSunSpectralRadiantEmittance();

      /**
       * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
       * @return Whether the wavelengthM field is set.
       */
      boolean hasWavelengthM();
      /**
       * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
       * @return The wavelengthM.
       */
      double getWavelengthM();
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition}
     */
    public static final class PinPhotodiodeDefinition extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition)
        PinPhotodiodeDefinitionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PinPhotodiodeDefinition.newBuilder() to construct.
      private PinPhotodiodeDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PinPhotodiodeDefinition() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PinPhotodiodeDefinition();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder.class);
      }

      private int bitField0_;
      public static final int FIELD_OF_VIEW_RAD_FIELD_NUMBER = 1;
      private double fieldOfViewRad_ = 0D;
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return Whether the fieldOfViewRad field is set.
       */
      @java.lang.Override
      public boolean hasFieldOfViewRad() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
       * @return The fieldOfViewRad.
       */
      @java.lang.Override
      public double getFieldOfViewRad() {
        return fieldOfViewRad_;
      }

      public static final int BANDWIDTH_HZ_FIELD_NUMBER = 2;
      private double bandwidthHz_ = 0D;
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return Whether the bandwidthHz field is set.
       */
      @java.lang.Override
      public boolean hasBandwidthHz() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
       * @return The bandwidthHz.
       */
      @java.lang.Override
      public double getBandwidthHz() {
        return bandwidthHz_;
      }

      public static final int NOISE_TEMPERATURE_K_FIELD_NUMBER = 3;
      private double noiseTemperatureK_ = 0D;
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return Whether the noiseTemperatureK field is set.
       */
      @java.lang.Override
      public boolean hasNoiseTemperatureK() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
       * @return The noiseTemperatureK.
       */
      @java.lang.Override
      public double getNoiseTemperatureK() {
        return noiseTemperatureK_;
      }

      public static final int EFFICIENCY_PERCENT_FIELD_NUMBER = 4;
      private double efficiencyPercent_ = 0D;
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return Whether the efficiencyPercent field is set.
       */
      @java.lang.Override
      public boolean hasEfficiencyPercent() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
       * @return The efficiencyPercent.
       */
      @java.lang.Override
      public double getEfficiencyPercent() {
        return efficiencyPercent_;
      }

      public static final int DARK_CURRENT_AMP_FIELD_NUMBER = 5;
      private double darkCurrentAmp_ = 0D;
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return Whether the darkCurrentAmp field is set.
       */
      @java.lang.Override
      public boolean hasDarkCurrentAmp() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
       * @return The darkCurrentAmp.
       */
      @java.lang.Override
      public double getDarkCurrentAmp() {
        return darkCurrentAmp_;
      }

      public static final int LOAD_IMPEDANCE_OHM_FIELD_NUMBER = 6;
      private double loadImpedanceOhm_ = 0D;
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return Whether the loadImpedanceOhm field is set.
       */
      @java.lang.Override
      public boolean hasLoadImpedanceOhm() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
       * @return The loadImpedanceOhm.
       */
      @java.lang.Override
      public double getLoadImpedanceOhm() {
        return loadImpedanceOhm_;
      }

      public static final int OPTICAL_BANDPASS_FILTER_BANDWIDTH_HZ_FIELD_NUMBER = 7;
      private double opticalBandpassFilterBandwidthHz_ = 0D;
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return Whether the opticalBandpassFilterBandwidthHz field is set.
       */
      @java.lang.Override
      public boolean hasOpticalBandpassFilterBandwidthHz() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
       * @return The opticalBandpassFilterBandwidthHz.
       */
      @java.lang.Override
      public double getOpticalBandpassFilterBandwidthHz() {
        return opticalBandpassFilterBandwidthHz_;
      }

      public static final int SKY_SPECTRAL_RADIANCE_FIELD_NUMBER = 8;
      private double skySpectralRadiance_ = 0D;
      /**
       * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
       * @return Whether the skySpectralRadiance field is set.
       */
      @java.lang.Override
      public boolean hasSkySpectralRadiance() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
       * @return The skySpectralRadiance.
       */
      @java.lang.Override
      public double getSkySpectralRadiance() {
        return skySpectralRadiance_;
      }

      public static final int SUN_SPECTRAL_RADIANT_EMITTANCE_FIELD_NUMBER = 9;
      private double sunSpectralRadiantEmittance_ = 0D;
      /**
       * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return Whether the sunSpectralRadiantEmittance field is set.
       */
      @java.lang.Override
      public boolean hasSunSpectralRadiantEmittance() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
       * @return The sunSpectralRadiantEmittance.
       */
      @java.lang.Override
      public double getSunSpectralRadiantEmittance() {
        return sunSpectralRadiantEmittance_;
      }

      public static final int WAVELENGTH_M_FIELD_NUMBER = 10;
      private double wavelengthM_ = 0D;
      /**
       * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
       * @return Whether the wavelengthM field is set.
       */
      @java.lang.Override
      public boolean hasWavelengthM() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
       * @return The wavelengthM.
       */
      @java.lang.Override
      public double getWavelengthM() {
        return wavelengthM_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeDouble(1, fieldOfViewRad_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeDouble(2, bandwidthHz_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeDouble(3, noiseTemperatureK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeDouble(4, efficiencyPercent_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeDouble(5, darkCurrentAmp_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeDouble(6, loadImpedanceOhm_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeDouble(7, opticalBandpassFilterBandwidthHz_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeDouble(8, skySpectralRadiance_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeDouble(9, sunSpectralRadiantEmittance_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeDouble(10, wavelengthM_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, fieldOfViewRad_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, bandwidthHz_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, noiseTemperatureK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, efficiencyPercent_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, darkCurrentAmp_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, loadImpedanceOhm_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, opticalBandpassFilterBandwidthHz_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, skySpectralRadiance_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, sunSpectralRadiantEmittance_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, wavelengthM_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition)) {
          return super.equals(obj);
        }
        com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) obj;

        if (hasFieldOfViewRad() != other.hasFieldOfViewRad()) return false;
        if (hasFieldOfViewRad()) {
          if (java.lang.Double.doubleToLongBits(getFieldOfViewRad())
              != java.lang.Double.doubleToLongBits(
                  other.getFieldOfViewRad())) return false;
        }
        if (hasBandwidthHz() != other.hasBandwidthHz()) return false;
        if (hasBandwidthHz()) {
          if (java.lang.Double.doubleToLongBits(getBandwidthHz())
              != java.lang.Double.doubleToLongBits(
                  other.getBandwidthHz())) return false;
        }
        if (hasNoiseTemperatureK() != other.hasNoiseTemperatureK()) return false;
        if (hasNoiseTemperatureK()) {
          if (java.lang.Double.doubleToLongBits(getNoiseTemperatureK())
              != java.lang.Double.doubleToLongBits(
                  other.getNoiseTemperatureK())) return false;
        }
        if (hasEfficiencyPercent() != other.hasEfficiencyPercent()) return false;
        if (hasEfficiencyPercent()) {
          if (java.lang.Double.doubleToLongBits(getEfficiencyPercent())
              != java.lang.Double.doubleToLongBits(
                  other.getEfficiencyPercent())) return false;
        }
        if (hasDarkCurrentAmp() != other.hasDarkCurrentAmp()) return false;
        if (hasDarkCurrentAmp()) {
          if (java.lang.Double.doubleToLongBits(getDarkCurrentAmp())
              != java.lang.Double.doubleToLongBits(
                  other.getDarkCurrentAmp())) return false;
        }
        if (hasLoadImpedanceOhm() != other.hasLoadImpedanceOhm()) return false;
        if (hasLoadImpedanceOhm()) {
          if (java.lang.Double.doubleToLongBits(getLoadImpedanceOhm())
              != java.lang.Double.doubleToLongBits(
                  other.getLoadImpedanceOhm())) return false;
        }
        if (hasOpticalBandpassFilterBandwidthHz() != other.hasOpticalBandpassFilterBandwidthHz()) return false;
        if (hasOpticalBandpassFilterBandwidthHz()) {
          if (java.lang.Double.doubleToLongBits(getOpticalBandpassFilterBandwidthHz())
              != java.lang.Double.doubleToLongBits(
                  other.getOpticalBandpassFilterBandwidthHz())) return false;
        }
        if (hasSkySpectralRadiance() != other.hasSkySpectralRadiance()) return false;
        if (hasSkySpectralRadiance()) {
          if (java.lang.Double.doubleToLongBits(getSkySpectralRadiance())
              != java.lang.Double.doubleToLongBits(
                  other.getSkySpectralRadiance())) return false;
        }
        if (hasSunSpectralRadiantEmittance() != other.hasSunSpectralRadiantEmittance()) return false;
        if (hasSunSpectralRadiantEmittance()) {
          if (java.lang.Double.doubleToLongBits(getSunSpectralRadiantEmittance())
              != java.lang.Double.doubleToLongBits(
                  other.getSunSpectralRadiantEmittance())) return false;
        }
        if (hasWavelengthM() != other.hasWavelengthM()) return false;
        if (hasWavelengthM()) {
          if (java.lang.Double.doubleToLongBits(getWavelengthM())
              != java.lang.Double.doubleToLongBits(
                  other.getWavelengthM())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFieldOfViewRad()) {
          hash = (37 * hash) + FIELD_OF_VIEW_RAD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFieldOfViewRad()));
        }
        if (hasBandwidthHz()) {
          hash = (37 * hash) + BANDWIDTH_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getBandwidthHz()));
        }
        if (hasNoiseTemperatureK()) {
          hash = (37 * hash) + NOISE_TEMPERATURE_K_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getNoiseTemperatureK()));
        }
        if (hasEfficiencyPercent()) {
          hash = (37 * hash) + EFFICIENCY_PERCENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getEfficiencyPercent()));
        }
        if (hasDarkCurrentAmp()) {
          hash = (37 * hash) + DARK_CURRENT_AMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDarkCurrentAmp()));
        }
        if (hasLoadImpedanceOhm()) {
          hash = (37 * hash) + LOAD_IMPEDANCE_OHM_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getLoadImpedanceOhm()));
        }
        if (hasOpticalBandpassFilterBandwidthHz()) {
          hash = (37 * hash) + OPTICAL_BANDPASS_FILTER_BANDWIDTH_HZ_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getOpticalBandpassFilterBandwidthHz()));
        }
        if (hasSkySpectralRadiance()) {
          hash = (37 * hash) + SKY_SPECTRAL_RADIANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSkySpectralRadiance()));
        }
        if (hasSunSpectralRadiantEmittance()) {
          hash = (37 * hash) + SUN_SPECTRAL_RADIANT_EMITTANCE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getSunSpectralRadiantEmittance()));
        }
        if (hasWavelengthM()) {
          hash = (37 * hash) + WAVELENGTH_M_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getWavelengthM()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition)
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder.class);
        }

        // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          fieldOfViewRad_ = 0D;
          bandwidthHz_ = 0D;
          noiseTemperatureK_ = 0D;
          efficiencyPercent_ = 0D;
          darkCurrentAmp_ = 0D;
          loadImpedanceOhm_ = 0D;
          opticalBandpassFilterBandwidthHz_ = 0D;
          skySpectralRadiance_ = 0D;
          sunSpectralRadiantEmittance_ = 0D;
          wavelengthM_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getDefaultInstanceForType() {
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition build() {
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition buildPartial() {
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.fieldOfViewRad_ = fieldOfViewRad_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.bandwidthHz_ = bandwidthHz_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.noiseTemperatureK_ = noiseTemperatureK_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.efficiencyPercent_ = efficiencyPercent_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.darkCurrentAmp_ = darkCurrentAmp_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.loadImpedanceOhm_ = loadImpedanceOhm_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.opticalBandpassFilterBandwidthHz_ = opticalBandpassFilterBandwidthHz_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.skySpectralRadiance_ = skySpectralRadiance_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.sunSpectralRadiantEmittance_ = sunSpectralRadiantEmittance_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.wavelengthM_ = wavelengthM_;
            to_bitField0_ |= 0x00000200;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) {
            return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition other) {
          if (other == com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance()) return this;
          if (other.hasFieldOfViewRad()) {
            setFieldOfViewRad(other.getFieldOfViewRad());
          }
          if (other.hasBandwidthHz()) {
            setBandwidthHz(other.getBandwidthHz());
          }
          if (other.hasNoiseTemperatureK()) {
            setNoiseTemperatureK(other.getNoiseTemperatureK());
          }
          if (other.hasEfficiencyPercent()) {
            setEfficiencyPercent(other.getEfficiencyPercent());
          }
          if (other.hasDarkCurrentAmp()) {
            setDarkCurrentAmp(other.getDarkCurrentAmp());
          }
          if (other.hasLoadImpedanceOhm()) {
            setLoadImpedanceOhm(other.getLoadImpedanceOhm());
          }
          if (other.hasOpticalBandpassFilterBandwidthHz()) {
            setOpticalBandpassFilterBandwidthHz(other.getOpticalBandpassFilterBandwidthHz());
          }
          if (other.hasSkySpectralRadiance()) {
            setSkySpectralRadiance(other.getSkySpectralRadiance());
          }
          if (other.hasSunSpectralRadiantEmittance()) {
            setSunSpectralRadiantEmittance(other.getSunSpectralRadiantEmittance());
          }
          if (other.hasWavelengthM()) {
            setWavelengthM(other.getWavelengthM());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  fieldOfViewRad_ = input.readDouble();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 9
                case 17: {
                  bandwidthHz_ = input.readDouble();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 17
                case 25: {
                  noiseTemperatureK_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  efficiencyPercent_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                case 41: {
                  darkCurrentAmp_ = input.readDouble();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 41
                case 49: {
                  loadImpedanceOhm_ = input.readDouble();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 49
                case 57: {
                  opticalBandpassFilterBandwidthHz_ = input.readDouble();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 57
                case 65: {
                  skySpectralRadiance_ = input.readDouble();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 65
                case 73: {
                  sunSpectralRadiantEmittance_ = input.readDouble();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 73
                case 81: {
                  wavelengthM_ = input.readDouble();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 81
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private double fieldOfViewRad_ ;
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return Whether the fieldOfViewRad field is set.
         */
        @java.lang.Override
        public boolean hasFieldOfViewRad() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return The fieldOfViewRad.
         */
        @java.lang.Override
        public double getFieldOfViewRad() {
          return fieldOfViewRad_;
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @param value The fieldOfViewRad to set.
         * @return This builder for chaining.
         */
        public Builder setFieldOfViewRad(double value) {

          fieldOfViewRad_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional double field_of_view_rad = 1 [json_name = "fieldOfViewRad"];</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldOfViewRad() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fieldOfViewRad_ = 0D;
          onChanged();
          return this;
        }

        private double bandwidthHz_ ;
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return Whether the bandwidthHz field is set.
         */
        @java.lang.Override
        public boolean hasBandwidthHz() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return The bandwidthHz.
         */
        @java.lang.Override
        public double getBandwidthHz() {
          return bandwidthHz_;
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @param value The bandwidthHz to set.
         * @return This builder for chaining.
         */
        public Builder setBandwidthHz(double value) {

          bandwidthHz_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional double bandwidth_hz = 2 [json_name = "bandwidthHz"];</code>
         * @return This builder for chaining.
         */
        public Builder clearBandwidthHz() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bandwidthHz_ = 0D;
          onChanged();
          return this;
        }

        private double noiseTemperatureK_ ;
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return Whether the noiseTemperatureK field is set.
         */
        @java.lang.Override
        public boolean hasNoiseTemperatureK() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return The noiseTemperatureK.
         */
        @java.lang.Override
        public double getNoiseTemperatureK() {
          return noiseTemperatureK_;
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @param value The noiseTemperatureK to set.
         * @return This builder for chaining.
         */
        public Builder setNoiseTemperatureK(double value) {

          noiseTemperatureK_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional double noise_temperature_k = 3 [json_name = "noiseTemperatureK"];</code>
         * @return This builder for chaining.
         */
        public Builder clearNoiseTemperatureK() {
          bitField0_ = (bitField0_ & ~0x00000004);
          noiseTemperatureK_ = 0D;
          onChanged();
          return this;
        }

        private double efficiencyPercent_ ;
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return Whether the efficiencyPercent field is set.
         */
        @java.lang.Override
        public boolean hasEfficiencyPercent() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return The efficiencyPercent.
         */
        @java.lang.Override
        public double getEfficiencyPercent() {
          return efficiencyPercent_;
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @param value The efficiencyPercent to set.
         * @return This builder for chaining.
         */
        public Builder setEfficiencyPercent(double value) {

          efficiencyPercent_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional double efficiency_percent = 4 [json_name = "efficiencyPercent"];</code>
         * @return This builder for chaining.
         */
        public Builder clearEfficiencyPercent() {
          bitField0_ = (bitField0_ & ~0x00000008);
          efficiencyPercent_ = 0D;
          onChanged();
          return this;
        }

        private double darkCurrentAmp_ ;
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return Whether the darkCurrentAmp field is set.
         */
        @java.lang.Override
        public boolean hasDarkCurrentAmp() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return The darkCurrentAmp.
         */
        @java.lang.Override
        public double getDarkCurrentAmp() {
          return darkCurrentAmp_;
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @param value The darkCurrentAmp to set.
         * @return This builder for chaining.
         */
        public Builder setDarkCurrentAmp(double value) {

          darkCurrentAmp_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional double dark_current_amp = 5 [json_name = "darkCurrentAmp"];</code>
         * @return This builder for chaining.
         */
        public Builder clearDarkCurrentAmp() {
          bitField0_ = (bitField0_ & ~0x00000010);
          darkCurrentAmp_ = 0D;
          onChanged();
          return this;
        }

        private double loadImpedanceOhm_ ;
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return Whether the loadImpedanceOhm field is set.
         */
        @java.lang.Override
        public boolean hasLoadImpedanceOhm() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return The loadImpedanceOhm.
         */
        @java.lang.Override
        public double getLoadImpedanceOhm() {
          return loadImpedanceOhm_;
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @param value The loadImpedanceOhm to set.
         * @return This builder for chaining.
         */
        public Builder setLoadImpedanceOhm(double value) {

          loadImpedanceOhm_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional double load_impedance_ohm = 6 [json_name = "loadImpedanceOhm"];</code>
         * @return This builder for chaining.
         */
        public Builder clearLoadImpedanceOhm() {
          bitField0_ = (bitField0_ & ~0x00000020);
          loadImpedanceOhm_ = 0D;
          onChanged();
          return this;
        }

        private double opticalBandpassFilterBandwidthHz_ ;
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return Whether the opticalBandpassFilterBandwidthHz field is set.
         */
        @java.lang.Override
        public boolean hasOpticalBandpassFilterBandwidthHz() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return The opticalBandpassFilterBandwidthHz.
         */
        @java.lang.Override
        public double getOpticalBandpassFilterBandwidthHz() {
          return opticalBandpassFilterBandwidthHz_;
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @param value The opticalBandpassFilterBandwidthHz to set.
         * @return This builder for chaining.
         */
        public Builder setOpticalBandpassFilterBandwidthHz(double value) {

          opticalBandpassFilterBandwidthHz_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional double optical_bandpass_filter_bandwidth_hz = 7 [json_name = "opticalBandpassFilterBandwidthHz"];</code>
         * @return This builder for chaining.
         */
        public Builder clearOpticalBandpassFilterBandwidthHz() {
          bitField0_ = (bitField0_ & ~0x00000040);
          opticalBandpassFilterBandwidthHz_ = 0D;
          onChanged();
          return this;
        }

        private double skySpectralRadiance_ ;
        /**
         * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
         * @return Whether the skySpectralRadiance field is set.
         */
        @java.lang.Override
        public boolean hasSkySpectralRadiance() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
         * @return The skySpectralRadiance.
         */
        @java.lang.Override
        public double getSkySpectralRadiance() {
          return skySpectralRadiance_;
        }
        /**
         * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
         * @param value The skySpectralRadiance to set.
         * @return This builder for chaining.
         */
        public Builder setSkySpectralRadiance(double value) {

          skySpectralRadiance_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional double sky_spectral_radiance = 8 [json_name = "skySpectralRadiance"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSkySpectralRadiance() {
          bitField0_ = (bitField0_ & ~0x00000080);
          skySpectralRadiance_ = 0D;
          onChanged();
          return this;
        }

        private double sunSpectralRadiantEmittance_ ;
        /**
         * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return Whether the sunSpectralRadiantEmittance field is set.
         */
        @java.lang.Override
        public boolean hasSunSpectralRadiantEmittance() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return The sunSpectralRadiantEmittance.
         */
        @java.lang.Override
        public double getSunSpectralRadiantEmittance() {
          return sunSpectralRadiantEmittance_;
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @param value The sunSpectralRadiantEmittance to set.
         * @return This builder for chaining.
         */
        public Builder setSunSpectralRadiantEmittance(double value) {

          sunSpectralRadiantEmittance_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional double sun_spectral_radiant_emittance = 9 [json_name = "sunSpectralRadiantEmittance"];</code>
         * @return This builder for chaining.
         */
        public Builder clearSunSpectralRadiantEmittance() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sunSpectralRadiantEmittance_ = 0D;
          onChanged();
          return this;
        }

        private double wavelengthM_ ;
        /**
         * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
         * @return Whether the wavelengthM field is set.
         */
        @java.lang.Override
        public boolean hasWavelengthM() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
         * @return The wavelengthM.
         */
        @java.lang.Override
        public double getWavelengthM() {
          return wavelengthM_;
        }
        /**
         * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
         * @param value The wavelengthM to set.
         * @return This builder for chaining.
         */
        public Builder setWavelengthM(double value) {

          wavelengthM_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional double wavelength_m = 10 [json_name = "wavelengthM"];</code>
         * @return This builder for chaining.
         */
        public Builder clearWavelengthM() {
          bitField0_ = (bitField0_ & ~0x00000200);
          wavelengthM_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition)
      }

      // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition)
      private static final com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition();
      }

      public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PinPhotodiodeDefinition>
          PARSER = new com.google.protobuf.AbstractParser<PinPhotodiodeDefinition>() {
        @java.lang.Override
        public PinPhotodiodeDefinition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PinPhotodiodeDefinition> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PinPhotodiodeDefinition> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int photodetectorTypeCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object photodetectorType_;
    public enum PhotodetectorTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      AVALANCHE_PHOTODIODE(1),
      PIN_PHOTODIODE(2),
      PHOTODETECTORTYPE_NOT_SET(0);
      private final int value;
      private PhotodetectorTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PhotodetectorTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static PhotodetectorTypeCase forNumber(int value) {
        switch (value) {
          case 1: return AVALANCHE_PHOTODIODE;
          case 2: return PIN_PHOTODIODE;
          case 0: return PHOTODETECTORTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PhotodetectorTypeCase
    getPhotodetectorTypeCase() {
      return PhotodetectorTypeCase.forNumber(
          photodetectorTypeCase_);
    }

    public static final int AVALANCHE_PHOTODIODE_FIELD_NUMBER = 1;
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     * @return Whether the avalanchePhotodiode field is set.
     */
    @java.lang.Override
    public boolean hasAvalanchePhotodiode() {
      return photodetectorTypeCase_ == 1;
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     * @return The avalanchePhotodiode.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getAvalanchePhotodiode() {
      if (photodetectorTypeCase_ == 1) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder getAvalanchePhotodiodeOrBuilder() {
      if (photodetectorTypeCase_ == 1) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
    }

    public static final int PIN_PHOTODIODE_FIELD_NUMBER = 2;
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     * @return Whether the pinPhotodiode field is set.
     */
    @java.lang.Override
    public boolean hasPinPhotodiode() {
      return photodetectorTypeCase_ == 2;
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     * @return The pinPhotodiode.
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getPinPhotodiode() {
      if (photodetectorTypeCase_ == 2) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
    }
    /**
     * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
     */
    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder getPinPhotodiodeOrBuilder() {
      if (photodetectorTypeCase_ == 2) {
         return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_;
      }
      return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (photodetectorTypeCase_ == 1) {
        output.writeMessage(1, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_);
      }
      if (photodetectorTypeCase_ == 2) {
        output.writeMessage(2, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (photodetectorTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_);
      }
      if (photodetectorTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition)) {
        return super.equals(obj);
      }
      com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition other = (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) obj;

      if (!getPhotodetectorTypeCase().equals(other.getPhotodetectorTypeCase())) return false;
      switch (photodetectorTypeCase_) {
        case 1:
          if (!getAvalanchePhotodiode()
              .equals(other.getAvalanchePhotodiode())) return false;
          break;
        case 2:
          if (!getPinPhotodiode()
              .equals(other.getPinPhotodiode())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (photodetectorTypeCase_) {
        case 1:
          hash = (37 * hash) + AVALANCHE_PHOTODIODE_FIELD_NUMBER;
          hash = (53 * hash) + getAvalanchePhotodiode().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PIN_PHOTODIODE_FIELD_NUMBER;
          hash = (53 * hash) + getPinPhotodiode().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code aalyria.spacetime.api.common.PhotodetectorDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:aalyria.spacetime.api.common.PhotodetectorDefinition)
        com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.class, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.Builder.class);
      }

      // Construct using com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (avalanchePhotodiodeBuilder_ != null) {
          avalanchePhotodiodeBuilder_.clear();
        }
        if (pinPhotodiodeBuilder_ != null) {
          pinPhotodiodeBuilder_.clear();
        }
        photodetectorTypeCase_ = 0;
        photodetectorType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getDefaultInstanceForType() {
        return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance();
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition build() {
        com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition buildPartial() {
        com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition result = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition result) {
        result.photodetectorTypeCase_ = photodetectorTypeCase_;
        result.photodetectorType_ = this.photodetectorType_;
        if (photodetectorTypeCase_ == 1 &&
            avalanchePhotodiodeBuilder_ != null) {
          result.photodetectorType_ = avalanchePhotodiodeBuilder_.build();
        }
        if (photodetectorTypeCase_ == 2 &&
            pinPhotodiodeBuilder_ != null) {
          result.photodetectorType_ = pinPhotodiodeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition) {
          return mergeFrom((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition other) {
        if (other == com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.getDefaultInstance()) return this;
        switch (other.getPhotodetectorTypeCase()) {
          case AVALANCHE_PHOTODIODE: {
            mergeAvalanchePhotodiode(other.getAvalanchePhotodiode());
            break;
          }
          case PIN_PHOTODIODE: {
            mergePinPhotodiode(other.getPinPhotodiode());
            break;
          }
          case PHOTODETECTORTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getAvalanchePhotodiodeFieldBuilder().getBuilder(),
                    extensionRegistry);
                photodetectorTypeCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPinPhotodiodeFieldBuilder().getBuilder(),
                    extensionRegistry);
                photodetectorTypeCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int photodetectorTypeCase_ = 0;
      private java.lang.Object photodetectorType_;
      public PhotodetectorTypeCase
          getPhotodetectorTypeCase() {
        return PhotodetectorTypeCase.forNumber(
            photodetectorTypeCase_);
      }

      public Builder clearPhotodetectorType() {
        photodetectorTypeCase_ = 0;
        photodetectorType_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder> avalanchePhotodiodeBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       * @return Whether the avalanchePhotodiode field is set.
       */
      @java.lang.Override
      public boolean hasAvalanchePhotodiode() {
        return photodetectorTypeCase_ == 1;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       * @return The avalanchePhotodiode.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition getAvalanchePhotodiode() {
        if (avalanchePhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 1) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
        } else {
          if (photodetectorTypeCase_ == 1) {
            return avalanchePhotodiodeBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      public Builder setAvalanchePhotodiode(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition value) {
        if (avalanchePhotodiodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photodetectorType_ = value;
          onChanged();
        } else {
          avalanchePhotodiodeBuilder_.setMessage(value);
        }
        photodetectorTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      public Builder setAvalanchePhotodiode(
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder builderForValue) {
        if (avalanchePhotodiodeBuilder_ == null) {
          photodetectorType_ = builderForValue.build();
          onChanged();
        } else {
          avalanchePhotodiodeBuilder_.setMessage(builderForValue.build());
        }
        photodetectorTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      public Builder mergeAvalanchePhotodiode(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition value) {
        if (avalanchePhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 1 &&
              photodetectorType_ != com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance()) {
            photodetectorType_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_)
                .mergeFrom(value).buildPartial();
          } else {
            photodetectorType_ = value;
          }
          onChanged();
        } else {
          if (photodetectorTypeCase_ == 1) {
            avalanchePhotodiodeBuilder_.mergeFrom(value);
          } else {
            avalanchePhotodiodeBuilder_.setMessage(value);
          }
        }
        photodetectorTypeCase_ = 1;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      public Builder clearAvalanchePhotodiode() {
        if (avalanchePhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 1) {
            photodetectorTypeCase_ = 0;
            photodetectorType_ = null;
            onChanged();
          }
        } else {
          if (photodetectorTypeCase_ == 1) {
            photodetectorTypeCase_ = 0;
            photodetectorType_ = null;
          }
          avalanchePhotodiodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder getAvalanchePhotodiodeBuilder() {
        return getAvalanchePhotodiodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder getAvalanchePhotodiodeOrBuilder() {
        if ((photodetectorTypeCase_ == 1) && (avalanchePhotodiodeBuilder_ != null)) {
          return avalanchePhotodiodeBuilder_.getMessageOrBuilder();
        } else {
          if (photodetectorTypeCase_ == 1) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.AvalanchePhotodiodeDefinition avalanche_photodiode = 1 [json_name = "avalanchePhotodiode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder> 
          getAvalanchePhotodiodeFieldBuilder() {
        if (avalanchePhotodiodeBuilder_ == null) {
          if (!(photodetectorTypeCase_ == 1)) {
            photodetectorType_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.getDefaultInstance();
          }
          avalanchePhotodiodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.AvalanchePhotodiodeDefinition) photodetectorType_,
                  getParentForChildren(),
                  isClean());
          photodetectorType_ = null;
        }
        photodetectorTypeCase_ = 1;
        onChanged();
        return avalanchePhotodiodeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder> pinPhotodiodeBuilder_;
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       * @return Whether the pinPhotodiode field is set.
       */
      @java.lang.Override
      public boolean hasPinPhotodiode() {
        return photodetectorTypeCase_ == 2;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       * @return The pinPhotodiode.
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition getPinPhotodiode() {
        if (pinPhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 2) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
        } else {
          if (photodetectorTypeCase_ == 2) {
            return pinPhotodiodeBuilder_.getMessage();
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      public Builder setPinPhotodiode(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition value) {
        if (pinPhotodiodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photodetectorType_ = value;
          onChanged();
        } else {
          pinPhotodiodeBuilder_.setMessage(value);
        }
        photodetectorTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      public Builder setPinPhotodiode(
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder builderForValue) {
        if (pinPhotodiodeBuilder_ == null) {
          photodetectorType_ = builderForValue.build();
          onChanged();
        } else {
          pinPhotodiodeBuilder_.setMessage(builderForValue.build());
        }
        photodetectorTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      public Builder mergePinPhotodiode(com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition value) {
        if (pinPhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 2 &&
              photodetectorType_ != com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance()) {
            photodetectorType_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.newBuilder((com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_)
                .mergeFrom(value).buildPartial();
          } else {
            photodetectorType_ = value;
          }
          onChanged();
        } else {
          if (photodetectorTypeCase_ == 2) {
            pinPhotodiodeBuilder_.mergeFrom(value);
          } else {
            pinPhotodiodeBuilder_.setMessage(value);
          }
        }
        photodetectorTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      public Builder clearPinPhotodiode() {
        if (pinPhotodiodeBuilder_ == null) {
          if (photodetectorTypeCase_ == 2) {
            photodetectorTypeCase_ = 0;
            photodetectorType_ = null;
            onChanged();
          }
        } else {
          if (photodetectorTypeCase_ == 2) {
            photodetectorTypeCase_ = 0;
            photodetectorType_ = null;
          }
          pinPhotodiodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder getPinPhotodiodeBuilder() {
        return getPinPhotodiodeFieldBuilder().getBuilder();
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      @java.lang.Override
      public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder getPinPhotodiodeOrBuilder() {
        if ((photodetectorTypeCase_ == 2) && (pinPhotodiodeBuilder_ != null)) {
          return pinPhotodiodeBuilder_.getMessageOrBuilder();
        } else {
          if (photodetectorTypeCase_ == 2) {
            return (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_;
          }
          return com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
        }
      }
      /**
       * <code>.aalyria.spacetime.api.common.PhotodetectorDefinition.PinPhotodiodeDefinition pin_photodiode = 2 [json_name = "pinPhotodiode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder> 
          getPinPhotodiodeFieldBuilder() {
        if (pinPhotodiodeBuilder_ == null) {
          if (!(photodetectorTypeCase_ == 2)) {
            photodetectorType_ = com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.getDefaultInstance();
          }
          pinPhotodiodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition.Builder, com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinitionOrBuilder>(
                  (com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition.PinPhotodiodeDefinition) photodetectorType_,
                  getParentForChildren(),
                  isClean());
          photodetectorType_ = null;
        }
        photodetectorTypeCase_ = 2;
        onChanged();
        return pinPhotodiodeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:aalyria.spacetime.api.common.PhotodetectorDefinition)
    }

    // @@protoc_insertion_point(class_scope:aalyria.spacetime.api.common.PhotodetectorDefinition)
    private static final com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition();
    }

    public static com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PhotodetectorDefinition>
        PARSER = new com.google.protobuf.AbstractParser<PhotodetectorDefinition>() {
      @java.lang.Override
      public PhotodetectorDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PhotodetectorDefinition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PhotodetectorDefinition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.aalyria.spacetime.api.common.WirelessReceiver.PhotodetectorDefinition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_RxChannels_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_RxChannels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_ReceiverDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_Filter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_Filter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"api/common/wireless_receiver.proto\022\034aa" +
      "lyria.spacetime.api.common\032\030api/common/c" +
      "hannel.proto\032\031api/common/wireless.proto\"" +
      "<\n\nRxChannels\022.\n\023center_frequency_hz\030\001 \003" +
      "(\003R\021centerFrequencyHz\"\354\003\n\022ReceiverDefini" +
      "tion\022\022\n\004name\030\002 \001(\tR\004name\022a\n\013channel_set\030" +
      "\n \003(\0132@.aalyria.spacetime.api.common.Rec" +
      "eiverDefinition.ChannelSetEntryR\nchannel" +
      "Set\022n\n\030channel_selection_method\030\t \001(\01624." +
      "aalyria.spacetime.api.common.ChannelSele" +
      "ctionMethodR\026channelSelectionMethod\022j\n\026s" +
      "ignal_processing_step\030\013 \003(\01324.aalyria.sp" +
      "acetime.api.common.ReceiveSignalProcesso" +
      "rR\024signalProcessingStep\032g\n\017ChannelSetEnt" +
      "ry\022\020\n\003key\030\001 \001(\tR\003key\022>\n\005value\030\002 \001(\0132(.aa" +
      "lyria.spacetime.api.common.RxChannelsR\005v" +
      "alue:\0028\001J\004\010\001\020\002J\004\010\003\020\tJ\004\010\014\020\rJ\010\010\r\020\200\200\200\200\002\"\344\002\n" +
      "\026ReceiveSignalProcessor\022>\n\006filter\030\001 \001(\0132" +
      "$.aalyria.spacetime.api.common.FilterH\000R" +
      "\006filter\022]\n\rphotodetector\030\002 \001(\01325.aalyria" +
      ".spacetime.api.common.PhotodetectorDefin" +
      "itionH\000R\rphotodetector\022Q\n\tamplifier\030\003 \001(" +
      "\01321.aalyria.spacetime.api.common.Amplifi" +
      "erDefinitionH\000R\tamplifier\022P\n\014gain_or_los" +
      "s\030\004 \001(\0132,.aalyria.spacetime.api.common.M" +
      "iscGainOrLossH\000R\ngainOrLossB\006\n\004type\"\201\004\n\006" +
      "Filter\022!\n\014frequency_hz\030\001 \001(\001R\013frequencyH" +
      "z\0227\n\030lower_bandwidth_limit_hz\030\002 \001(\001R\025low" +
      "erBandwidthLimitHz\0227\n\030upper_bandwidth_li" +
      "mit_hz\030\003 \001(\001R\025upperBandwidthLimitHz\022.\n\023n" +
      "oise_temperature_k\030\004 \001(\001R\021noiseTemperatu" +
      "reK\022d\n\013rectangular\030\005 \001(\0132@.aalyria.space" +
      "time.api.common.Filter.RectangularFilter" +
      "DefinitionH\000R\013rectangular\022U\n\006linear\030\006 \001(" +
      "\0132;.aalyria.spacetime.api.common.Filter." +
      "LinearFilterDefinitionH\000R\006linear\032\035\n\033Rect" +
      "angularFilterDefinition\032G\n\026LinearFilterD" +
      "efinition\022-\n\023rejection_db_per_hz\030\001 \001(\001R\020" +
      "rejectionDbPerHzB\r\n\013filter_type\"\216\013\n\027Phot" +
      "odetectorDefinition\022\210\001\n\024avalanche_photod" +
      "iode\030\001 \001(\0132S.aalyria.spacetime.api.commo" +
      "n.PhotodetectorDefinition.AvalanchePhoto" +
      "diodeDefinitionH\000R\023avalanchePhotodiode\022v" +
      "\n\016pin_photodiode\030\002 \001(\0132M.aalyria.spaceti" +
      "me.api.common.PhotodetectorDefinition.Pi" +
      "nPhotodiodeDefinitionH\000R\rpinPhotodiode\032\314" +
      "\004\n\035AvalanchePhotodiodeDefinition\022)\n\021fiel" +
      "d_of_view_rad\030\001 \001(\001R\016fieldOfViewRad\022!\n\014b" +
      "andwidth_hz\030\002 \001(\001R\013bandwidthHz\022.\n\023noise_" +
      "temperature_k\030\003 \001(\001R\021noiseTemperatureK\022-" +
      "\n\022efficiency_percent\030\004 \001(\001R\021efficiencyPe" +
      "rcent\022(\n\020dark_current_amp\030\005 \001(\001R\016darkCur" +
      "rentAmp\022,\n\022load_impedance_ohm\030\006 \001(\001R\020loa" +
      "dImpedanceOhm\022!\n\014noise_factor\030\007 \001(\001R\013noi" +
      "seFactor\022\027\n\007gain_db\030\010 \001(\001R\006gainDb\022N\n$opt" +
      "ical_bandpass_filter_bandwidth_hz\030\t \001(\001R" +
      " opticalBandpassFilterBandwidthHz\0222\n\025sky" +
      "_spectral_radiance\030\n \001(\001R\023skySpectralRad" +
      "iance\022C\n\036sun_spectral_radiant_emittance\030" +
      "\013 \001(\001R\033sunSpectralRadiantEmittance\022!\n\014wa" +
      "velength_m\030\014 \001(\001R\013wavelengthM\032\212\004\n\027PinPho" +
      "todiodeDefinition\022)\n\021field_of_view_rad\030\001" +
      " \001(\001R\016fieldOfViewRad\022!\n\014bandwidth_hz\030\002 \001" +
      "(\001R\013bandwidthHz\022.\n\023noise_temperature_k\030\003" +
      " \001(\001R\021noiseTemperatureK\022-\n\022efficiency_pe" +
      "rcent\030\004 \001(\001R\021efficiencyPercent\022(\n\020dark_c" +
      "urrent_amp\030\005 \001(\001R\016darkCurrentAmp\022,\n\022load" +
      "_impedance_ohm\030\006 \001(\001R\020loadImpedanceOhm\022N" +
      "\n$optical_bandpass_filter_bandwidth_hz\030\007" +
      " \001(\001R opticalBandpassFilterBandwidthHz\0222" +
      "\n\025sky_spectral_radiance\030\010 \001(\001R\023skySpectr" +
      "alRadiance\022C\n\036sun_spectral_radiant_emitt" +
      "ance\030\t \001(\001R\033sunSpectralRadiantEmittance\022" +
      "!\n\014wavelength_m\030\n \001(\001R\013wavelengthMB\024\n\022ph" +
      "otodetector_typeBD\n com.aalyria.spacetim" +
      "e.api.commonZ aalyria.com/spacetime/api/" +
      "common"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aalyria.spacetime.api.common.Channel.getDescriptor(),
          com.aalyria.spacetime.api.common.Wireless.getDescriptor(),
        });
    internal_static_aalyria_spacetime_api_common_RxChannels_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_aalyria_spacetime_api_common_RxChannels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_RxChannels_descriptor,
        new java.lang.String[] { "CenterFrequencyHz", });
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor,
        new java.lang.String[] { "Name", "ChannelSet", "ChannelSelectionMethod", "SignalProcessingStep", });
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_descriptor =
      internal_static_aalyria_spacetime_api_common_ReceiverDefinition_descriptor.getNestedTypes().get(0);
    internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_ReceiverDefinition_ChannelSetEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_ReceiveSignalProcessor_descriptor,
        new java.lang.String[] { "Filter", "Photodetector", "Amplifier", "GainOrLoss", "Type", });
    internal_static_aalyria_spacetime_api_common_Filter_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_aalyria_spacetime_api_common_Filter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_Filter_descriptor,
        new java.lang.String[] { "FrequencyHz", "LowerBandwidthLimitHz", "UpperBandwidthLimitHz", "NoiseTemperatureK", "Rectangular", "Linear", "FilterType", });
    internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor =
      internal_static_aalyria_spacetime_api_common_Filter_descriptor.getNestedTypes().get(0);
    internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_Filter_RectangularFilterDefinition_descriptor,
        new java.lang.String[] { });
    internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor =
      internal_static_aalyria_spacetime_api_common_Filter_descriptor.getNestedTypes().get(1);
    internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_Filter_LinearFilterDefinition_descriptor,
        new java.lang.String[] { "RejectionDbPerHz", });
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor,
        new java.lang.String[] { "AvalanchePhotodiode", "PinPhotodiode", "PhotodetectorType", });
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor =
      internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor.getNestedTypes().get(0);
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_AvalanchePhotodiodeDefinition_descriptor,
        new java.lang.String[] { "FieldOfViewRad", "BandwidthHz", "NoiseTemperatureK", "EfficiencyPercent", "DarkCurrentAmp", "LoadImpedanceOhm", "NoiseFactor", "GainDb", "OpticalBandpassFilterBandwidthHz", "SkySpectralRadiance", "SunSpectralRadiantEmittance", "WavelengthM", });
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor =
      internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_descriptor.getNestedTypes().get(1);
    internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_aalyria_spacetime_api_common_PhotodetectorDefinition_PinPhotodiodeDefinition_descriptor,
        new java.lang.String[] { "FieldOfViewRad", "BandwidthHz", "NoiseTemperatureK", "EfficiencyPercent", "DarkCurrentAmp", "LoadImpedanceOhm", "OpticalBandpassFilterBandwidthHz", "SkySpectralRadiance", "SunSpectralRadiantEmittance", "WavelengthM", });
    com.aalyria.spacetime.api.common.Channel.getDescriptor();
    com.aalyria.spacetime.api.common.Wireless.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
