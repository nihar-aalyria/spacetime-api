// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/tunnel.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthenticationAlgorithm int32

const (
	AuthenticationAlgorithm_AUTH_ALGO_UNSPECIFIED AuthenticationAlgorithm = 0
	AuthenticationAlgorithm_HMAC_SHA1_96          AuthenticationAlgorithm = 1
)

// Enum value maps for AuthenticationAlgorithm.
var (
	AuthenticationAlgorithm_name = map[int32]string{
		0: "AUTH_ALGO_UNSPECIFIED",
		1: "HMAC_SHA1_96",
	}
	AuthenticationAlgorithm_value = map[string]int32{
		"AUTH_ALGO_UNSPECIFIED": 0,
		"HMAC_SHA1_96":          1,
	}
)

func (x AuthenticationAlgorithm) Enum() *AuthenticationAlgorithm {
	p := new(AuthenticationAlgorithm)
	*p = x
	return p
}

func (x AuthenticationAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_tunnel_proto_enumTypes[0].Descriptor()
}

func (AuthenticationAlgorithm) Type() protoreflect.EnumType {
	return &file_api_common_tunnel_proto_enumTypes[0]
}

func (x AuthenticationAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthenticationAlgorithm) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthenticationAlgorithm(num)
	return nil
}

// Deprecated: Use AuthenticationAlgorithm.Descriptor instead.
func (AuthenticationAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{0}
}

type EncryptionAlgorithm int32

const (
	EncryptionAlgorithm_ENCRYPTION_ALGO_UNSPECIFIED EncryptionAlgorithm = 0
	EncryptionAlgorithm_AES_CBC_128                 EncryptionAlgorithm = 1
)

// Enum value maps for EncryptionAlgorithm.
var (
	EncryptionAlgorithm_name = map[int32]string{
		0: "ENCRYPTION_ALGO_UNSPECIFIED",
		1: "AES_CBC_128",
	}
	EncryptionAlgorithm_value = map[string]int32{
		"ENCRYPTION_ALGO_UNSPECIFIED": 0,
		"AES_CBC_128":                 1,
	}
)

func (x EncryptionAlgorithm) Enum() *EncryptionAlgorithm {
	p := new(EncryptionAlgorithm)
	*p = x
	return p
}

func (x EncryptionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_tunnel_proto_enumTypes[1].Descriptor()
}

func (EncryptionAlgorithm) Type() protoreflect.EnumType {
	return &file_api_common_tunnel_proto_enumTypes[1]
}

func (x EncryptionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EncryptionAlgorithm) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EncryptionAlgorithm(num)
	return nil
}

// Deprecated: Use EncryptionAlgorithm.Descriptor instead.
func (EncryptionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{1}
}

type EspProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authentication *EspProtocol_EspIntegrity `protobuf:"bytes,1,opt,name=authentication" json:"authentication,omitempty"`
	Encryption     *EspProtocol_EspPrivacy   `protobuf:"bytes,2,opt,name=encryption" json:"encryption,omitempty"`
}

func (x *EspProtocol) Reset() {
	*x = EspProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspProtocol) ProtoMessage() {}

func (x *EspProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspProtocol.ProtoReflect.Descriptor instead.
func (*EspProtocol) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *EspProtocol) GetAuthentication() *EspProtocol_EspIntegrity {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *EspProtocol) GetEncryption() *EspProtocol_EspPrivacy {
	if x != nil {
		return x.Encryption
	}
	return nil
}

type EspParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityParametersIndex *uint32                   `protobuf:"varint,3,opt,name=security_parameters_index,json=securityParametersIndex" json:"security_parameters_index,omitempty"`
	Authentication          *EspParameters_EspAuth    `protobuf:"bytes,1,opt,name=authentication" json:"authentication,omitempty"`
	Encryption              *EspParameters_EspEncrypt `protobuf:"bytes,2,opt,name=encryption" json:"encryption,omitempty"`
}

func (x *EspParameters) Reset() {
	*x = EspParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspParameters) ProtoMessage() {}

func (x *EspParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspParameters.ProtoReflect.Descriptor instead.
func (*EspParameters) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{1}
}

func (x *EspParameters) GetSecurityParametersIndex() uint32 {
	if x != nil && x.SecurityParametersIndex != nil {
		return *x.SecurityParametersIndex
	}
	return 0
}

func (x *EspParameters) GetAuthentication() *EspParameters_EspAuth {
	if x != nil {
		return x.Authentication
	}
	return nil
}

func (x *EspParameters) GetEncryption() *EspParameters_EspEncrypt {
	if x != nil {
		return x.Encryption
	}
	return nil
}

type WrappedKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnwrapperKeyName *string `protobuf:"bytes,1,opt,name=unwrapper_key_name,json=unwrapperKeyName" json:"unwrapper_key_name,omitempty"`
	WrappedKey       []byte  `protobuf:"bytes,2,opt,name=wrapped_key,json=wrappedKey" json:"wrapped_key,omitempty"`
}

func (x *WrappedKey) Reset() {
	*x = WrappedKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrappedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrappedKey) ProtoMessage() {}

func (x *WrappedKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrappedKey.ProtoReflect.Descriptor instead.
func (*WrappedKey) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{2}
}

func (x *WrappedKey) GetUnwrapperKeyName() string {
	if x != nil && x.UnwrapperKeyName != nil {
		return *x.UnwrapperKeyName
	}
	return ""
}

func (x *WrappedKey) GetWrappedKey() []byte {
	if x != nil {
		return x.WrappedKey
	}
	return nil
}

type TunnelMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Protocol:
	//
	//	*TunnelMethod_Esp
	//	*TunnelMethod_None
	Protocol isTunnelMethod_Protocol `protobuf_oneof:"protocol"`
}

func (x *TunnelMethod) Reset() {
	*x = TunnelMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelMethod) ProtoMessage() {}

func (x *TunnelMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelMethod.ProtoReflect.Descriptor instead.
func (*TunnelMethod) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{3}
}

func (m *TunnelMethod) GetProtocol() isTunnelMethod_Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (x *TunnelMethod) GetEsp() *EspProtocol {
	if x, ok := x.GetProtocol().(*TunnelMethod_Esp); ok {
		return x.Esp
	}
	return nil
}

func (x *TunnelMethod) GetNone() *emptypb.Empty {
	if x, ok := x.GetProtocol().(*TunnelMethod_None); ok {
		return x.None
	}
	return nil
}

type isTunnelMethod_Protocol interface {
	isTunnelMethod_Protocol()
}

type TunnelMethod_Esp struct {
	Esp *EspProtocol `protobuf:"bytes,1,opt,name=esp,oneof"`
}

type TunnelMethod_None struct {
	None *emptypb.Empty `protobuf:"bytes,2,opt,name=none,oneof"`
}

func (*TunnelMethod_Esp) isTunnelMethod_Protocol() {}

func (*TunnelMethod_None) isTunnelMethod_Protocol() {}

type EspProtocol_EspIntegrity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm *AuthenticationAlgorithm `protobuf:"varint,1,opt,name=algorithm,enum=aalyria.spacetime.api.common.AuthenticationAlgorithm" json:"algorithm,omitempty"`
}

func (x *EspProtocol_EspIntegrity) Reset() {
	*x = EspProtocol_EspIntegrity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspProtocol_EspIntegrity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspProtocol_EspIntegrity) ProtoMessage() {}

func (x *EspProtocol_EspIntegrity) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspProtocol_EspIntegrity.ProtoReflect.Descriptor instead.
func (*EspProtocol_EspIntegrity) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EspProtocol_EspIntegrity) GetAlgorithm() AuthenticationAlgorithm {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return AuthenticationAlgorithm_AUTH_ALGO_UNSPECIFIED
}

type EspProtocol_EspPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm *EncryptionAlgorithm `protobuf:"varint,1,opt,name=algorithm,enum=aalyria.spacetime.api.common.EncryptionAlgorithm" json:"algorithm,omitempty"`
}

func (x *EspProtocol_EspPrivacy) Reset() {
	*x = EspProtocol_EspPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspProtocol_EspPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspProtocol_EspPrivacy) ProtoMessage() {}

func (x *EspProtocol_EspPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspProtocol_EspPrivacy.ProtoReflect.Descriptor instead.
func (*EspProtocol_EspPrivacy) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{0, 1}
}

func (x *EspProtocol_EspPrivacy) GetAlgorithm() EncryptionAlgorithm {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return EncryptionAlgorithm_ENCRYPTION_ALGO_UNSPECIFIED
}

type EspParameters_EspAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm *AuthenticationAlgorithm `protobuf:"varint,1,opt,name=algorithm,enum=aalyria.spacetime.api.common.AuthenticationAlgorithm" json:"algorithm,omitempty"`
	Key       *WrappedKey              `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (x *EspParameters_EspAuth) Reset() {
	*x = EspParameters_EspAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspParameters_EspAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspParameters_EspAuth) ProtoMessage() {}

func (x *EspParameters_EspAuth) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspParameters_EspAuth.ProtoReflect.Descriptor instead.
func (*EspParameters_EspAuth) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{1, 0}
}

func (x *EspParameters_EspAuth) GetAlgorithm() AuthenticationAlgorithm {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return AuthenticationAlgorithm_AUTH_ALGO_UNSPECIFIED
}

func (x *EspParameters_EspAuth) GetKey() *WrappedKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type EspParameters_EspEncrypt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm *EncryptionAlgorithm `protobuf:"varint,1,opt,name=algorithm,enum=aalyria.spacetime.api.common.EncryptionAlgorithm" json:"algorithm,omitempty"`
	Key       *WrappedKey          `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (x *EspParameters_EspEncrypt) Reset() {
	*x = EspParameters_EspEncrypt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_tunnel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EspParameters_EspEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EspParameters_EspEncrypt) ProtoMessage() {}

func (x *EspParameters_EspEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_tunnel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EspParameters_EspEncrypt.ProtoReflect.Descriptor instead.
func (*EspParameters_EspEncrypt) Descriptor() ([]byte, []int) {
	return file_api_common_tunnel_proto_rawDescGZIP(), []int{1, 1}
}

func (x *EspParameters_EspEncrypt) GetAlgorithm() EncryptionAlgorithm {
	if x != nil && x.Algorithm != nil {
		return *x.Algorithm
	}
	return EncryptionAlgorithm_ENCRYPTION_ALGO_UNSPECIFIED
}

func (x *EspParameters_EspEncrypt) GetKey() *WrappedKey {
	if x != nil {
		return x.Key
	}
	return nil
}

var File_api_common_tunnel_proto protoreflect.FileDescriptor

var file_api_common_tunnel_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x03, 0x0a, 0x0b, 0x45, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x5e, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x70, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x73, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x73, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x0a,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x69, 0x0a, 0x0c, 0x45, 0x73,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x1a, 0x63, 0x0a, 0x0a, 0x45, 0x73, 0x70, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x12, 0x4f, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xb9, 0x04, 0x0a, 0x0d, 0x45,
	0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x19,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x5b, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x73,
	0x70, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x61, 0x6c, 0x79,
	0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x73, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x73, 0x70, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9a, 0x01,
	0x0a, 0x07, 0x45, 0x73, 0x70, 0x41, 0x75, 0x74, 0x68, 0x12, 0x53, 0x0a, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x3a,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x99, 0x01, 0x0a, 0x0a, 0x45,
	0x73, 0x70, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x4f, 0x0a, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52,
	0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x3a, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x5b, 0x0a, 0x0a, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x6e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x75, 0x6e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x4b, 0x65, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x3d, 0x0a, 0x03, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x73, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4a, 0x08, 0x08,
	0x03, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x2a, 0x46, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x48, 0x4d, 0x41, 0x43, 0x5f, 0x53, 0x48, 0x41, 0x31, 0x5f, 0x39, 0x36, 0x10, 0x01, 0x2a,
	0x47, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x45, 0x53, 0x5f, 0x43,
	0x42, 0x43, 0x5f, 0x31, 0x32, 0x38, 0x10, 0x01, 0x42, 0x44, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x20, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_api_common_tunnel_proto_rawDescOnce sync.Once
	file_api_common_tunnel_proto_rawDescData = file_api_common_tunnel_proto_rawDesc
)

func file_api_common_tunnel_proto_rawDescGZIP() []byte {
	file_api_common_tunnel_proto_rawDescOnce.Do(func() {
		file_api_common_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_tunnel_proto_rawDescData)
	})
	return file_api_common_tunnel_proto_rawDescData
}

var file_api_common_tunnel_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_common_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_common_tunnel_proto_goTypes = []interface{}{
	(AuthenticationAlgorithm)(0),     // 0: aalyria.spacetime.api.common.AuthenticationAlgorithm
	(EncryptionAlgorithm)(0),         // 1: aalyria.spacetime.api.common.EncryptionAlgorithm
	(*EspProtocol)(nil),              // 2: aalyria.spacetime.api.common.EspProtocol
	(*EspParameters)(nil),            // 3: aalyria.spacetime.api.common.EspParameters
	(*WrappedKey)(nil),               // 4: aalyria.spacetime.api.common.WrappedKey
	(*TunnelMethod)(nil),             // 5: aalyria.spacetime.api.common.TunnelMethod
	(*EspProtocol_EspIntegrity)(nil), // 6: aalyria.spacetime.api.common.EspProtocol.EspIntegrity
	(*EspProtocol_EspPrivacy)(nil),   // 7: aalyria.spacetime.api.common.EspProtocol.EspPrivacy
	(*EspParameters_EspAuth)(nil),    // 8: aalyria.spacetime.api.common.EspParameters.EspAuth
	(*EspParameters_EspEncrypt)(nil), // 9: aalyria.spacetime.api.common.EspParameters.EspEncrypt
	(*emptypb.Empty)(nil),            // 10: google.protobuf.Empty
}
var file_api_common_tunnel_proto_depIdxs = []int32{
	6,  // 0: aalyria.spacetime.api.common.EspProtocol.authentication:type_name -> aalyria.spacetime.api.common.EspProtocol.EspIntegrity
	7,  // 1: aalyria.spacetime.api.common.EspProtocol.encryption:type_name -> aalyria.spacetime.api.common.EspProtocol.EspPrivacy
	8,  // 2: aalyria.spacetime.api.common.EspParameters.authentication:type_name -> aalyria.spacetime.api.common.EspParameters.EspAuth
	9,  // 3: aalyria.spacetime.api.common.EspParameters.encryption:type_name -> aalyria.spacetime.api.common.EspParameters.EspEncrypt
	2,  // 4: aalyria.spacetime.api.common.TunnelMethod.esp:type_name -> aalyria.spacetime.api.common.EspProtocol
	10, // 5: aalyria.spacetime.api.common.TunnelMethod.none:type_name -> google.protobuf.Empty
	0,  // 6: aalyria.spacetime.api.common.EspProtocol.EspIntegrity.algorithm:type_name -> aalyria.spacetime.api.common.AuthenticationAlgorithm
	1,  // 7: aalyria.spacetime.api.common.EspProtocol.EspPrivacy.algorithm:type_name -> aalyria.spacetime.api.common.EncryptionAlgorithm
	0,  // 8: aalyria.spacetime.api.common.EspParameters.EspAuth.algorithm:type_name -> aalyria.spacetime.api.common.AuthenticationAlgorithm
	4,  // 9: aalyria.spacetime.api.common.EspParameters.EspAuth.key:type_name -> aalyria.spacetime.api.common.WrappedKey
	1,  // 10: aalyria.spacetime.api.common.EspParameters.EspEncrypt.algorithm:type_name -> aalyria.spacetime.api.common.EncryptionAlgorithm
	4,  // 11: aalyria.spacetime.api.common.EspParameters.EspEncrypt.key:type_name -> aalyria.spacetime.api.common.WrappedKey
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_common_tunnel_proto_init() }
func file_api_common_tunnel_proto_init() {
	if File_api_common_tunnel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_common_tunnel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrappedKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspProtocol_EspIntegrity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspProtocol_EspPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspParameters_EspAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_tunnel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EspParameters_EspEncrypt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_tunnel_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*TunnelMethod_Esp)(nil),
		(*TunnelMethod_None)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_tunnel_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_tunnel_proto_goTypes,
		DependencyIndexes: file_api_common_tunnel_proto_depIdxs,
		EnumInfos:         file_api_common_tunnel_proto_enumTypes,
		MessageInfos:      file_api_common_tunnel_proto_msgTypes,
	}.Build()
	File_api_common_tunnel_proto = out.File
	file_api_common_tunnel_proto_rawDesc = nil
	file_api_common_tunnel_proto_goTypes = nil
	file_api_common_tunnel_proto_depIdxs = nil
}
