// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/wireless_transmitter.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxChannels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel map[uint64]*TxChannels_TxChannelParams `protobuf:"bytes,1,rep,name=channel" json:"channel,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *TxChannels) Reset() {
	*x = TxChannels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_transmitter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxChannels) ProtoMessage() {}

func (x *TxChannels) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_transmitter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxChannels.ProtoReflect.Descriptor instead.
func (*TxChannels) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_transmitter_proto_rawDescGZIP(), []int{0}
}

func (x *TxChannels) GetChannel() map[uint64]*TxChannels_TxChannelParams {
	if x != nil {
		return x.Channel
	}
	return nil
}

type TransmitterDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   *string                    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ChannelSet             map[string]*TxChannels     `protobuf:"bytes,14,rep,name=channel_set,json=channelSet" json:"channel_set,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ChannelSelectionMethod *ChannelSelectionMethod    `protobuf:"varint,13,opt,name=channel_selection_method,json=channelSelectionMethod,enum=aalyria.spacetime.api.common.ChannelSelectionMethod" json:"channel_selection_method,omitempty"`
	SignalProcessingStep   []*TransmitSignalProcessor `protobuf:"bytes,15,rep,name=signal_processing_step,json=signalProcessingStep" json:"signal_processing_step,omitempty"`
	CoverageHeatmapId      *string                    `protobuf:"bytes,17,opt,name=coverage_heatmap_id,json=coverageHeatmapId" json:"coverage_heatmap_id,omitempty"`
}

func (x *TransmitterDefinition) Reset() {
	*x = TransmitterDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_transmitter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransmitterDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitterDefinition) ProtoMessage() {}

func (x *TransmitterDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_transmitter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitterDefinition.ProtoReflect.Descriptor instead.
func (*TransmitterDefinition) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_transmitter_proto_rawDescGZIP(), []int{1}
}

func (x *TransmitterDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TransmitterDefinition) GetChannelSet() map[string]*TxChannels {
	if x != nil {
		return x.ChannelSet
	}
	return nil
}

func (x *TransmitterDefinition) GetChannelSelectionMethod() ChannelSelectionMethod {
	if x != nil && x.ChannelSelectionMethod != nil {
		return *x.ChannelSelectionMethod
	}
	return ChannelSelectionMethod_CHANNEL_SELECTION_METHOD_UNKNOWN
}

func (x *TransmitterDefinition) GetSignalProcessingStep() []*TransmitSignalProcessor {
	if x != nil {
		return x.SignalProcessingStep
	}
	return nil
}

func (x *TransmitterDefinition) GetCoverageHeatmapId() string {
	if x != nil && x.CoverageHeatmapId != nil {
		return *x.CoverageHeatmapId
	}
	return ""
}

type TransmitSignalProcessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*TransmitSignalProcessor_Amplifier
	//	*TransmitSignalProcessor_GainOrLoss
	Type isTransmitSignalProcessor_Type `protobuf_oneof:"type"`
}

func (x *TransmitSignalProcessor) Reset() {
	*x = TransmitSignalProcessor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_transmitter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransmitSignalProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitSignalProcessor) ProtoMessage() {}

func (x *TransmitSignalProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_transmitter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitSignalProcessor.ProtoReflect.Descriptor instead.
func (*TransmitSignalProcessor) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_transmitter_proto_rawDescGZIP(), []int{2}
}

func (m *TransmitSignalProcessor) GetType() isTransmitSignalProcessor_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TransmitSignalProcessor) GetAmplifier() *AmplifierDefinition {
	if x, ok := x.GetType().(*TransmitSignalProcessor_Amplifier); ok {
		return x.Amplifier
	}
	return nil
}

func (x *TransmitSignalProcessor) GetGainOrLoss() *MiscGainOrLoss {
	if x, ok := x.GetType().(*TransmitSignalProcessor_GainOrLoss); ok {
		return x.GainOrLoss
	}
	return nil
}

type isTransmitSignalProcessor_Type interface {
	isTransmitSignalProcessor_Type()
}

type TransmitSignalProcessor_Amplifier struct {
	Amplifier *AmplifierDefinition `protobuf:"bytes,1,opt,name=amplifier,oneof"`
}

type TransmitSignalProcessor_GainOrLoss struct {
	GainOrLoss *MiscGainOrLoss `protobuf:"bytes,2,opt,name=gain_or_loss,json=gainOrLoss,oneof"`
}

func (*TransmitSignalProcessor_Amplifier) isTransmitSignalProcessor_Type() {}

func (*TransmitSignalProcessor_GainOrLoss) isTransmitSignalProcessor_Type() {}

type TxChannels_TxChannelParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPowerWatts *float64 `protobuf:"fixed64,1,opt,name=max_power_watts,json=maxPowerWatts" json:"max_power_watts,omitempty"`
}

func (x *TxChannels_TxChannelParams) Reset() {
	*x = TxChannels_TxChannelParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_wireless_transmitter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxChannels_TxChannelParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxChannels_TxChannelParams) ProtoMessage() {}

func (x *TxChannels_TxChannelParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_wireless_transmitter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxChannels_TxChannelParams.ProtoReflect.Descriptor instead.
func (*TxChannels_TxChannelParams) Descriptor() ([]byte, []int) {
	return file_api_common_wireless_transmitter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TxChannels_TxChannelParams) GetMaxPowerWatts() float64 {
	if x != nil && x.MaxPowerWatts != nil {
		return *x.MaxPowerWatts
	}
	return 0
}

var File_api_common_wireless_transmitter_proto protoreflect.FileDescriptor

var file_api_common_wireless_transmitter_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72,
	0x65, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69, 0x72, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x0a, 0x54,
	0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x61, 0x6c,
	0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x39, 0x0a, 0x0f, 0x54, 0x78,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x74, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x57, 0x61, 0x74, 0x74, 0x73, 0x1a, 0x74, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x2e, 0x54, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa3, 0x04, 0x0a, 0x15,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x12,
	0x6e, 0x0a, 0x18, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x34, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x6b, 0x0a, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x74, 0x6d, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x74, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x1a, 0x67, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x03, 0x10,
	0x0d, 0x4a, 0x04, 0x08, 0x10, 0x10, 0x11, 0x4a, 0x08, 0x08, 0x12, 0x10, 0x80, 0x80, 0x80, 0x80,
	0x02, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x51, 0x0a,
	0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x50, 0x0a, 0x0c, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x63, 0x47, 0x61, 0x69, 0x6e, 0x4f, 0x72,
	0x4c, 0x6f, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x4c, 0x6f,
	0x73, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x44, 0x0a, 0x20, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x20,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_api_common_wireless_transmitter_proto_rawDescOnce sync.Once
	file_api_common_wireless_transmitter_proto_rawDescData = file_api_common_wireless_transmitter_proto_rawDesc
)

func file_api_common_wireless_transmitter_proto_rawDescGZIP() []byte {
	file_api_common_wireless_transmitter_proto_rawDescOnce.Do(func() {
		file_api_common_wireless_transmitter_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_wireless_transmitter_proto_rawDescData)
	})
	return file_api_common_wireless_transmitter_proto_rawDescData
}

var file_api_common_wireless_transmitter_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_common_wireless_transmitter_proto_goTypes = []interface{}{
	(*TxChannels)(nil),                 // 0: aalyria.spacetime.api.common.TxChannels
	(*TransmitterDefinition)(nil),      // 1: aalyria.spacetime.api.common.TransmitterDefinition
	(*TransmitSignalProcessor)(nil),    // 2: aalyria.spacetime.api.common.TransmitSignalProcessor
	(*TxChannels_TxChannelParams)(nil), // 3: aalyria.spacetime.api.common.TxChannels.TxChannelParams
	nil,                                // 4: aalyria.spacetime.api.common.TxChannels.ChannelEntry
	nil,                                // 5: aalyria.spacetime.api.common.TransmitterDefinition.ChannelSetEntry
	(ChannelSelectionMethod)(0),        // 6: aalyria.spacetime.api.common.ChannelSelectionMethod
	(*AmplifierDefinition)(nil),        // 7: aalyria.spacetime.api.common.AmplifierDefinition
	(*MiscGainOrLoss)(nil),             // 8: aalyria.spacetime.api.common.MiscGainOrLoss
}
var file_api_common_wireless_transmitter_proto_depIdxs = []int32{
	4, // 0: aalyria.spacetime.api.common.TxChannels.channel:type_name -> aalyria.spacetime.api.common.TxChannels.ChannelEntry
	5, // 1: aalyria.spacetime.api.common.TransmitterDefinition.channel_set:type_name -> aalyria.spacetime.api.common.TransmitterDefinition.ChannelSetEntry
	6, // 2: aalyria.spacetime.api.common.TransmitterDefinition.channel_selection_method:type_name -> aalyria.spacetime.api.common.ChannelSelectionMethod
	2, // 3: aalyria.spacetime.api.common.TransmitterDefinition.signal_processing_step:type_name -> aalyria.spacetime.api.common.TransmitSignalProcessor
	7, // 4: aalyria.spacetime.api.common.TransmitSignalProcessor.amplifier:type_name -> aalyria.spacetime.api.common.AmplifierDefinition
	8, // 5: aalyria.spacetime.api.common.TransmitSignalProcessor.gain_or_loss:type_name -> aalyria.spacetime.api.common.MiscGainOrLoss
	3, // 6: aalyria.spacetime.api.common.TxChannels.ChannelEntry.value:type_name -> aalyria.spacetime.api.common.TxChannels.TxChannelParams
	0, // 7: aalyria.spacetime.api.common.TransmitterDefinition.ChannelSetEntry.value:type_name -> aalyria.spacetime.api.common.TxChannels
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_api_common_wireless_transmitter_proto_init() }
func file_api_common_wireless_transmitter_proto_init() {
	if File_api_common_wireless_transmitter_proto != nil {
		return
	}
	file_api_common_channel_proto_init()
	file_api_common_wireless_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_common_wireless_transmitter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxChannels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_wireless_transmitter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransmitterDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_wireless_transmitter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransmitSignalProcessor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_wireless_transmitter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxChannels_TxChannelParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_wireless_transmitter_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TransmitSignalProcessor_Amplifier)(nil),
		(*TransmitSignalProcessor_GainOrLoss)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_wireless_transmitter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_wireless_transmitter_proto_goTypes,
		DependencyIndexes: file_api_common_wireless_transmitter_proto_depIdxs,
		MessageInfos:      file_api_common_wireless_transmitter_proto_msgTypes,
	}.Build()
	File_api_common_wireless_transmitter_proto = out.File
	file_api_common_wireless_transmitter_proto_rawDesc = nil
	file_api_common_wireless_transmitter_proto_goTypes = nil
	file_api_common_wireless_transmitter_proto_depIdxs = nil
}
