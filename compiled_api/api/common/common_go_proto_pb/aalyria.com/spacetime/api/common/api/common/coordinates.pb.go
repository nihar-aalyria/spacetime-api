// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.1
// source: api/common/coordinates.proto

package common

import (
	interval "google.golang.org/genproto/googleapis/type/interval"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CentralBody int32

const (
	CentralBody_UNKNOWN_CENTRAL_BODY CentralBody = 0
	CentralBody_EARTH                CentralBody = 1
	CentralBody_MOON                 CentralBody = 2
)

// Enum value maps for CentralBody.
var (
	CentralBody_name = map[int32]string{
		0: "UNKNOWN_CENTRAL_BODY",
		1: "EARTH",
		2: "MOON",
	}
	CentralBody_value = map[string]int32{
		"UNKNOWN_CENTRAL_BODY": 0,
		"EARTH":                1,
		"MOON":                 2,
	}
)

func (x CentralBody) Enum() *CentralBody {
	p := new(CentralBody)
	*p = x
	return p
}

func (x CentralBody) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CentralBody) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_coordinates_proto_enumTypes[0].Descriptor()
}

func (CentralBody) Type() protoreflect.EnumType {
	return &file_api_common_coordinates_proto_enumTypes[0]
}

func (x CentralBody) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CentralBody) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CentralBody(num)
	return nil
}

// Deprecated: Use CentralBody.Descriptor instead.
func (CentralBody) EnumDescriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{0}
}

type InterpolationMethod int32

const (
	InterpolationMethod_UNKNOWN_METHOD InterpolationMethod = 0
	InterpolationMethod_LINEAR         InterpolationMethod = 1
	InterpolationMethod_LAGRANGE       InterpolationMethod = 2
	InterpolationMethod_HERMITIAN      InterpolationMethod = 3
)

// Enum value maps for InterpolationMethod.
var (
	InterpolationMethod_name = map[int32]string{
		0: "UNKNOWN_METHOD",
		1: "LINEAR",
		2: "LAGRANGE",
		3: "HERMITIAN",
	}
	InterpolationMethod_value = map[string]int32{
		"UNKNOWN_METHOD": 0,
		"LINEAR":         1,
		"LAGRANGE":       2,
		"HERMITIAN":      3,
	}
)

func (x InterpolationMethod) Enum() *InterpolationMethod {
	p := new(InterpolationMethod)
	*p = x
	return p
}

func (x InterpolationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterpolationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_coordinates_proto_enumTypes[1].Descriptor()
}

func (InterpolationMethod) Type() protoreflect.EnumType {
	return &file_api_common_coordinates_proto_enumTypes[1]
}

func (x InterpolationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *InterpolationMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = InterpolationMethod(num)
	return nil
}

// Deprecated: Use InterpolationMethod.Descriptor instead.
func (InterpolationMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{1}
}

type StateVector_CoordinateFrame int32

const (
	StateVector_UNKNOWN_FRAME                       StateVector_CoordinateFrame = 0
	StateVector_EARTH_MOON_BARYCENTER_SYNODIC_FRAME StateVector_CoordinateFrame = 1
	StateVector_ECEF_FRAME                          StateVector_CoordinateFrame = 2
)

// Enum value maps for StateVector_CoordinateFrame.
var (
	StateVector_CoordinateFrame_name = map[int32]string{
		0: "UNKNOWN_FRAME",
		1: "EARTH_MOON_BARYCENTER_SYNODIC_FRAME",
		2: "ECEF_FRAME",
	}
	StateVector_CoordinateFrame_value = map[string]int32{
		"UNKNOWN_FRAME":                       0,
		"EARTH_MOON_BARYCENTER_SYNODIC_FRAME": 1,
		"ECEF_FRAME":                          2,
	}
)

func (x StateVector_CoordinateFrame) Enum() *StateVector_CoordinateFrame {
	p := new(StateVector_CoordinateFrame)
	*p = x
	return p
}

func (x StateVector_CoordinateFrame) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateVector_CoordinateFrame) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_coordinates_proto_enumTypes[2].Descriptor()
}

func (StateVector_CoordinateFrame) Type() protoreflect.EnumType {
	return &file_api_common_coordinates_proto_enumTypes[2]
}

func (x StateVector_CoordinateFrame) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StateVector_CoordinateFrame) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StateVector_CoordinateFrame(num)
	return nil
}

// Deprecated: Use StateVector_CoordinateFrame.Descriptor instead.
func (StateVector_CoordinateFrame) EnumDescriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{15, 0}
}

type StateVector_PropagationAlgorithm int32

const (
	StateVector_UNSPECIFIED_ALGORITHM                     StateVector_PropagationAlgorithm = 0
	StateVector_EARTH_MOON_THREE_BODY_NUMERICAL_ALGORITHM StateVector_PropagationAlgorithm = 1
)

// Enum value maps for StateVector_PropagationAlgorithm.
var (
	StateVector_PropagationAlgorithm_name = map[int32]string{
		0: "UNSPECIFIED_ALGORITHM",
		1: "EARTH_MOON_THREE_BODY_NUMERICAL_ALGORITHM",
	}
	StateVector_PropagationAlgorithm_value = map[string]int32{
		"UNSPECIFIED_ALGORITHM":                     0,
		"EARTH_MOON_THREE_BODY_NUMERICAL_ALGORITHM": 1,
	}
)

func (x StateVector_PropagationAlgorithm) Enum() *StateVector_PropagationAlgorithm {
	p := new(StateVector_PropagationAlgorithm)
	*p = x
	return p
}

func (x StateVector_PropagationAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateVector_PropagationAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_coordinates_proto_enumTypes[3].Descriptor()
}

func (StateVector_PropagationAlgorithm) Type() protoreflect.EnumType {
	return &file_api_common_coordinates_proto_enumTypes[3]
}

func (x StateVector_PropagationAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StateVector_PropagationAlgorithm) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StateVector_PropagationAlgorithm(num)
	return nil
}

// Deprecated: Use StateVector_PropagationAlgorithm.Descriptor instead.
func (StateVector_PropagationAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{15, 1}
}

type Motion_Type int32

const (
	Motion_MOTION_UNSPECIFIED          Motion_Type = 0
	Motion_GEODETIC_MSL                Motion_Type = 7
	Motion_GEODETIC_WGS84              Motion_Type = 1
	Motion_ECEF_FIXED                  Motion_Type = 2
	Motion_ECEF_INTERPOLATION          Motion_Type = 3
	Motion_CARTOGRAPHIC_WAYPOINTS      Motion_Type = 4
	Motion_TLE                         Motion_Type = 5
	Motion_KEPLERIAN_ELEMENTS          Motion_Type = 6
	Motion_STATE_VECTOR                Motion_Type = 9
	Motion_SELENOGRAPHIC_MLR           Motion_Type = 8
	Motion_STK_EPHEM_AND_ATTITUDE_FILE Motion_Type = 11
)

// Enum value maps for Motion_Type.
var (
	Motion_Type_name = map[int32]string{
		0:  "MOTION_UNSPECIFIED",
		7:  "GEODETIC_MSL",
		1:  "GEODETIC_WGS84",
		2:  "ECEF_FIXED",
		3:  "ECEF_INTERPOLATION",
		4:  "CARTOGRAPHIC_WAYPOINTS",
		5:  "TLE",
		6:  "KEPLERIAN_ELEMENTS",
		9:  "STATE_VECTOR",
		8:  "SELENOGRAPHIC_MLR",
		11: "STK_EPHEM_AND_ATTITUDE_FILE",
	}
	Motion_Type_value = map[string]int32{
		"MOTION_UNSPECIFIED":          0,
		"GEODETIC_MSL":                7,
		"GEODETIC_WGS84":              1,
		"ECEF_FIXED":                  2,
		"ECEF_INTERPOLATION":          3,
		"CARTOGRAPHIC_WAYPOINTS":      4,
		"TLE":                         5,
		"KEPLERIAN_ELEMENTS":          6,
		"STATE_VECTOR":                9,
		"SELENOGRAPHIC_MLR":           8,
		"STK_EPHEM_AND_ATTITUDE_FILE": 11,
	}
)

func (x Motion_Type) Enum() *Motion_Type {
	p := new(Motion_Type)
	*p = x
	return p
}

func (x Motion_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Motion_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_common_coordinates_proto_enumTypes[4].Descriptor()
}

func (Motion_Type) Type() protoreflect.EnumType {
	return &file_api_common_coordinates_proto_enumTypes[4]
}

func (x Motion_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Motion_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Motion_Type(num)
	return nil
}

// Deprecated: Use Motion_Type.Descriptor instead.
func (Motion_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{18, 0}
}

type GeodeticWgs84 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongitudeDeg *float64 `protobuf:"fixed64,1,opt,name=longitude_deg,json=longitudeDeg" json:"longitude_deg,omitempty"`
	LatitudeDeg  *float64 `protobuf:"fixed64,2,opt,name=latitude_deg,json=latitudeDeg" json:"latitude_deg,omitempty"`
	HeightWgs84M *float64 `protobuf:"fixed64,3,opt,name=height_wgs84_m,json=heightWgs84M" json:"height_wgs84_m,omitempty"`
}

func (x *GeodeticWgs84) Reset() {
	*x = GeodeticWgs84{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeodeticWgs84) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeodeticWgs84) ProtoMessage() {}

func (x *GeodeticWgs84) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeodeticWgs84.ProtoReflect.Descriptor instead.
func (*GeodeticWgs84) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{0}
}

func (x *GeodeticWgs84) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *GeodeticWgs84) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *GeodeticWgs84) GetHeightWgs84M() float64 {
	if x != nil && x.HeightWgs84M != nil {
		return *x.HeightWgs84M
	}
	return 0
}

type GeodeticMsl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongitudeDeg *float64 `protobuf:"fixed64,1,opt,name=longitude_deg,json=longitudeDeg" json:"longitude_deg,omitempty"`
	LatitudeDeg  *float64 `protobuf:"fixed64,2,opt,name=latitude_deg,json=latitudeDeg" json:"latitude_deg,omitempty"`
	HeightMslM   *float64 `protobuf:"fixed64,3,opt,name=height_msl_m,json=heightMslM" json:"height_msl_m,omitempty"`
}

func (x *GeodeticMsl) Reset() {
	*x = GeodeticMsl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeodeticMsl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeodeticMsl) ProtoMessage() {}

func (x *GeodeticMsl) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeodeticMsl.ProtoReflect.Descriptor instead.
func (*GeodeticMsl) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{1}
}

func (x *GeodeticMsl) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *GeodeticMsl) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *GeodeticMsl) GetHeightMslM() float64 {
	if x != nil && x.HeightMslM != nil {
		return *x.HeightMslM
	}
	return 0
}

type S2Cells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
}

func (x *S2Cells) Reset() {
	*x = S2Cells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2Cells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2Cells) ProtoMessage() {}

func (x *S2Cells) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2Cells.ProtoReflect.Descriptor instead.
func (*S2Cells) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{2}
}

func (x *S2Cells) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Cartesian struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XM *float64 `protobuf:"fixed64,1,req,name=x_m,json=xM" json:"x_m,omitempty"`
	YM *float64 `protobuf:"fixed64,2,req,name=y_m,json=yM" json:"y_m,omitempty"`
	ZM *float64 `protobuf:"fixed64,3,req,name=z_m,json=zM" json:"z_m,omitempty"`
}

func (x *Cartesian) Reset() {
	*x = Cartesian{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cartesian) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cartesian) ProtoMessage() {}

func (x *Cartesian) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cartesian.ProtoReflect.Descriptor instead.
func (*Cartesian) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{3}
}

func (x *Cartesian) GetXM() float64 {
	if x != nil && x.XM != nil {
		return *x.XM
	}
	return 0
}

func (x *Cartesian) GetYM() float64 {
	if x != nil && x.YM != nil {
		return *x.YM
	}
	return 0
}

func (x *Cartesian) GetZM() float64 {
	if x != nil && x.ZM != nil {
		return *x.ZM
	}
	return 0
}

type CartesianDot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XMps *float64 `protobuf:"fixed64,1,req,name=x_mps,json=xMps" json:"x_mps,omitempty"`
	YMps *float64 `protobuf:"fixed64,2,req,name=y_mps,json=yMps" json:"y_mps,omitempty"`
	ZMps *float64 `protobuf:"fixed64,3,req,name=z_mps,json=zMps" json:"z_mps,omitempty"`
}

func (x *CartesianDot) Reset() {
	*x = CartesianDot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartesianDot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartesianDot) ProtoMessage() {}

func (x *CartesianDot) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartesianDot.ProtoReflect.Descriptor instead.
func (*CartesianDot) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{4}
}

func (x *CartesianDot) GetXMps() float64 {
	if x != nil && x.XMps != nil {
		return *x.XMps
	}
	return 0
}

func (x *CartesianDot) GetYMps() float64 {
	if x != nil && x.YMps != nil {
		return *x.YMps
	}
	return 0
}

func (x *CartesianDot) GetZMps() float64 {
	if x != nil && x.ZMps != nil {
		return *x.ZMps
	}
	return 0
}

type Quaternion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	W *float64 `protobuf:"fixed64,1,req,name=w" json:"w,omitempty"`
	X *float64 `protobuf:"fixed64,2,req,name=x" json:"x,omitempty"`
	Y *float64 `protobuf:"fixed64,3,req,name=y" json:"y,omitempty"`
	Z *float64 `protobuf:"fixed64,4,req,name=z" json:"z,omitempty"`
}

func (x *Quaternion) Reset() {
	*x = Quaternion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quaternion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quaternion) ProtoMessage() {}

func (x *Quaternion) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quaternion.ProtoReflect.Descriptor instead.
func (*Quaternion) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{5}
}

func (x *Quaternion) GetW() float64 {
	if x != nil && x.W != nil {
		return *x.W
	}
	return 0
}

func (x *Quaternion) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Quaternion) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Quaternion) GetZ() float64 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

type YawPitchRoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	YawDeg   *float64 `protobuf:"fixed64,1,req,name=yaw_deg,json=yawDeg" json:"yaw_deg,omitempty"`
	PitchDeg *float64 `protobuf:"fixed64,2,req,name=pitch_deg,json=pitchDeg" json:"pitch_deg,omitempty"`
	RollDeg  *float64 `protobuf:"fixed64,3,req,name=roll_deg,json=rollDeg" json:"roll_deg,omitempty"`
}

func (x *YawPitchRoll) Reset() {
	*x = YawPitchRoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YawPitchRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YawPitchRoll) ProtoMessage() {}

func (x *YawPitchRoll) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YawPitchRoll.ProtoReflect.Descriptor instead.
func (*YawPitchRoll) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{6}
}

func (x *YawPitchRoll) GetYawDeg() float64 {
	if x != nil && x.YawDeg != nil {
		return *x.YawDeg
	}
	return 0
}

func (x *YawPitchRoll) GetPitchDeg() float64 {
	if x != nil && x.PitchDeg != nil {
		return *x.PitchDeg
	}
	return 0
}

func (x *YawPitchRoll) GetRollDeg() float64 {
	if x != nil && x.RollDeg != nil {
		return *x.RollDeg
	}
	return 0
}

type PointingVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzimuthDeg   *float64 `protobuf:"fixed64,1,opt,name=azimuth_deg,json=azimuthDeg" json:"azimuth_deg,omitempty"`
	ElevationDeg *float64 `protobuf:"fixed64,2,opt,name=elevation_deg,json=elevationDeg" json:"elevation_deg,omitempty"`
}

func (x *PointingVector) Reset() {
	*x = PointingVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointingVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointingVector) ProtoMessage() {}

func (x *PointingVector) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointingVector.ProtoReflect.Descriptor instead.
func (*PointingVector) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{7}
}

func (x *PointingVector) GetAzimuthDeg() float64 {
	if x != nil && x.AzimuthDeg != nil {
		return *x.AzimuthDeg
	}
	return 0
}

func (x *PointingVector) GetElevationDeg() float64 {
	if x != nil && x.ElevationDeg != nil {
		return *x.ElevationDeg
	}
	return 0
}

type PointAxes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point *Cartesian  `protobuf:"bytes,1,opt,name=point" json:"point,omitempty"`
	Axes  *Quaternion `protobuf:"bytes,2,opt,name=axes" json:"axes,omitempty"`
}

func (x *PointAxes) Reset() {
	*x = PointAxes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointAxes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointAxes) ProtoMessage() {}

func (x *PointAxes) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointAxes.ProtoReflect.Descriptor instead.
func (*PointAxes) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{8}
}

func (x *PointAxes) GetPoint() *Cartesian {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *PointAxes) GetAxes() *Quaternion {
	if x != nil {
		return x.Axes
	}
	return nil
}

type PointAxesTemporal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point   *Cartesian             `protobuf:"bytes,1,opt,name=point" json:"point,omitempty"`
	Axes    *Quaternion            `protobuf:"bytes,2,opt,name=axes" json:"axes,omitempty"`
	GpsTime *GpsTime               `protobuf:"bytes,4,opt,name=gps_time,json=gpsTime" json:"gps_time,omitempty"`
	Time    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time" json:"time,omitempty"`
}

func (x *PointAxesTemporal) Reset() {
	*x = PointAxesTemporal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointAxesTemporal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointAxesTemporal) ProtoMessage() {}

func (x *PointAxesTemporal) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointAxesTemporal.ProtoReflect.Descriptor instead.
func (*PointAxesTemporal) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{9}
}

func (x *PointAxesTemporal) GetPoint() *Cartesian {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *PointAxesTemporal) GetAxes() *Quaternion {
	if x != nil {
		return x.Axes
	}
	return nil
}

func (x *PointAxesTemporal) GetGpsTime() *GpsTime {
	if x != nil {
		return x.GpsTime
	}
	return nil
}

func (x *PointAxesTemporal) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type GeodeticWgs84Temporal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point *GeodeticWgs84         `protobuf:"bytes,1,opt,name=point" json:"point,omitempty"`
	Time  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time" json:"time,omitempty"`
}

func (x *GeodeticWgs84Temporal) Reset() {
	*x = GeodeticWgs84Temporal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeodeticWgs84Temporal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeodeticWgs84Temporal) ProtoMessage() {}

func (x *GeodeticWgs84Temporal) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeodeticWgs84Temporal.ProtoReflect.Descriptor instead.
func (*GeodeticWgs84Temporal) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{10}
}

func (x *GeodeticWgs84Temporal) GetPoint() *GeodeticWgs84 {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *GeodeticWgs84Temporal) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type PointAxesTemporalInterpolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationsOrientationsOverTime []*PointAxesTemporal `protobuf:"bytes,1,rep,name=locations_orientations_over_time,json=locationsOrientationsOverTime" json:"locations_orientations_over_time,omitempty"`
	InterpolationMethod           *InterpolationMethod `protobuf:"varint,2,opt,name=interpolation_method,json=interpolationMethod,enum=aalyria.spacetime.api.common.InterpolationMethod,def=1" json:"interpolation_method,omitempty"`
	InterpolationDegree           *int32               `protobuf:"varint,3,opt,name=interpolation_degree,json=interpolationDegree,def=1" json:"interpolation_degree,omitempty"`
}

// Default values for PointAxesTemporalInterpolation fields.
const (
	Default_PointAxesTemporalInterpolation_InterpolationMethod = InterpolationMethod_LINEAR
	Default_PointAxesTemporalInterpolation_InterpolationDegree = int32(1)
)

func (x *PointAxesTemporalInterpolation) Reset() {
	*x = PointAxesTemporalInterpolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointAxesTemporalInterpolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointAxesTemporalInterpolation) ProtoMessage() {}

func (x *PointAxesTemporalInterpolation) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointAxesTemporalInterpolation.ProtoReflect.Descriptor instead.
func (*PointAxesTemporalInterpolation) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{11}
}

func (x *PointAxesTemporalInterpolation) GetLocationsOrientationsOverTime() []*PointAxesTemporal {
	if x != nil {
		return x.LocationsOrientationsOverTime
	}
	return nil
}

func (x *PointAxesTemporalInterpolation) GetInterpolationMethod() InterpolationMethod {
	if x != nil && x.InterpolationMethod != nil {
		return *x.InterpolationMethod
	}
	return Default_PointAxesTemporalInterpolation_InterpolationMethod
}

func (x *PointAxesTemporalInterpolation) GetInterpolationDegree() int32 {
	if x != nil && x.InterpolationDegree != nil {
		return *x.InterpolationDegree
	}
	return Default_PointAxesTemporalInterpolation_InterpolationDegree
}

type GeodeticWgs84TemporalInterpolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationsOverTime   []*GeodeticWgs84Temporal `protobuf:"bytes,1,rep,name=locations_over_time,json=locationsOverTime" json:"locations_over_time,omitempty"`
	InterpolationMethod *InterpolationMethod     `protobuf:"varint,2,opt,name=interpolation_method,json=interpolationMethod,enum=aalyria.spacetime.api.common.InterpolationMethod,def=1" json:"interpolation_method,omitempty"`
	InterpolationDegree *int32                   `protobuf:"varint,3,opt,name=interpolation_degree,json=interpolationDegree,def=1" json:"interpolation_degree,omitempty"`
}

// Default values for GeodeticWgs84TemporalInterpolation fields.
const (
	Default_GeodeticWgs84TemporalInterpolation_InterpolationMethod = InterpolationMethod_LINEAR
	Default_GeodeticWgs84TemporalInterpolation_InterpolationDegree = int32(1)
)

func (x *GeodeticWgs84TemporalInterpolation) Reset() {
	*x = GeodeticWgs84TemporalInterpolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeodeticWgs84TemporalInterpolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeodeticWgs84TemporalInterpolation) ProtoMessage() {}

func (x *GeodeticWgs84TemporalInterpolation) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeodeticWgs84TemporalInterpolation.ProtoReflect.Descriptor instead.
func (*GeodeticWgs84TemporalInterpolation) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{12}
}

func (x *GeodeticWgs84TemporalInterpolation) GetLocationsOverTime() []*GeodeticWgs84Temporal {
	if x != nil {
		return x.LocationsOverTime
	}
	return nil
}

func (x *GeodeticWgs84TemporalInterpolation) GetInterpolationMethod() InterpolationMethod {
	if x != nil && x.InterpolationMethod != nil {
		return *x.InterpolationMethod
	}
	return Default_GeodeticWgs84TemporalInterpolation_InterpolationMethod
}

func (x *GeodeticWgs84TemporalInterpolation) GetInterpolationDegree() int32 {
	if x != nil && x.InterpolationDegree != nil {
		return *x.InterpolationDegree
	}
	return Default_GeodeticWgs84TemporalInterpolation_InterpolationDegree
}

type TwoLineElementSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line1 *string `protobuf:"bytes,1,opt,name=line1" json:"line1,omitempty"`
	Line2 *string `protobuf:"bytes,2,opt,name=line2" json:"line2,omitempty"`
}

func (x *TwoLineElementSet) Reset() {
	*x = TwoLineElementSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TwoLineElementSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoLineElementSet) ProtoMessage() {}

func (x *TwoLineElementSet) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwoLineElementSet.ProtoReflect.Descriptor instead.
func (*TwoLineElementSet) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{13}
}

func (x *TwoLineElementSet) GetLine1() string {
	if x != nil && x.Line1 != nil {
		return *x.Line1
	}
	return ""
}

func (x *TwoLineElementSet) GetLine2() string {
	if x != nil && x.Line2 != nil {
		return *x.Line2
	}
	return ""
}

type KeplerianElements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SemimajorAxisM         *float64     `protobuf:"fixed64,1,opt,name=semimajor_axis_m,json=semimajorAxisM" json:"semimajor_axis_m,omitempty"`
	Eccentricity           *float64     `protobuf:"fixed64,2,opt,name=eccentricity" json:"eccentricity,omitempty"`
	InclinationDeg         *float64     `protobuf:"fixed64,3,opt,name=inclination_deg,json=inclinationDeg" json:"inclination_deg,omitempty"`
	ArgumentOfPeriapsisDeg *float64     `protobuf:"fixed64,4,opt,name=argument_of_periapsis_deg,json=argumentOfPeriapsisDeg" json:"argument_of_periapsis_deg,omitempty"`
	RaanDeg                *float64     `protobuf:"fixed64,5,opt,name=raan_deg,json=raanDeg" json:"raan_deg,omitempty"`
	TrueAnomalyDeg         *float64     `protobuf:"fixed64,6,opt,name=true_anomaly_deg,json=trueAnomalyDeg" json:"true_anomaly_deg,omitempty"`
	Epoch                  *DateTime    `protobuf:"bytes,7,opt,name=epoch" json:"epoch,omitempty"`
	CentralBody            *CentralBody `protobuf:"varint,8,opt,name=central_body,json=centralBody,enum=aalyria.spacetime.api.common.CentralBody,def=1" json:"central_body,omitempty"`
}

// Default values for KeplerianElements fields.
const (
	Default_KeplerianElements_CentralBody = CentralBody_EARTH
)

func (x *KeplerianElements) Reset() {
	*x = KeplerianElements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeplerianElements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeplerianElements) ProtoMessage() {}

func (x *KeplerianElements) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeplerianElements.ProtoReflect.Descriptor instead.
func (*KeplerianElements) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{14}
}

func (x *KeplerianElements) GetSemimajorAxisM() float64 {
	if x != nil && x.SemimajorAxisM != nil {
		return *x.SemimajorAxisM
	}
	return 0
}

func (x *KeplerianElements) GetEccentricity() float64 {
	if x != nil && x.Eccentricity != nil {
		return *x.Eccentricity
	}
	return 0
}

func (x *KeplerianElements) GetInclinationDeg() float64 {
	if x != nil && x.InclinationDeg != nil {
		return *x.InclinationDeg
	}
	return 0
}

func (x *KeplerianElements) GetArgumentOfPeriapsisDeg() float64 {
	if x != nil && x.ArgumentOfPeriapsisDeg != nil {
		return *x.ArgumentOfPeriapsisDeg
	}
	return 0
}

func (x *KeplerianElements) GetRaanDeg() float64 {
	if x != nil && x.RaanDeg != nil {
		return *x.RaanDeg
	}
	return 0
}

func (x *KeplerianElements) GetTrueAnomalyDeg() float64 {
	if x != nil && x.TrueAnomalyDeg != nil {
		return *x.TrueAnomalyDeg
	}
	return 0
}

func (x *KeplerianElements) GetEpoch() *DateTime {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *KeplerianElements) GetCentralBody() CentralBody {
	if x != nil && x.CentralBody != nil {
		return *x.CentralBody
	}
	return Default_KeplerianElements_CentralBody
}

type StateVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                *timestamppb.Timestamp            `protobuf:"bytes,1,req,name=epoch" json:"epoch,omitempty"`
	CoordinateFrame      *StateVector_CoordinateFrame      `protobuf:"varint,2,opt,name=coordinate_frame,json=coordinateFrame,enum=aalyria.spacetime.api.common.StateVector_CoordinateFrame" json:"coordinate_frame,omitempty"`
	Position             *Cartesian                        `protobuf:"bytes,3,req,name=position" json:"position,omitempty"`
	Velocity             *CartesianDot                     `protobuf:"bytes,4,req,name=velocity" json:"velocity,omitempty"`
	PropagationAlgorithm *StateVector_PropagationAlgorithm `protobuf:"varint,5,opt,name=propagation_algorithm,json=propagationAlgorithm,enum=aalyria.spacetime.api.common.StateVector_PropagationAlgorithm" json:"propagation_algorithm,omitempty"`
	MassKg               *float64                          `protobuf:"fixed64,6,opt,name=mass_kg,json=massKg,def=2000" json:"mass_kg,omitempty"`
	Reflectivity         *float64                          `protobuf:"fixed64,7,opt,name=reflectivity,def=1" json:"reflectivity,omitempty"`
	ReflectiveAreaSqm    *float64                          `protobuf:"fixed64,8,opt,name=reflective_area_sqm,json=reflectiveAreaSqm,def=20" json:"reflective_area_sqm,omitempty"`
}

// Default values for StateVector fields.
const (
	Default_StateVector_MassKg            = float64(2000)
	Default_StateVector_Reflectivity      = float64(1)
	Default_StateVector_ReflectiveAreaSqm = float64(20)
)

func (x *StateVector) Reset() {
	*x = StateVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateVector) ProtoMessage() {}

func (x *StateVector) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateVector.ProtoReflect.Descriptor instead.
func (*StateVector) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{15}
}

func (x *StateVector) GetEpoch() *timestamppb.Timestamp {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *StateVector) GetCoordinateFrame() StateVector_CoordinateFrame {
	if x != nil && x.CoordinateFrame != nil {
		return *x.CoordinateFrame
	}
	return StateVector_UNKNOWN_FRAME
}

func (x *StateVector) GetPosition() *Cartesian {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *StateVector) GetVelocity() *CartesianDot {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *StateVector) GetPropagationAlgorithm() StateVector_PropagationAlgorithm {
	if x != nil && x.PropagationAlgorithm != nil {
		return *x.PropagationAlgorithm
	}
	return StateVector_UNSPECIFIED_ALGORITHM
}

func (x *StateVector) GetMassKg() float64 {
	if x != nil && x.MassKg != nil {
		return *x.MassKg
	}
	return Default_StateVector_MassKg
}

func (x *StateVector) GetReflectivity() float64 {
	if x != nil && x.Reflectivity != nil {
		return *x.Reflectivity
	}
	return Default_StateVector_Reflectivity
}

func (x *StateVector) GetReflectiveAreaSqm() float64 {
	if x != nil && x.ReflectiveAreaSqm != nil {
		return *x.ReflectiveAreaSqm
	}
	return Default_StateVector_ReflectiveAreaSqm
}

type SelenographicMlr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongitudeDeg *float64 `protobuf:"fixed64,1,opt,name=longitude_deg,json=longitudeDeg" json:"longitude_deg,omitempty"`
	LatitudeDeg  *float64 `protobuf:"fixed64,2,opt,name=latitude_deg,json=latitudeDeg" json:"latitude_deg,omitempty"`
	HeightMlrM   *float64 `protobuf:"fixed64,3,opt,name=height_mlr_m,json=heightMlrM" json:"height_mlr_m,omitempty"`
}

func (x *SelenographicMlr) Reset() {
	*x = SelenographicMlr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelenographicMlr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelenographicMlr) ProtoMessage() {}

func (x *SelenographicMlr) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelenographicMlr.ProtoReflect.Descriptor instead.
func (*SelenographicMlr) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{16}
}

func (x *SelenographicMlr) GetLongitudeDeg() float64 {
	if x != nil && x.LongitudeDeg != nil {
		return *x.LongitudeDeg
	}
	return 0
}

func (x *SelenographicMlr) GetLatitudeDeg() float64 {
	if x != nil && x.LatitudeDeg != nil {
		return *x.LatitudeDeg
	}
	return 0
}

func (x *SelenographicMlr) GetHeightMlrM() float64 {
	if x != nil && x.HeightMlrM != nil {
		return *x.HeightMlrM
	}
	return 0
}

type StkEphemAndAttitudeFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EphemFile    *string `protobuf:"bytes,1,opt,name=ephem_file,json=ephemFile" json:"ephem_file,omitempty"`
	AttitudeFile *string `protobuf:"bytes,2,opt,name=attitude_file,json=attitudeFile" json:"attitude_file,omitempty"`
}

func (x *StkEphemAndAttitudeFile) Reset() {
	*x = StkEphemAndAttitudeFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StkEphemAndAttitudeFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StkEphemAndAttitudeFile) ProtoMessage() {}

func (x *StkEphemAndAttitudeFile) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StkEphemAndAttitudeFile.ProtoReflect.Descriptor instead.
func (*StkEphemAndAttitudeFile) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{17}
}

func (x *StkEphemAndAttitudeFile) GetEphemFile() string {
	if x != nil && x.EphemFile != nil {
		return *x.EphemFile
	}
	return ""
}

func (x *StkEphemAndAttitudeFile) GetAttitudeFile() string {
	if x != nil && x.AttitudeFile != nil {
		return *x.AttitudeFile
	}
	return ""
}

type Motion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interval *interval.Interval `protobuf:"bytes,10,opt,name=interval" json:"interval,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Motion_GeodeticMsl
	//	*Motion_GeodeticWgs84
	//	*Motion_EcefFixed
	//	*Motion_EcefInterpolation
	//	*Motion_CartographicWaypoints
	//	*Motion_Tle
	//	*Motion_KeplerianElements
	//	*Motion_StateVector
	//	*Motion_SelenographicMlr
	//	*Motion_StkEphemAndAttitudeFile
	Type isMotion_Type `protobuf_oneof:"type"`
}

func (x *Motion) Reset() {
	*x = Motion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Motion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Motion) ProtoMessage() {}

func (x *Motion) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Motion.ProtoReflect.Descriptor instead.
func (*Motion) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{18}
}

func (x *Motion) GetInterval() *interval.Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (m *Motion) GetType() isMotion_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Motion) GetGeodeticMsl() *GeodeticMsl {
	if x, ok := x.GetType().(*Motion_GeodeticMsl); ok {
		return x.GeodeticMsl
	}
	return nil
}

func (x *Motion) GetGeodeticWgs84() *GeodeticWgs84 {
	if x, ok := x.GetType().(*Motion_GeodeticWgs84); ok {
		return x.GeodeticWgs84
	}
	return nil
}

func (x *Motion) GetEcefFixed() *PointAxes {
	if x, ok := x.GetType().(*Motion_EcefFixed); ok {
		return x.EcefFixed
	}
	return nil
}

func (x *Motion) GetEcefInterpolation() *PointAxesTemporalInterpolation {
	if x, ok := x.GetType().(*Motion_EcefInterpolation); ok {
		return x.EcefInterpolation
	}
	return nil
}

func (x *Motion) GetCartographicWaypoints() *GeodeticWgs84TemporalInterpolation {
	if x, ok := x.GetType().(*Motion_CartographicWaypoints); ok {
		return x.CartographicWaypoints
	}
	return nil
}

func (x *Motion) GetTle() *TwoLineElementSet {
	if x, ok := x.GetType().(*Motion_Tle); ok {
		return x.Tle
	}
	return nil
}

func (x *Motion) GetKeplerianElements() *KeplerianElements {
	if x, ok := x.GetType().(*Motion_KeplerianElements); ok {
		return x.KeplerianElements
	}
	return nil
}

func (x *Motion) GetStateVector() *StateVector {
	if x, ok := x.GetType().(*Motion_StateVector); ok {
		return x.StateVector
	}
	return nil
}

func (x *Motion) GetSelenographicMlr() *SelenographicMlr {
	if x, ok := x.GetType().(*Motion_SelenographicMlr); ok {
		return x.SelenographicMlr
	}
	return nil
}

func (x *Motion) GetStkEphemAndAttitudeFile() *StkEphemAndAttitudeFile {
	if x, ok := x.GetType().(*Motion_StkEphemAndAttitudeFile); ok {
		return x.StkEphemAndAttitudeFile
	}
	return nil
}

type isMotion_Type interface {
	isMotion_Type()
}

type Motion_GeodeticMsl struct {
	GeodeticMsl *GeodeticMsl `protobuf:"bytes,7,opt,name=geodetic_msl,json=geodeticMsl,oneof"`
}

type Motion_GeodeticWgs84 struct {
	GeodeticWgs84 *GeodeticWgs84 `protobuf:"bytes,1,opt,name=geodetic_wgs84,json=geodeticWgs84,oneof"`
}

type Motion_EcefFixed struct {
	EcefFixed *PointAxes `protobuf:"bytes,2,opt,name=ecef_fixed,json=ecefFixed,oneof"`
}

type Motion_EcefInterpolation struct {
	EcefInterpolation *PointAxesTemporalInterpolation `protobuf:"bytes,3,opt,name=ecef_interpolation,json=ecefInterpolation,oneof"`
}

type Motion_CartographicWaypoints struct {
	CartographicWaypoints *GeodeticWgs84TemporalInterpolation `protobuf:"bytes,4,opt,name=cartographic_waypoints,json=cartographicWaypoints,oneof"`
}

type Motion_Tle struct {
	Tle *TwoLineElementSet `protobuf:"bytes,5,opt,name=tle,oneof"`
}

type Motion_KeplerianElements struct {
	KeplerianElements *KeplerianElements `protobuf:"bytes,6,opt,name=keplerian_elements,json=keplerianElements,oneof"`
}

type Motion_StateVector struct {
	StateVector *StateVector `protobuf:"bytes,9,opt,name=state_vector,json=stateVector,oneof"`
}

type Motion_SelenographicMlr struct {
	SelenographicMlr *SelenographicMlr `protobuf:"bytes,8,opt,name=selenographic_mlr,json=selenographicMlr,oneof"`
}

type Motion_StkEphemAndAttitudeFile struct {
	StkEphemAndAttitudeFile *StkEphemAndAttitudeFile `protobuf:"bytes,11,opt,name=stk_ephem_and_attitude_file,json=stkEphemAndAttitudeFile,oneof"`
}

func (*Motion_GeodeticMsl) isMotion_Type() {}

func (*Motion_GeodeticWgs84) isMotion_Type() {}

func (*Motion_EcefFixed) isMotion_Type() {}

func (*Motion_EcefInterpolation) isMotion_Type() {}

func (*Motion_CartographicWaypoints) isMotion_Type() {}

func (*Motion_Tle) isMotion_Type() {}

func (*Motion_KeplerianElements) isMotion_Type() {}

func (*Motion_StateVector) isMotion_Type() {}

func (*Motion_SelenographicMlr) isMotion_Type() {}

func (*Motion_StkEphemAndAttitudeFile) isMotion_Type() {}

type MotionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Motions []*Motion `protobuf:"bytes,1,rep,name=motions" json:"motions,omitempty"`
}

func (x *MotionDefinition) Reset() {
	*x = MotionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_common_coordinates_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionDefinition) ProtoMessage() {}

func (x *MotionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_coordinates_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionDefinition.ProtoReflect.Descriptor instead.
func (*MotionDefinition) Descriptor() ([]byte, []int) {
	return file_api_common_coordinates_proto_rawDescGZIP(), []int{19}
}

func (x *MotionDefinition) GetMotions() []*Motion {
	if x != nil {
		return x.Motions
	}
	return nil
}

var File_api_common_coordinates_proto protoreflect.FileDescriptor

var file_api_common_coordinates_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x15, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x7d, 0x0a, 0x0d, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38,
	0x34, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64,
	0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x77, 0x67, 0x73, 0x38, 0x34, 0x5f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x57, 0x67, 0x73, 0x38, 0x34, 0x4d, 0x22,
	0x77, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x4d, 0x73, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x44, 0x65, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f,
	0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x6d, 0x73, 0x6c, 0x5f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x4d, 0x73, 0x6c, 0x4d, 0x22, 0x1b, 0x0a, 0x07, 0x53, 0x32, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69,
	0x61, 0x6e, 0x12, 0x0f, 0x0a, 0x03, 0x78, 0x5f, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x02, 0x78, 0x4d, 0x12, 0x0f, 0x0a, 0x03, 0x79, 0x5f, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01,
	0x52, 0x02, 0x79, 0x4d, 0x12, 0x0f, 0x0a, 0x03, 0x7a, 0x5f, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x01, 0x52, 0x02, 0x7a, 0x4d, 0x22, 0x4d, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69,
	0x61, 0x6e, 0x44, 0x6f, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x78, 0x5f, 0x6d, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x04, 0x78, 0x4d, 0x70, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x79, 0x5f,
	0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x04, 0x79, 0x4d, 0x70, 0x73, 0x12,
	0x13, 0x0a, 0x05, 0x7a, 0x5f, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x04,
	0x7a, 0x4d, 0x70, 0x73, 0x22, 0x44, 0x0a, 0x0a, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69,
	0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x01, 0x77,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0x5f, 0x0a, 0x0c, 0x59, 0x61,
	0x77, 0x50, 0x69, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x79, 0x61,
	0x77, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x79, 0x61, 0x77,
	0x44, 0x65, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x67,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x08, 0x70, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x01, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x44, 0x65, 0x67, 0x22, 0x56, 0x0a, 0x0e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x61, 0x7a, 0x69, 0x6d, 0x75, 0x74, 0x68, 0x44, 0x65, 0x67, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x04, 0x61, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x51, 0x75,
	0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x78, 0x65, 0x73, 0x22, 0x82,
	0x02, 0x0a, 0x11, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x61, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x51, 0x75, 0x61, 0x74, 0x65, 0x72, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x78, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x08, 0x67, 0x70, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x70, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x67, 0x70, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63,
	0x57, 0x67, 0x73, 0x38, 0x34, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x12, 0x41, 0x0a,
	0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64,
	0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38, 0x34, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xbe, 0x02, 0x0a, 0x1e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x78, 0x65, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x52, 0x1d,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6c, 0x0a,
	0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x06,
	0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x34, 0x0a, 0x14, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x13, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x22, 0xad, 0x02, 0x0a, 0x22, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67,
	0x73, 0x38, 0x34, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63, 0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73,
	0x38, 0x34, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x52, 0x11, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6c, 0x0a,
	0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x06,
	0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x34, 0x0a, 0x14, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x13, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x72, 0x65,
	0x65, 0x22, 0x3f, 0x0a, 0x11, 0x54, 0x77, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e,
	0x65, 0x32, 0x22, 0xa7, 0x03, 0x0a, 0x11, 0x4b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x69, 0x61, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6d, 0x69,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x73, 0x65, 0x6d, 0x69, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x41, 0x78, 0x69,
	0x73, 0x4d, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x12,
	0x39, 0x0a, 0x19, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x61, 0x70, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x16, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x50, 0x65,
	0x72, 0x69, 0x61, 0x70, 0x73, 0x69, 0x73, 0x44, 0x65, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61,
	0x61, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x72, 0x61,
	0x61, 0x6e, 0x44, 0x65, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x72, 0x75, 0x65, 0x5f, 0x61, 0x6e,
	0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x74, 0x72, 0x75, 0x65, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x44, 0x65, 0x67, 0x12,
	0x3c, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x53, 0x0a,
	0x0c, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x3a, 0x05,
	0x45, 0x41, 0x52, 0x54, 0x48, 0x52, 0x0b, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x42, 0x6f,
	0x64, 0x79, 0x4a, 0x08, 0x08, 0x09, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0xe2, 0x05, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x64,
	0x0a, 0x10, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x65, 0x73, 0x69, 0x61, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x08, 0x76, 0x65, 0x6c,
	0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x65,
	0x73, 0x69, 0x61, 0x6e, 0x44, 0x6f, 0x74, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x73, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x61, 0x73, 0x73, 0x5f, 0x6b,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x04, 0x32, 0x30, 0x30, 0x30, 0x52, 0x06, 0x6d,
	0x61, 0x73, 0x73, 0x4b, 0x67, 0x12, 0x25, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x01, 0x31, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x13,
	0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x71, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x02, 0x32, 0x30, 0x52, 0x11, 0x72,
	0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x72, 0x65, 0x61, 0x53, 0x71, 0x6d,
	0x22, 0x5d, 0x0a, 0x0f, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46,
	0x52, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x45, 0x41, 0x52, 0x54, 0x48, 0x5f,
	0x4d, 0x4f, 0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x52, 0x59, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f,
	0x53, 0x59, 0x4e, 0x4f, 0x44, 0x49, 0x43, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x45, 0x43, 0x45, 0x46, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x22,
	0x60, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d,
	0x10, 0x00, 0x12, 0x2d, 0x0a, 0x29, 0x45, 0x41, 0x52, 0x54, 0x48, 0x5f, 0x4d, 0x4f, 0x4f, 0x4e,
	0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x4e, 0x55, 0x4d, 0x45,
	0x52, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x10,
	0x01, 0x22, 0x7c, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x4d, 0x6c, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x67, 0x12, 0x20, 0x0a,
	0x0c, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x6c, 0x72, 0x5f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x6c, 0x72, 0x4d, 0x22,
	0x5d, 0x0a, 0x17, 0x53, 0x74, 0x6b, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x41, 0x6e, 0x64, 0x41, 0x74,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x70,
	0x68, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xea,
	0x09, 0x0a, 0x06, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x0c,
	0x67, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x4d, 0x73, 0x6c, 0x48, 0x00, 0x52,
	0x0b, 0x67, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x4d, 0x73, 0x6c, 0x12, 0x54, 0x0a, 0x0e,
	0x67, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x77, 0x67, 0x73, 0x38, 0x34, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38,
	0x34, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x6f, 0x64, 0x65, 0x74, 0x69, 0x63, 0x57, 0x67, 0x73,
	0x38, 0x34, 0x12, 0x48, 0x0a, 0x0a, 0x65, 0x63, 0x65, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x63, 0x65, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x6d, 0x0a, 0x12,
	0x65, 0x63, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x78, 0x65,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x65, 0x63, 0x65, 0x66, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x16, 0x63,
	0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x5f, 0x77, 0x61, 0x79, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x61,
	0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x65,
	0x74, 0x69, 0x63, 0x57, 0x67, 0x73, 0x38, 0x34, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x15, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x57, 0x61, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x03, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x54, 0x77, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x74, 0x6c, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x6b,
	0x65, 0x70, 0x6c, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69,
	0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x69, 0x61, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6b, 0x65, 0x70, 0x6c,
	0x65, 0x72, 0x69, 0x61, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4e, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x5d, 0x0a,
	0x11, 0x73, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x5f, 0x6d,
	0x6c, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72,
	0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x6e, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x4d, 0x6c, 0x72, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65,
	0x6e, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4d, 0x6c, 0x72, 0x12, 0x75, 0x0a, 0x1b,
	0x73, 0x74, 0x6b, 0x5f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x74,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x6b, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x17, 0x73, 0x74, 0x6b, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x41, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x4f, 0x44, 0x45, 0x54, 0x49, 0x43,
	0x5f, 0x4d, 0x53, 0x4c, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x4f, 0x44, 0x45, 0x54,
	0x49, 0x43, 0x5f, 0x57, 0x47, 0x53, 0x38, 0x34, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x43,
	0x45, 0x46, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x43,
	0x45, 0x46, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x52, 0x54, 0x4f, 0x47, 0x52, 0x41, 0x50, 0x48,
	0x49, 0x43, 0x5f, 0x57, 0x41, 0x59, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x10, 0x04, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x4b, 0x45, 0x50, 0x4c, 0x45,
	0x52, 0x49, 0x41, 0x4e, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x06, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10,
	0x09, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x4c, 0x45, 0x4e, 0x4f, 0x47, 0x52, 0x41, 0x50, 0x48,
	0x49, 0x43, 0x5f, 0x4d, 0x4c, 0x52, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x4b, 0x5f,
	0x45, 0x50, 0x48, 0x45, 0x4d, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x41, 0x54, 0x54, 0x49, 0x54, 0x55,
	0x44, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x0b, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x4a, 0x08, 0x08, 0x0c, 0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0x52, 0x0a, 0x10, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x07, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a,
	0x3c, 0x0a, 0x0b, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18,
	0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41,
	0x4c, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x41, 0x52, 0x54,
	0x48, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x52, 0x0a,
	0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x49, 0x4e, 0x45,
	0x41, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x41, 0x47, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x49, 0x41, 0x4e, 0x10,
	0x03, 0x42, 0x44, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x20, 0x61, 0x61, 0x6c, 0x79, 0x72, 0x69, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
}

var (
	file_api_common_coordinates_proto_rawDescOnce sync.Once
	file_api_common_coordinates_proto_rawDescData = file_api_common_coordinates_proto_rawDesc
)

func file_api_common_coordinates_proto_rawDescGZIP() []byte {
	file_api_common_coordinates_proto_rawDescOnce.Do(func() {
		file_api_common_coordinates_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_common_coordinates_proto_rawDescData)
	})
	return file_api_common_coordinates_proto_rawDescData
}

var file_api_common_coordinates_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_common_coordinates_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_common_coordinates_proto_goTypes = []interface{}{
	(CentralBody)(0),                           // 0: aalyria.spacetime.api.common.CentralBody
	(InterpolationMethod)(0),                   // 1: aalyria.spacetime.api.common.InterpolationMethod
	(StateVector_CoordinateFrame)(0),           // 2: aalyria.spacetime.api.common.StateVector.CoordinateFrame
	(StateVector_PropagationAlgorithm)(0),      // 3: aalyria.spacetime.api.common.StateVector.PropagationAlgorithm
	(Motion_Type)(0),                           // 4: aalyria.spacetime.api.common.Motion.Type
	(*GeodeticWgs84)(nil),                      // 5: aalyria.spacetime.api.common.GeodeticWgs84
	(*GeodeticMsl)(nil),                        // 6: aalyria.spacetime.api.common.GeodeticMsl
	(*S2Cells)(nil),                            // 7: aalyria.spacetime.api.common.S2Cells
	(*Cartesian)(nil),                          // 8: aalyria.spacetime.api.common.Cartesian
	(*CartesianDot)(nil),                       // 9: aalyria.spacetime.api.common.CartesianDot
	(*Quaternion)(nil),                         // 10: aalyria.spacetime.api.common.Quaternion
	(*YawPitchRoll)(nil),                       // 11: aalyria.spacetime.api.common.YawPitchRoll
	(*PointingVector)(nil),                     // 12: aalyria.spacetime.api.common.PointingVector
	(*PointAxes)(nil),                          // 13: aalyria.spacetime.api.common.PointAxes
	(*PointAxesTemporal)(nil),                  // 14: aalyria.spacetime.api.common.PointAxesTemporal
	(*GeodeticWgs84Temporal)(nil),              // 15: aalyria.spacetime.api.common.GeodeticWgs84Temporal
	(*PointAxesTemporalInterpolation)(nil),     // 16: aalyria.spacetime.api.common.PointAxesTemporalInterpolation
	(*GeodeticWgs84TemporalInterpolation)(nil), // 17: aalyria.spacetime.api.common.GeodeticWgs84TemporalInterpolation
	(*TwoLineElementSet)(nil),                  // 18: aalyria.spacetime.api.common.TwoLineElementSet
	(*KeplerianElements)(nil),                  // 19: aalyria.spacetime.api.common.KeplerianElements
	(*StateVector)(nil),                        // 20: aalyria.spacetime.api.common.StateVector
	(*SelenographicMlr)(nil),                   // 21: aalyria.spacetime.api.common.SelenographicMlr
	(*StkEphemAndAttitudeFile)(nil),            // 22: aalyria.spacetime.api.common.StkEphemAndAttitudeFile
	(*Motion)(nil),                             // 23: aalyria.spacetime.api.common.Motion
	(*MotionDefinition)(nil),                   // 24: aalyria.spacetime.api.common.MotionDefinition
	(*GpsTime)(nil),                            // 25: aalyria.spacetime.api.common.GpsTime
	(*timestamppb.Timestamp)(nil),              // 26: google.protobuf.Timestamp
	(*DateTime)(nil),                           // 27: aalyria.spacetime.api.common.DateTime
	(*interval.Interval)(nil),                  // 28: google.type.Interval
}
var file_api_common_coordinates_proto_depIdxs = []int32{
	8,  // 0: aalyria.spacetime.api.common.PointAxes.point:type_name -> aalyria.spacetime.api.common.Cartesian
	10, // 1: aalyria.spacetime.api.common.PointAxes.axes:type_name -> aalyria.spacetime.api.common.Quaternion
	8,  // 2: aalyria.spacetime.api.common.PointAxesTemporal.point:type_name -> aalyria.spacetime.api.common.Cartesian
	10, // 3: aalyria.spacetime.api.common.PointAxesTemporal.axes:type_name -> aalyria.spacetime.api.common.Quaternion
	25, // 4: aalyria.spacetime.api.common.PointAxesTemporal.gps_time:type_name -> aalyria.spacetime.api.common.GpsTime
	26, // 5: aalyria.spacetime.api.common.PointAxesTemporal.time:type_name -> google.protobuf.Timestamp
	5,  // 6: aalyria.spacetime.api.common.GeodeticWgs84Temporal.point:type_name -> aalyria.spacetime.api.common.GeodeticWgs84
	26, // 7: aalyria.spacetime.api.common.GeodeticWgs84Temporal.time:type_name -> google.protobuf.Timestamp
	14, // 8: aalyria.spacetime.api.common.PointAxesTemporalInterpolation.locations_orientations_over_time:type_name -> aalyria.spacetime.api.common.PointAxesTemporal
	1,  // 9: aalyria.spacetime.api.common.PointAxesTemporalInterpolation.interpolation_method:type_name -> aalyria.spacetime.api.common.InterpolationMethod
	15, // 10: aalyria.spacetime.api.common.GeodeticWgs84TemporalInterpolation.locations_over_time:type_name -> aalyria.spacetime.api.common.GeodeticWgs84Temporal
	1,  // 11: aalyria.spacetime.api.common.GeodeticWgs84TemporalInterpolation.interpolation_method:type_name -> aalyria.spacetime.api.common.InterpolationMethod
	27, // 12: aalyria.spacetime.api.common.KeplerianElements.epoch:type_name -> aalyria.spacetime.api.common.DateTime
	0,  // 13: aalyria.spacetime.api.common.KeplerianElements.central_body:type_name -> aalyria.spacetime.api.common.CentralBody
	26, // 14: aalyria.spacetime.api.common.StateVector.epoch:type_name -> google.protobuf.Timestamp
	2,  // 15: aalyria.spacetime.api.common.StateVector.coordinate_frame:type_name -> aalyria.spacetime.api.common.StateVector.CoordinateFrame
	8,  // 16: aalyria.spacetime.api.common.StateVector.position:type_name -> aalyria.spacetime.api.common.Cartesian
	9,  // 17: aalyria.spacetime.api.common.StateVector.velocity:type_name -> aalyria.spacetime.api.common.CartesianDot
	3,  // 18: aalyria.spacetime.api.common.StateVector.propagation_algorithm:type_name -> aalyria.spacetime.api.common.StateVector.PropagationAlgorithm
	28, // 19: aalyria.spacetime.api.common.Motion.interval:type_name -> google.type.Interval
	6,  // 20: aalyria.spacetime.api.common.Motion.geodetic_msl:type_name -> aalyria.spacetime.api.common.GeodeticMsl
	5,  // 21: aalyria.spacetime.api.common.Motion.geodetic_wgs84:type_name -> aalyria.spacetime.api.common.GeodeticWgs84
	13, // 22: aalyria.spacetime.api.common.Motion.ecef_fixed:type_name -> aalyria.spacetime.api.common.PointAxes
	16, // 23: aalyria.spacetime.api.common.Motion.ecef_interpolation:type_name -> aalyria.spacetime.api.common.PointAxesTemporalInterpolation
	17, // 24: aalyria.spacetime.api.common.Motion.cartographic_waypoints:type_name -> aalyria.spacetime.api.common.GeodeticWgs84TemporalInterpolation
	18, // 25: aalyria.spacetime.api.common.Motion.tle:type_name -> aalyria.spacetime.api.common.TwoLineElementSet
	19, // 26: aalyria.spacetime.api.common.Motion.keplerian_elements:type_name -> aalyria.spacetime.api.common.KeplerianElements
	20, // 27: aalyria.spacetime.api.common.Motion.state_vector:type_name -> aalyria.spacetime.api.common.StateVector
	21, // 28: aalyria.spacetime.api.common.Motion.selenographic_mlr:type_name -> aalyria.spacetime.api.common.SelenographicMlr
	22, // 29: aalyria.spacetime.api.common.Motion.stk_ephem_and_attitude_file:type_name -> aalyria.spacetime.api.common.StkEphemAndAttitudeFile
	23, // 30: aalyria.spacetime.api.common.MotionDefinition.motions:type_name -> aalyria.spacetime.api.common.Motion
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_api_common_coordinates_proto_init() }
func file_api_common_coordinates_proto_init() {
	if File_api_common_coordinates_proto != nil {
		return
	}
	file_api_common_time_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_common_coordinates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeodeticWgs84); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeodeticMsl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2Cells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cartesian); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartesianDot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quaternion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YawPitchRoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointingVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointAxes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointAxesTemporal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeodeticWgs84Temporal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointAxesTemporalInterpolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeodeticWgs84TemporalInterpolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TwoLineElementSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeplerianElements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelenographicMlr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StkEphemAndAttitudeFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Motion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_common_coordinates_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_common_coordinates_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Motion_GeodeticMsl)(nil),
		(*Motion_GeodeticWgs84)(nil),
		(*Motion_EcefFixed)(nil),
		(*Motion_EcefInterpolation)(nil),
		(*Motion_CartographicWaypoints)(nil),
		(*Motion_Tle)(nil),
		(*Motion_KeplerianElements)(nil),
		(*Motion_StateVector)(nil),
		(*Motion_SelenographicMlr)(nil),
		(*Motion_StkEphemAndAttitudeFile)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_common_coordinates_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_coordinates_proto_goTypes,
		DependencyIndexes: file_api_common_coordinates_proto_depIdxs,
		EnumInfos:         file_api_common_coordinates_proto_enumTypes,
		MessageInfos:      file_api_common_coordinates_proto_msgTypes,
	}.Build()
	File_api_common_coordinates_proto = out.File
	file_api_common_coordinates_proto_rawDesc = nil
	file_api_common_coordinates_proto_goTypes = nil
	file_api_common_coordinates_proto_depIdxs = nil
}
